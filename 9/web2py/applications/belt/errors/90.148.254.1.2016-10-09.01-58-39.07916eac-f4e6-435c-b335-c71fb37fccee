(dp1
S'output'
p2
S"<class 'sqlite3.OperationalError'> table check_for_con already exists"
p3
sS'layer'
p4
S'/home/tazjel/zweb2py/applications/belot/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\nif not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n    db = DAL(\'sqlite://storage.sqlite\',pool_size=1,check_reserved=[\'all\'])\nelse:\n    ## connect to Google BigTable (optional \'google:datastore://namespace\')\n    db = DAL(\'google:datastore+ndb\')\n    ## store sessions and tickets there\n    session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n## (optional) static assets folder versioning\n# response.static_version = \'0.0.0\'\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Service, PluginManager\n\nauth = Auth(db)\nservice = Service()\nplugins = PluginManager()\n\n# before define_tables()\nauth.settings.extra_fields[\'auth_user\'] = [\n    Field(\'username\', unique=True),\n    Field(\'name\', required=IS_NOT_EMPTY())\n    ]\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False)\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' if request.is_local else \'smtp.gmail.com:587\'\nmail.settings.sender = \'you@gmail.com\'\nmail.settings.login = \'username:password\'\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n## if you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, write your domain:api_key in private/janrain.key\nfrom gluon.contrib.login_methods.janrain_account import use_janrain\nuse_janrain(auth, filename=\'private/janrain.key\')\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n## after defining tables, uncomment below to enable auditing\n# auth.enable_record_versioning(db)\n\ndb.auth_user.first_name.readable = db.auth_user.first_name.writable = False\ndb.auth_user.last_name.readable = db.auth_user.last_name.writable = False\nauth.settings.login_next = URL("game","current")\nauth.settings.logout_next = URL("default","login")\nauth.settings.login_url = URL("default", "login")\n\ndb.define_table(\'game_status\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'player_status\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'player_type\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'game\',\n    Field(\'name\', default=\'Default Game\', required=IS_NOT_EMPTY()),\n    Field(\'description\', \'text\', default=\'\'),\n    Field(\'status_id\', \'reference game_status\', notnull=True)\n    )\n\ndb.define_table(\'player\',\n    Field(\'game_id\', \'reference game\', notnull=True),\n    Field(\'user_id\', \'reference auth_user\', notnull=True),\n    Field(\'target_id\', \'reference player\'),\n    Field(\'status_id\', \'reference player_status\', notnull=True),\n    Field(\'role_id\', \'reference player_type\', notnull=True)\n    )\n\nfrom gluon import current\ncurrent.db = db\n\ndb.game_status.update_or_insert(id = 1, name = \'not started\')\ndb.game_status.update_or_insert(id = 2, name = \'started\')\ndb.game_status.update_or_insert(id = 3, name = \'finished\')\ndb.player_status.update_or_insert(id = 1, name = \'alive\')\ndb.player_status.update_or_insert(id = 2, name = \'dead\')\ndb.player_type.update_or_insert(id = 1, name = \'host\')\ndb.player_type.update_or_insert(id = 2, name = \'player\')\ndb.player_type.update_or_insert(id = 3, name = \'banned\', description = \'A player that is no longer allowed to join this game\')\ndb.player_type.update_or_insert(id = 4, name = \'gone\', description = \'A player that has left the game after it has started\')\n\n########################\n\norder_classic = [11, 10, 14, 13, 12, 9, 8, 7]\norder_trump = [12, 9, 11, 10, 14, 13, 8, 7]\n\nvalue_classic = [11, 10, 4, 3, 2, 0, 0, 0]\nvalue_trump = [20, 14, 11, 10, 4, 3, 0, 0]\n\ndb.define_table(\'deck\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\n\ndb.define_table(\'cards\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\'),\n\tField(\'cards_value\'),\n\tField(\'color\'),\n\tField(\'trump\'),\n    )\n# db.cards.update_or_insert(id = 0, name = \'gone\', description = \'A player that has left the game after it has started\')\n\ndb.define_table(\'state_now\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'loot\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\ndb.define_table(\'cards_order_\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\ndb.define_table(\'deal\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'cards_values\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\ndb.define_table(\'auction\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'auction_history\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'contract\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\ndb.define_table(\'bonus_value_team_1\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\ndb.define_table(\'bonus_value_team_2\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\ndb.define_table(\'check_for_belote\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\ndb.define_table(\'check_for_con\',\n    Field(\'name\', required=IS_NOT_EMPTY()),\n    Field(\'description\')\n    )\n\n\n\ncards_list = [Card(c[0], c[1]) for c in itertools.product(range(7, 15), [\'Heart\', \'Diamond\', \'Spade\', \'Club\'])]\n\n\n\n\n#     def __init__(self):\n#         deck = [Card(c[0], c[1]) for c in itertools.product(range(7, 15), [\'Heart\', \'Diamond\', \'Spade\', \'Club\'])]\nimport random\nimport itertools\n\n\ndef shuffle():\n\trandom.shuffle(deck)\n\ndef display_deck():\n\tdisplay = "Display Deck"\n\ndef set_trump(card_color):\n\tfor card in deck:\n\t\tif card.color == card_color:\n\t\t\tcard.trump = True\n\t\telse:\n\t\t\tard.trump = False\n\n\n\n\n# loot_team_1 = []\n# bonus_value_team_1 = 0\n# loot_team_2 = []\n# bonus_value_team_2 = 0\n# players_list = [player_1, player_2, player_3, player_4]\n\n# deal(player_1, player_2, player_3, player_4, deck)\n\n# contract_value, trump, contracting_team = launch_auction()\n\n# set_trump(deck, trump)\n# deal(player_1, player_2, player_3, player_4, deck)\n# check_for_belote(player_1, player_2, player_3, player_4)\n\n# \xd9\x82\xd8\xa7\xd8\xb7\xd8\xb9 \xd8\xa3\xd9\x88 \xd8\xbb\xd8\xa7\xd8\xb7\xd8\xb9: \xd8\xaa\xd8\xb9\xd9\x86\xd9\x8a \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xa7\xd9\x84\xd8\xb0\xd9\x8a \xd9\x8a\xd9\x84\xd8\xb9\xd8\xa8 \xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd9\x85\xd8\xae\xd8\xa7\xd9\x84\xd9\x81\xd8\xa9 \xd9\x84\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd8\xa7\xd9\x84\xd9\x85\xd9\x88\xd8\xac\xd9\x88\xd8\xaf\xd8\xa9 \xd8\xb9\xd9\x84\xd9\x89 \xd8\xa7\xd9\x84\xd8\xa3\xd8\xb1\xd8\xb6\xd8\x8c \xd9\x81\xd9\x8a\xd9\x8f\xd9\x82\xd8\xa7\xd9\x84 \xd8\xb9\xd9\x84\xd9\x8a \xd8\xb3\xd8\xa8\xd9\x8a\xd9\x84 \xd8\xa7\xd9\x84\xd9\x85\xd8\xab\xd8\xa7\xd9\x84 \xd9\x82\xd8\xa7\xd8\xb7\xd8\xb9 \xd8\xb3\xd8\xa8\xd9\x8a\xd8\xaa \xd8\xa3\xd9\x8a \xd8\xa3\xd9\x86 \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xb1\xd9\x85\xd9\x89 \xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xb3\xd8\xa8\xd9\x8a\xd8\xaa \xd9\x88\xd8\xa7\xd9\x84\xd9\x84\xd8\xb9\xd8\xa8 \xd8\xa3\xd8\xb3\xd8\xa7\xd8\xb3\xd8\xa7\xd9\x8b \xd9\x83\xd8\xa7\xd9\x86 \xd9\x81\xd9\x8a \xd8\xba\xd9\x8a\xd8\xb1 \xd8\xa7\xd9\x84\xd8\xb3\xd8\xa8\xd9\x8a\xd8\xaa.\n# \xd8\xad\xd9\x84\xd9\x92 \xd8\xa7\xd9\x84\xd8\xa5\xd9\x83\xd9\x87: \xd8\xaa\xd8\xb9\xd9\x86\xd9\x8a \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xa7\xd9\x84\xd8\xb0\xd9\x8a \xd9\x8a\xd8\xa8\xd8\xaf\xd8\xa3 \xd8\xa7\xd9\x84\xd9\x84\xd8\xb9\xd8\xa8 \xd9\x81\xd9\x8a \xd8\xa7\xd9\x84\xd8\xb5\xd9\x86 \xd8\xa8\xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xa5\xd9\x83\xd9\x87 \xd9\x88\xd9\x87\xd9\x8a \xd8\xa3\xd9\x83\xd8\xa8\xd8\xb1 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd9\x82\xd9\x8a\xd9\x85\xd8\xa9\xd9\x8b \xd9\x81\xd9\x8a \xd8\xa7\xd9\x84\xd8\xb5\xd9\x86\xd8\x8c \xd9\x88\xd9\x87\xd9\x8a \xd8\xb7\xd8\xb1\xd9\x8a\xd9\x82\xd8\xa9 \xd9\x84\xd8\xb6\xd9\x85\xd8\xa7\xd9\x86 \xd8\xa3\xd9\x86 \xd9\x84\xd8\xa7 \xd8\xaa\xd9\x83\xd9\x88\xd9\x86 \xd8\xac\xd9\x85\xd9\x8a\xd8\xb9 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd9\x84\xd9\x84\xd9\x81\xd8\xb1\xd9\x8a\xd9\x82 \xd8\xa7\xd9\x84\xd8\xa2\xd8\xae\xd8\xb1 \xd9\x81\xd9\x8a\xd8\xad\xd8\xb5\xd9\x84\xd9\x88\xd8\xa7 \xd8\xb9\xd9\x84\xd9\x89 \xd8\xa7\xd9\x84\xd9\x86\xd9\x82\xd8\xa7\xd8\xb7 \xd8\xa7\xd9\x84\xd9\x83\xd8\xa7\xd9\x85\xd9\x84\xd8\xa9.\n# \xd8\xb9\xd9\x85\xd9\x84\xd9\x8a\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xaa\xd8\xb1\xd8\xa8\xd9\x8a\xd8\xb9: \xd9\x88\xd8\xaa\xd8\xb9\xd9\x86\xd9\x8a \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xa7\xd9\x84\xd8\xb0\xd9\x8a \xd9\x8a\xd8\xa8\xd8\xaf\xd8\xa3 \xd8\xa8\xd8\xb1\xd9\x85\xd9\x8a \xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xad\xd9\x83\xd9\x85\xd8\x8c \xd9\x81\xd9\x8a\xd9\x8f\xd9\x82\xd8\xa7\xd9\x84 \xd8\xb1\xd8\xa8\xd9\x91\xd8\xb9 \xd9\x81\xd9\x84\xd8\xa7\xd9\x86 \xd8\xa3\xd9\x8a \xd8\xa8\xd8\xaf\xd8\xa3 \xd8\xa8\xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xad\xd9\x83\xd9\x85\xd8\x8c \xd9\x88\xd8\xb9\xd9\x85\xd9\x84\xd9\x8a\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xaa\xd8\xb1\xd8\xa8\xd9\x8a\xd8\xb9 \xd9\x85\xd9\x85\xd9\x86\xd9\x88\xd8\xb9\xd8\xa9 \xd9\x81\xd9\x8a \xd8\xa7\xd9\x84\xd8\xaf\xd8\xa8\xd9\x84 \xd9\x88\xd8\xa7\xd9\x84\xd8\xaf\xd8\xa8\xd9\x84 \xd9\x81\xd9\x88\xd8\xb1.\n# \xd8\xa7\xd9\x84\xd8\xaa\xd9\x83\xd9\x88\xd9\x8a\xd8\xb4 \xd8\xa3\xd9\x88 \xd8\xa7\xd9\x84\xd8\xaa\xd8\xae\xd9\x8a\xd9\x8a\xd8\xb4: \xd9\x88\xd9\x87\xd9\x8a \xd8\xa7\xd9\x84\xd8\xb9\xd9\x85\xd9\x84\xd9\x8a\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xaa\xd9\x8a \xd9\x8a\xd8\xad\xd8\xb5\xd9\x84 \xd9\x81\xd9\x8a\xd9\x87\xd8\xa7 \xd8\xa3\xd8\xad\xd8\xaf \xd8\xa7\xd9\x84\xd9\x81\xd8\xb1\xd9\x8a\xd9\x82\xd9\x8a\xd9\x86 \xd8\xb9\xd9\x84\xd9\x89 \xd9\x86\xd9\x82\xd8\xa7\xd8\xb7 \xd8\xa7\xd9\x84\xd9\x84\xd8\xb9\xd8\xa8\xd8\xa9 \xd8\xa5\xd9\x85\xd8\xa7 \xd8\xa8\xd8\xb3\xd8\xa8\xd8\xa8 \xd9\x85\xd8\xad\xd8\xa7\xd9\x88\xd9\x84\xd8\xa9 \xd8\xba\xd8\xb4 \xd8\xa7\xd9\x84\xd9\x81\xd8\xb1\xd9\x8a\xd9\x82 \xd8\xa7\xd9\x84\xd8\xa2\xd8\xae\xd8\xb1 \xd8\xa3\xd9\x88 \xd8\xae\xd8\xb1\xd9\x82 \xd8\xa7\xd9\x84\xd9\x82\xd9\x88\xd8\xa7\xd9\x86\xd9\x8a\xd9\x86.\n# \xd8\xa7\xd9\x84\xd8\xb5\xd9\x83\xd8\xa9 \xd8\xa3\xd9\x88 \xd8\xa7\xd9\x84\xd8\xb7\xd9\x82\xd8\xa9: \xd9\x87\xd9\x8a \xd8\xa7\xd9\x84\xd8\xaf\xd9\x88\xd8\xb1\xd8\xa9 \xd8\xa7\xd9\x84\xd9\x88\xd8\xa7\xd8\xad\xd8\xaf\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xaa\xd9\x8a \xd9\x8a\xd9\x82\xd9\x88\xd9\x85 \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8\xd9\x8a\xd9\x86 \xd8\xa8\xd8\xb1\xd9\x85\xd9\x8a \xd8\xac\xd9\x85\xd9\x8a\xd8\xb9 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd8\xa7\xd9\x84\xd9\x80 32.\n# \xd8\xaf\xd9\x90\xd8\xb3\xd9\x8e\xd9\x85\xd9\x92: \xd9\x88\xd9\x87\xd9\x8a \xd8\xa3\xd9\x86 \xd9\x8a\xd8\xb1\xd9\x85\xd9\x8a \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xa3\xd9\x83\xd8\xa8\xd8\xb1 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd9\x82\xd9\x8a\xd9\x85\xd8\xa9\xd9\x8b \xd8\xa5\xd8\xb0\xd8\xa7 \xd9\x83\xd8\xa7\xd9\x86\xd8\xaa \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd8\xa7\xd9\x84\xd8\xaa\xd9\x8a \xd9\x81\xd9\x8a \xd8\xa7\xd9\x84\xd8\xa3\xd8\xb1\xd8\xb6 \xd9\x84\xd8\xb5\xd8\xa7\xd9\x84\xd8\xad \xd8\xb2\xd9\x85\xd9\x8a\xd9\x84\xd9\x87 \xd9\x81\xd9\x8a \xd8\xa7\xd9\x84\xd9\x84\xd8\xb9\xd8\xa8.\n# \xd8\xa7\xd9\x84\xd8\xaa\xd9\x87\xd8\xb1\xd9\x8a\xd8\xa8: \xd9\x87\xd9\x8a \xd8\xb9\xd9\x85\xd9\x84\xd9\x8a\xd8\xa9 \xd8\xb0\xd9\x83\xd9\x8a\xd8\xa9 \xd9\x8a\xd9\x82\xd9\x88\xd9\x85 \xd9\x81\xd9\x8a\xd9\x87\xd8\xa7 \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xa8\xd8\xb1\xd9\x85\xd9\x8a \xd8\xa7\xd9\x84\xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xaa\xd9\x8a \xd9\x84\xd8\xa7 \xd9\x8a\xd8\xad\xd8\xaa\xd8\xa7\xd8\xac\xd9\x87\xd8\xa7\xd8\x8c \xd9\x84\xd9\x83\xd9\x8a \xd9\x8a\xd9\x81\xd9\x87\xd9\x85 \xd8\xb2\xd9\x85\xd9\x8a\xd9\x84\xd9\x87 \xd8\xa3\xd9\x86\xd9\x87 \xd9\x8a\xd8\xb1\xd9\x8a\xd8\xaf \xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd8\xba\xd9\x8a\xd8\xb1 \xd8\xa7\xd9\x84\xd8\xaa\xd9\x8a \xd8\xb1\xd9\x85\xd8\xa7\xd9\x87\xd8\xa7.\n# \xd8\xaa\xd9\x81\xd8\xb1\xd9\x86\xd9\x83: \xd8\xb9\xd9\x86\xd8\xaf\xd9\x85\xd8\xa7 \xd9\x8a\xd9\x85\xd9\x84\xd9\x83 \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82\xd8\xa7\xd9\x8b \xd9\x82\xd9\x88\xd9\x8a\xd8\xa9 \xd9\x81\xd9\x8a "\xd8\xb2\xd8\xa7\xd8\xaa" \xd8\xa3\xd9\x88 \xd9\x86\xd9\x88\xd8\xb9 \xd9\x85\xd8\xb9\xd9\x8a\xd9\x86 \xd9\x85\xd9\x86 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 (\xd9\x85\xd8\xab\xd8\xa7\xd9\x84 \xd8\xa7\xd9\x84\xd8\xb9\xd8\xb4\xd8\xb1\xd8\xa9 \xd9\x88\xd8\xa7\xd9\x84\xd8\xa8\xd8\xa7\xd8\xb4 \xd9\x88\xd8\xa7\xd9\x84\xd9\x85\xd9\x8a\xd9\x85) \xd9\x88\xd9\x84\xd8\xa7 \xd9\x8a\xd9\x85\xd9\x84\xd9\x83 \xd8\xa7\xd9\x84\xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x83\xd8\xa8\xd8\xb1 \xd9\x88\xd9\x87\xd9\x8a \xd8\xa7\xd9\x84\xd8\xa5\xd9\x83\xd9\x87\xd8\x8c \xd9\x81\xd9\x8a\xd8\xb1\xd9\x85\xd9\x8a \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8 \xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd9\x82\xd9\x84\xd9\x8a\xd9\x84\xd8\xa9 \xd8\xa7\xd9\x84\xd9\x82\xd9\x8a\xd9\x85\xd8\xa9 \xd9\x83\xd8\xb6\xd8\xad\xd9\x8a\xd8\xa9 \xd9\x85\xd9\x86 \xd8\xa3\xd8\xac\xd9\x84 \xd8\xa3\xd9\x86 \xd9\x8a\xd8\xa3\xd9\x83\xd9\x84\xd9\x87\xd8\xa7 \xd8\xa3\xd8\xad\xd8\xaf \xd8\xa7\xd9\x84\xd9\x84\xd8\xa7\xd8\xb9\xd8\xa8\xd9\x8a\xd9\x86 \xd8\xa7\xd9\x84\xd8\xb0\xd9\x8a \xd9\x8a\xd9\x85\xd9\x84\xd9\x83 \xd9\x88\xd8\xb1\xd9\x82\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xa5\xd9\x83\xd9\x87\xd8\x8c \xd9\x88\xd9\x8a\xd9\x86\xd9\x81\xd8\xb1\xd8\xaf \xd9\x87\xd9\x88 \xd8\xa8\xd8\xa7\xd9\x84\xd8\xb2\xd8\xa7\xd8\xaa.\n# \xd9\x83\xd8\xa8\xd9\x88\xd8\xaa: \xd9\x87\xd9\x8a \xd8\xa7\xd9\x84\xd8\xb9\xd9\x85\xd9\x84\xd9\x8a\xd8\xa9 \xd8\xa7\xd9\x84\xd8\xaa\xd9\x8a \xd9\x8a\xd8\xad\xd8\xb5\xd9\x84 \xd9\x81\xd9\x8a\xd9\x87\xd8\xa7 \xd8\xa3\xd8\xad\xd8\xaf \xd8\xa7\xd9\x84\xd9\x81\xd8\xb1\xd9\x8a\xd9\x82\xd9\x8a\xd9\x86 \xd8\xb9\xd9\x84\xd9\x89 \xd8\xac\xd9\x85\xd9\x8a\xd8\xb9 \xd8\xa7\xd9\x84\xd8\xa3\xd9\x88\xd8\xb1\xd8\xa7\xd9\x82 \xd9\x81\xd9\x8a "\xd8\xb5\xd9\x83\xd8\xa9" \xd9\x88\xd8\xa7\xd8\xad\xd8\xaf\xd8\xa9.\n\n\n\n\n\n\n\n\n#\n\ndef compare_cards_is_bigger(card_1, card_2):\n\tif card_1.trump == card_2.trump:\n\t\tif card_1.trump:\n\t\t\treturn order_trump.index(card_1.value) < order_trump.index(card_2.value)\n\t\telse:\n\t\t\tif card_1.color == card_2.color:\n\t\t\t\treturn order_classic.index(card_1.value) < order_classic.index(card_2.value)\n\t\t\telse:\n\t\t\t\treturn True\n\telse:\n\t\treturn card_1.trump\n\nprint(" ------- Game On -------")\nfor i in range(1, 9):\n\tstate = []\n\tadd_card_to_state(player_1)\n\tadd_card_to_state(player_2)\n\tadd_card_to_state(player_3)\n\tadd_card_to_state(player_4)\n\n#             print("---------- state " + str(i) + "  ----------")\n#             self.display_state()\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of OperationalError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of OperationalError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of OperationalError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of OperationalError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of OperationalError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of OperationalError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of OperationalError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of OperationalError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.OperationalError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of OperationalError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of OperationalError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of OperationalError object>"
p45
sS'args'
p46
S"('table check_for_con already exists',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of OperationalError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of OperationalError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of OperationalError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of OperationalError object>"
p57
ssS'evalue'
p58
S'table check_for_con already exists'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\x07P\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>belot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>c397928459763</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>appadmin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1-632c2fcf-229d-481b-9366-923d29b2134f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">DOCUMENT_ROOT</td><td style="vertical-align:top;">:</td><td><div>/usr/local/openresty/nginx/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTPS</td><td style="vertical-align:top;">:</td><td><div>on</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>ar,en-GB;q=0.8,en;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>close</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>_ga=GA1.2.1675182600.1470181097; session_id_admin=90.148.254.1-632c2fcf-229d-481b-9366-923d29b2134f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>tazjel.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>https://tazjel.pythonanywhere.com/admin/default/edit/belot/models/db.py?id=models__db__py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_WEB2PY_COMPONENT_ELEMENT</td><td style="vertical-align:top;">:</td><td><div>c397928459763</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_WEB2PY_COMPONENT_LOCATION</td><td style="vertical-align:top;">:</td><td><div>https://tazjel.pythonanywhere.com/admin/default/edit/belot/models/db.py?id=models__db__py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_X_FORWARDED_FOR</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_X_REAL_IP</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_X_REQUESTED_WITH</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/belot/appadmin/hooks</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>10.155.6.104</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>51262</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_URI</td><td style="vertical-align:top;">:</td><td><div>/belot/appadmin/hooks</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>tazjel.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/tazjel/zweb2py/applications/admin/&#x27;, &#x27;/home/tazjel/zweb2py/applications/CssDesigner/&#x27;, &#x27;/home/tazjel/zweb2py/applications/belot/&#x27;, &#x27;/home/tazjel/zweb2py/applications/balot/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_length</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_type</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">document_root</td><td style="vertical-align:top;">:</td><td><div>/usr/local/openresty/nginx/html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch, br</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>ar,en-GB;q=0.8,en;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>close</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>_ga=GA1.2.1675182600.1470181097; session_id_admin=90.148.254.1-632c2fcf-229d-481b-9366-923d29b2134f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>tazjel.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>https://tazjel.pythonanywhere.com/admin/default/edit/belot/models/db.py?id=models__db__py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_web2py_component_element</td><td style="vertical-align:top;">:</td><td><div>c397928459763</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_web2py_component_location</td><td style="vertical-align:top;">:</td><td><div>https://tazjel.pythonanywhere.com/admin/default/edit/belot/models/db.py?id=models__db__py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_x_forwarded_for</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_x_real_ip</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_x_requested_with</td><td style="vertical-align:top;">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">https</td><td style="vertical-align:top;">:</td><td><div>on</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>tazjel.pythonanywhere.com</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>glenn-liveweb1</div></td></tr><tr><td><div>localhost</div></td></tr><tr><td><div>50.19.109.98</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/belot/appadmin/hooks</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>10.155.6.104</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>51262</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/belot/appadmin/hooks</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>tazjel.pythonanywhere.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>443</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uwsgi.node</td><td style="vertical-align:top;">:</td><td><div>glenn-liveweb1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uwsgi.version</td><td style="vertical-align:top;">:</td><td><div>2.0.5.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uwsgi_node</td><td style="vertical-align:top;">:</td><td><div>glenn-liveweb1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uwsgi_version</td><td style="vertical-align:top;">:</td><td><div>2.0.5.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;uwsgi_file__bin_user_wsgi_wrapper.ErrorLogFile object at 0x7f558818d2d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;built-in function uwsgi_sendfile&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;uwsgi._Input object at 0x7f55926a3eb8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;uwsgi_file__bin_user_wsgi_wrapper.ErrorLogFile object at 0x7f558818d2d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;built-in function uwsgi_sendfile&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;uwsgi._Input object at 0x7f55926a3eb8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>https</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py/applications/belot/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>hooks</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/tazjel/zweb2py/applications/admin/&#x27;, &#x27;/home/tazjel/zweb2py/applications/CssDesigner/&#x27;, &#x27;/home/tazjel/zweb2py/applications/belot/&#x27;, &#x27;/home/tazjel/zweb2py/applications/balot/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>tazjel.pythonanywhere.com</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>glenn-liveweb1</div></td></tr><tr><td><div>localhost</div></td></tr><tr><td><div>50.19.109.98</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 10, 9, 1, 58, 39, 606928)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/belot/appadmin/hooks</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 10, 9, 1, 58, 39, 606941)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f557652b9d0&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/tazjel/zweb2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x7f55766bac30, file "/...web2py/applications/belot/models/db.py", line 12>'
p73
ssS'lnum'
p74
I227
sS'lines'
p75
(dp76
I224
S'            ccode = code'
p77
sI225
S'        else:'
p78
sI226
S'            ccode = compile2(code, layer)'
p79
sI227
S'        exec ccode in environment'
p80
sI228
S'    except HTTP:'
p81
sI229
S'        raise'
p82
sI230
S'    except RestrictedError:'
p83
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p84
sI222
S'    try:'
p85
sI223
S'        if isinstance(code, types.CodeType):'
p86
ssS'call'
p87
S'(code=\'# -*- coding: utf-8 -*-\\n\\n#######################... ----------")\\n#             self.display_state()\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'ASSIGNJS\': <function ASSIGNJS>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, ...}, layer=\'/home/tazjel/zweb2py/applications/belot/models/db.py\')'
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/tazjel/zweb2py/applications/belot/models/db.py'
p92
sg68
(dp93
S'Field'
p94
S"<class 'pydal.objects.Field'>"
p95
ssg74
I230
sg75
(dp96
I225
S'    )'
p97
sI226
S''
sI227
S''
sI228
S"db.define_table('check_for_con',"
p98
sI229
S"    Field('name', required=IS_NOT_EMPTY()),"
p99
sI230
S"    Field('description')"
p100
sI231
S'    )'
p101
sI232
S''
sI233
S''
sI234
S''
ssg87
S'()'
p102
sg89
S'<module>'
p103
sa(dp104
g66
S'/home/tazjel/zweb2py/gluon/packages/dal/pydal/base.py'
p105
sg68
(dp106
S'fields'
p107
S'(<pydal.objects.Field object>, <pydal.objects.Field object>)'
p108
sS'self'
p109
S'<DAL uri="sqlite://storage.sqlite">'
p110
sS'args'
p111
g21
sS'tablename'
p112
S"'check_for_con'"
p113
sS'table'
p114
S'undefined'
p115
sS'self.lazy_define_table'
p116
S'<bound method DAL.lazy_define_table of <DAL uri="sqlite://storage.sqlite">>'
p117
ssg74
I834
sg75
(dp118
I832
S'            table = None'
p119
sI833
S'        else:'
p120
sI834
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p121
sI835
S'        if not tablename in self.tables:'
p122
sI836
S'            self.tables.append(tablename)'
p123
sI837
S'        return table'
p124
sI838
S''
sI829
S'                    % (tablename,invalid_args))'
p125
sI830
S'        if self._lazy_tables and tablename not in self._LAZY_TABLES:'
p126
sI831
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p127
ssg87
S'(self=<DAL uri="sqlite://storage.sqlite">, tablename=\'check_for_con\', *fields=(<pydal.objects.Field object>, <pydal.objects.Field object>), **args={})'
p128
sg89
S'define_table'
p129
sa(dp130
g66
S'/home/tazjel/zweb2py/gluon/packages/dal/pydal/base.py'
p131
sg68
(dp132
S'polymodel'
p133
S'None'
p134
ssg74
I873
sg75
(dp135
I868
S'            try:'
p136
sI869
S'                GLOBAL_LOCKER.acquire()'
p137
sI870
S'                self._lastsql = self._adapter.create_table('
p138
sI871
S'                    table,migrate=migrate,'
p139
sI872
S'                    fake_migrate=fake_migrate,'
p140
sI873
S'                    polymodel=polymodel)'
p141
sI874
S'            finally:'
p142
sI875
S'                GLOBAL_LOCKER.release()'
p143
sI876
S'        else:'
p144
sI877
S'            table._dbt = None'
p145
ssg87
S'(self=<DAL uri="sqlite://storage.sqlite">, tablename=\'check_for_con\', *fields=(<pydal.objects.Field object>, <pydal.objects.Field object>), **args={})'
p146
sg89
S'lazy_define_table'
p147
sa(dp148
g66
S'/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py'
p149
sg68
(dp150
S'query'
p151
S"'CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);'"
p152
sS'self'
p153
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p154
sS'table'
p155
S'<Table check_for_con (id, name, description)>'
p156
sS'self.create_sequence_and_triggers'
p157
S'<bound method SQLiteAdapter.create_sequence_and_... of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p158
ssg74
I482
sg75
(dp159
I480
S'                            query), table)'
p160
sI481
S'            if not fake_migrate:'
p161
sI482
S'                self.create_sequence_and_triggers(query, table)'
p162
sI483
S'                db.commit()'
p163
sI484
S'                # Postgres geom fields are added now,'
p164
sI485
S'                # after the table has been created'
p165
sI486
S'                for query in postcreation_fields:'
p166
sI477
S'            if table._dbt:'
p167
sI478
S"                self.log('timestamp: %s\\n%s\\n'"
p168
sI479
S'                         % (datetime.datetime.today().isoformat(),'
p169
ssg87
S'(self=<pydal.adapters.sqlite.SQLiteAdapter object>, table=<Table check_for_con (id, name, description)>, migrate=True, fake_migrate=False, polymodel=None)'
p170
sg89
S'create_table'
p171
sa(dp172
g66
S'/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py'
p173
sg68
(dp174
S'query'
p175
S"'CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);'"
p176
sS'self'
p177
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p178
sS'self.execute'
p179
S'<bound method SQLiteAdapter.execute of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p180
ssg74
I1369
sg75
(dp181
I1364
S''
sI1365
S'    def constraint_name(self, table, fieldname):'
p182
sI1366
S"        return '%s_%s__constraint' % (table,fieldname)"
p183
sI1367
S''
sI1368
S'    def create_sequence_and_triggers(self, query, table, **args):'
p184
sI1369
S'        self.execute(query)'
p185
sI1370
S''
sI1371
S''
sI1372
S'    def log_execute(self, *a, **b):'
p186
sI1373
S'        if not self.connection: raise ValueError(a[0])'
p187
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query='CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);', table=<Table check_for_con (id, name, description)>, **args={})"
p188
sg89
S'create_sequence_and_triggers'
p189
sa(dp190
g66
S'/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py'
p191
sg68
(dp192
S'a'
S"('CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);',)"
p193
sS'self'
p194
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p195
sS'b'
g21
sS'self.log_execute'
p196
S'<bound method SQLiteAdapter.log_execute of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p197
ssg74
I1388
sg75
(dp198
I1383
S'        self.db._timings.append((command,time.time()-t0))'
p199
sI1384
S'        del self.db._timings[:-TIMINGSSIZE]'
p200
sI1385
S'        return ret'
p201
sI1386
S''
sI1387
S'    def execute(self, *a, **b):'
p202
sI1388
S'        return self.log_execute(*a, **b)'
p203
sI1389
S''
sI1390
S'    def execute_test_query(self):'
p204
sI1391
S'        return self.execute(self.test_query)'
p205
sI1392
S''
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, *a=('CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);',), **b={})"
p206
sg89
S'execute'
p207
sa(dp208
g66
S'/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py'
p209
sg68
(dp210
S'a'
S"('CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);',)"
p211
sS'b'
g21
sS'self'
p212
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p213
sS'ret'
p214
g115
sS'command'
p215
S"'CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);'"
p216
sS'self.get_cursor'
p217
S'<bound method SQLiteAdapter.get_cursor of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p218
sS').execute'
p219
g115
ssg74
I1382
sg75
(dp220
I1377
S'            command = self.filter_sql_command(command)'
p221
sI1378
S'        if self.db._debug:'
p222
sI1379
S"            self.db.logger.debug('SQL: %s' % command)"
p223
sI1380
S'        self.db._lastsql = command'
p224
sI1381
S'        t0 = time.time()'
p225
sI1382
S'        ret = self.get_cursor().execute(command, *a[1:], **b)'
p226
sI1383
S'        self.db._timings.append((command,time.time()-t0))'
p227
sI1384
S'        del self.db._timings[:-TIMINGSSIZE]'
p228
sI1385
S'        return ret'
p229
sI1386
S''
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, *a=('CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);',), **b={})"
p230
sg89
S'log_execute'
p231
sasS'pyver'
p232
S'Python 2.7.6: /usr/local/bin/uwsgi (prefix: /usr)'
p233
sS'session'
p234
g61
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp235
sS'etype'
p236
S"<class 'sqlite3.OperationalError'>"
p237
sS'date'
p238
S'Sun Oct  9 01:58:40 2016'
p239
sS'response'
p240
g61
(S's\x11\x16\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f5576726998&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_belot</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1-fb08293d-b4d0-4b98-a0f4-ef2b7925c664<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/hooks/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_belot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/tazjel/zweb2py/applications/belot/sessions/90.148.254.1-fb08293d-b4d0-4b98-a0f4-ef2b7925c664</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>c0762cbf4baf7f9af97c051e7fcb8083</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>90.148.254.1-fb08293d-b4d0-4b98-a0f4-ef2b7925c664</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_belot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>belot</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>appadmin/hooks.html</div></td></tr></table></div>'
tRp241
sS'locals'
p242
(dp243
S'a'
S"('CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);',)"
p244
sS'self'
p245
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p246
sS'b'
g21
sS'command'
p247
S"'CREATE TABLE check_for_con(\\n    id INTEGER PRIMA...\\n    name CHAR(512),\\n    description CHAR(512)\\n);'"
p248
sS't0'
p249
S'1475978320.474942'
p250
sssS'traceback'
p251
S'Traceback (most recent call last):\n  File "/home/tazjel/zweb2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/tazjel/zweb2py/applications/belot/models/db.py", line 230, in <module>\n    Field(\'description\')\n  File "/home/tazjel/zweb2py/gluon/packages/dal/pydal/base.py", line 834, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/tazjel/zweb2py/gluon/packages/dal/pydal/base.py", line 873, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py", line 482, in create_table\n    self.create_sequence_and_triggers(query, table)\n  File "/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py", line 1369, in create_sequence_and_triggers\n    self.execute(query)\n  File "/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "/home/tazjel/zweb2py/gluon/packages/dal/pydal/adapters/base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\nOperationalError: table check_for_con already exists\n'
p252
s.