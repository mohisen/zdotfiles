# commandlinefu.com by David Winterbottom

# Amplify movie playback
mplayer -af volume=10.1:0 $movie

# Play all the music in a folder, on shuffle
while [[ 1 ]]; do n=( */* ); s=${n[$(($RANDOM%${#n[@]}))]}; echo -e " - $s"; mpg123 -q "$s"; done

# Mplayer save stream to file
mplayer -nolirc <Streaming_URL> -dumpstream -dumpfile output.mp3

# Random music player
FILE='mp3.list';LNNO=`wc -l $FILE|cut -d' ' -f 1`;LIST=( `cat $FILE` );for((;;)) do SEED=$((RANDOM % $LNNO));RNNO=$(python -c "print int('`openssl rand -rand ${LIST[$SEED]} 8 -hex 2>/dev/null`', 16) % $LNNO");mplayer ${LIST[$RNNO]};sleep 2s; done

# Play radio stream with mplayer
mplayer -nolirc http://5253.live.streamtheworld.com/VIRGINRADIO_DUBAIAAC

# Stream video to screen with a delay (cyberart)
mencoder tv:// -tv driver=v4l2:width=320:height=240:device=/dev/video1 -nosound -ovc lavc -really-quiet -quiet -o - | (sleep 10m; cat) | mplayer - -cache 512

# Play a random avi file in the current directory tree
mplayer $(find . -iname '*.avi' | shuf -n1)

# Music streaming via ssh
ssh login@server "cat path/filename.mp3" | mplayer -

# don't have video stop at EOF while it is downloading
mplayer <(tail -fc +0 <filename>)

# Get the total length of all video / audio in the current dir (and below) in H:m:s
find /path/to/dir -iname "*.ext" -print0 | xargs -0 mplayer -really-quiet -cache 64 -vo dummy -ao dummy -identify 2>/dev/null | awk '/ID_LENGTH/{gsub(/ID_LENGTH=/,"")}{SUM += $1}END{ printf "%02d:%02d:%02d\n",SUM/3600,SUM%3600/60,SUM%60}'

# Makes mplayer show file played through libnotify, 140 characters
r="readlink /proc/`pgrep -o mplayer`/fd/3";while [ -e "`$r`" ];do if [ "$f" = "`$r`" ];then sleep 1;else f="`$r`";notify-send " $f";fi;done

# Put subtitles on black band in Mplayer
mplayer -vf-add scale=<SCREEN_WIDTH>:-3:::0.00:0.75 -vf-add expand=:<SCREEN_HEIGHT> -sub <SUBTITLE> <MOVIE>

# Create an animated gif from a Youtube video
youtube-dl -o bun.flv http://www.youtube.com/watch?v=SfPLcQhXpCc; mplayer bun.flv -ss 03:16 -endpos 5 -vo jpeg:outdir=bun:quality=100:smooth=30:progressive -vf scale=320:240 -nosound; convert -delay 4 -loop 0 bun/*.jpg bun.gif

# Play flash video in the cache (loaded) with mplayer
alias flashplay="mplayer \$(find /proc/\$(pgrep -f 'libgcflash|libflashplayer')/fd/ -printf '%p %l\n' |grep FlashXX | cut -d\  -f1)"

# Have Google Translate speak to you using your local speakers
function say { mplayer -really-quiet "http://translate.google.com/translate_tts?tl=en&q=$1"; }

# Get the total length of all video / audio in the current dir in H:m:s
mplayer -endpos 0.1 -vo null -ao null -identify *.avi 2>&1 |grep ID_LENGTH |cut -d = -f 2|awk '{SUM += $1} END { printf "%d:%d:%d\n",SUM/3600,SUM%3600/60,SUM%60}'

# Open frequnet/recent file mathcing "movie" with mplayer using f
f -f -e mplayer movie

# Shuffles your songs. Using mplayer. But with no output.
mplayer -shuffle $HOME/music/* $HOME/Dropbox/Music/*/* $HOME/Dropbox/Music/*/*/* etc. >> /dev/null 2>&1

# Shuffle songs with mplayer (sub-dirs too.)
mplayer -shuffle $HOME/music/* $HOME/music/*/* $HOME/music/*/*/* etc.

# Rip from mp3 stream mplayer
mplayer -cache 100 -dumpstream http://listen.di.fm/public3/drumandbass.pls -dumpfile music.mp3

# Google text-to-speech in local language or language of choice
say() { if [[ "${1}" =~ -[a-z]{2} ]]; then local lang=${1#-}; local text="${*#$1}"; else local lang=${LANG%_*}; local text="$*";fi; mplayer "http://translate.google.com/translate_tts?ie=UTF-8&tl=${lang}&q=${text}" &> /dev/null ; }

# converts video to ascii art (txt) by mplayer and aa|caca lib
mplayer -vo aa:eight:driver=curses video.avi >video.txt

# use mplayer to watch Apple Movie Trailer instead of quicktime player
mplayer -rtsp-stream-over-tcp -user-agent QuickTime/7.6.4 http://trailers.apple.com/movies/HDmovie-h720p.mov

# Play local mp3 file on remote machine's speakers
cat myfile.mp3 | ssh user@remotemachine "mplayer -cache 8912 -"

# To play a file at 1.5 times normal speed  without increasing the pitch
mplayer -af scaletempo=scale=1.5 foo.mp3

