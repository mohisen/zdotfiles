<snippets namespace="" license="" filetypes="Python" authors="w" name="Python snippets">
 <script></script>
 <item>
  <displayprefix></displayprefix>
  <match>Symlinking</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>#!/usr/bin/env python

import sys, os # I don't care!

from os import listdir
from os.path import islink, join, expanduser

home = expanduser("~/")
directory = expanduser("~/dotfiles")

excludes = ["pure", "README.md", ".gitmodules", ".git", "bin"]
linux_only_excludes = ["Xresources", "xinitrc", "xmobarrc", "xmonad.hs", "zprofile"]

try:
    if sys.argv[1] == "linux":
        pass
except IndexError:
    excludes = excludes + linux_only_excludes

files = [ f for f in listdir(directory) if f not in excludes]

for f in files:
    src = join(directory, f)
    dest = join(home, ".%s" % f)

    if not islink(dest):
        print "Symlinking %s to %s" % (src, dest)
        os.symlink(src, dest)
    else:
        print "Unlinking %s to %s" % (src, dest)
        os.unlink(dest)
        print "Symlinking %s to %s" % (src, dest)
        os.symlink(src, dest)

</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>aptget</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>def aptget(package):
        if type(package) == list:
                for individual_package in package:
                        aptget(individual_package)
        else:
                sudo("apt-get -y install %s" % package)</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>def_pip</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>def pip(package, globalp=True, virtualenv=False):
        if not globalp and not not virtualenv:
                raise Exception("If not global you need a virtualenv")
                return False
        if globalp:
                if type(package) == list:
                        for individual_package in package:
                                pip(individual_package, globalp, virtualenv)
                else:
                        sudo("pip install %s" % package)</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>Symlinking_py</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>#!/usr/bin/env python

import sys, os # I don't care!

from os import listdir
from os.path import islink, join, expanduser

home = expanduser("~/")
directory = expanduser("~/dotfiles")

excludes = ["pure", "README.md", ".gitmodules", ".git", "bin"]
linux_only_excludes = ["Xresources", "xinitrc", "xmobarrc", "xmonad.hs", "zprofile"]

try:
    if sys.argv[1] == "linux":
        pass
except IndexError:
    excludes = excludes + linux_only_excludes

files = [ f for f in listdir(directory) if f not in excludes]

for f in files:
    src = join(directory, f)
    dest = join(home, ".%s" % f)

    if not islink(dest):
        print "Symlinking %s to %s" % (src, dest)
        os.symlink(src, dest)
    else:
        print "Unlinking %s to %s" % (src, dest)
        os.unlink(dest)
        print "Symlinking %s to %s" % (src, dest)
        os.symlink(src, dest)

</fillin>
 </item>
</snippets>
