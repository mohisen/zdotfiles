        dirlista=`find . -maxdepth 1 -type d -print`;
#How to find used IP addresses - Networking
#1- It finds the max of hosts,
    DHOME=$(find ~/ -type l -exec basename {} \;)
    ZSRC=$(find ~/zdotfiles/link -exec basename {} \;);
    WROOT=$(find . -user root);
wWW_findzdotfiles()
    find ~/zdotfiles -name "$1" -type f -print | xargs egrep --color=always "$2";
    DHOME=$(find ~/ -type l)
    success "Symlinks at HOME = " "$(find ~/ -type l | wc -l)"
    ZSRC=$(find ~/zdotfiles/link)
    success "Dotfiles at zdotfiles/link = " "$(find ~/zdotfiles/link | wc -l )"
    #success "$(find ~/ -maxdepth 1 \
#find . -type f -and -iregex '.*\.txt$' -and -print0 -exec grep --color=always -Hn "$1" {} \;
setopt hist_find_no_dups # When searching history don't display results already cycled through twice
alias wbig='find . -type f -exec du -sh {} + | sort -hr | head'
# tail -n3 .zsh_history | sort -u | sed 's/^.*\;//g' >> zdotfiles/6/wfindw ; tail zdotfiles/6/wfindw
# find /var/cache/apt -not -mtime -7
alias wlv='find ~ -maxdepth 1 -mindepth 1 -name   \*vim\* -type f'
alias wlz='find ~ -maxdepth 1 -mindepth 1 -name   \*zsh\* -type f'
alias wcr='wc `find . -type f`'
alias dropbox_conflicts='find ~/Dropbox -name \*conflicted\ copy\*'
alias fin='find -iname'
alias fn='find -name'
alias fwn='find -wholename'
alias lldu='find -maxdepth 1 -mindepth 1 -type d -exec du -sh {} \;'
alias qfind='find . -name '
#find . -type f -name '*.csv' -exec sh -c '
#find . -name "$2" -exec grep -il "$1" {} \;
# TODO: find new Gemfile syntax ... https://github.com/hron84/Gemfile.vim ???
DOT_FILES=`find . -maxdepth 1 \
echo "Unable to find command 'expect', run ./essentials.sh first"
DOT_FILES=`find . -maxdepth 1 \
find /var/www/ -type f -print0 | xargs -0 chmod 644
find /var/www/ -type f -print0 | xargs -0 chmod 644
echo "template file: ";read tpl;echo "new file(s separated w. space):"; read fl;touch $fl;find $fl -exec cp -ap $tpl "{}" \;
find ~/ -type d \( -wholename '/dev/*' -o -wholename '/sys/*' -o -wholename '/proc/*' \) -prune -o -exec test -w {} \; -exec echo {} writable \; 2>/dev/null
# use the find command and have it not print trailing slashes
find * -maxdepth 0 -type d
find site/ -type d | xargs sudo chmod 755
find ./ -type f | xargs sudo chmod 644
find $HOME -type d -perm 777 -exec chmod 755 {} \; -print
sudo find foldername -type f -exec chmod 644 {} ";"
sudo find foldername -type d -exec chmod 755 {} ";"
find . -type f ! -perm /u+x -printf "\"%p\"\n" | xargs file | grep -i executable
mplayer -playlist <(find $PWD -type f)
# easily find megabyte eating files or directories
for i in `find /sys/devices/*/*/usb* -name level` ; do echo -n "$i: " ; cat $i ; done
You should find the web2py welcome app will be displayed at your web address.
apt-get -y install libpq-dev # Required for gem1.9.3 install pg Ref.: http://stackoverflow.com/questions/6040583/unable-to-install-pg-gem-on-ubuntu-cant-find-the-libpq-fe-h-header
You should find the web2py welcome app will be displayed at your web address.
apt-get -y install libpq-dev # Required for gem1.9.3 install pg Ref.: http://stackoverflow.com/questions/6040583/unable-to-install-pg-gem-on-ubuntu-cant-find-the-libpq-fe-h-header
        dir_DOTFILES=$(cd ~ ; find . -type l)
        XXP=$(find $HOME -maxdepth 1)
T_FILES=`cd $LINKS;find . -maxdepth 1 \
    #for FF in $(find $HOME -maxdepth 1 -exec basename {} \;) ; do if [ -L $FF ] ; then echo -e "0 = $FF" ;else echo "1= $FF";fi;done
    XXP=$(find $HOME -maxdepth 1)
    for FF in $(find $HOME -maxdepth 1) ; do
mdfind -onlyin ~/Dropbox/notes "qq due" | while read -r line; do
# Automatically find and re-attach to a detached screen session
find -name '*.mp3' -exec mp3info {} -p "%F: %r kbps\n" \;  | sort | sed '/320 kbps/d'
find . -name *js -type f | xargs yardstick | sort -k6 -n
find -maxdepth 1 -type f -newermt "00:00" -printf "%f\n" | sort
find -type f | xargs ls -1tr
count=0;while IFS= read -r -d '' line; do echo "${line#* }"; ((++count==5)) && break; done < <(find . -type f -printf '%s %p\0' | sort -znr)
find . -type f -exec ls -s {} \; | sort -n -r | head -5
find /some/path -type f -printf '%f\n' | grep -o '\..\+$' | sort | uniq -c | sort -rn
find /some/path -type f | gawk -F/ '{print $NF}' | gawk -F. '/\./{print $NF}' | sort | uniq -c | sort -rn
find `pwd` -iname *SEARCH_STRING* >> ~/PLAYLIST_NAME.m3u
watch 'find -maxdepth 1 -mindepth 1 -type d  |xargs du -csh'
# du and sort to find the biggest directories in defined filesystem
find -name '*.mp3' -exec mp3info {} -p "%F: %r kbps\n" \;  | sort | sed '/320 kbps/d'
find . -type f -name filename.exe -exec sed -i "s/oldstring/oldstring/g" {} +;
find . -type f -name "*.gz" | while read line ; do gunzip --to-stdout "$line" | bzip2 > "$(echo $line | sed 's/gz$/bz2/g')" ; done
find . -type f -size +0 -printf "%-25s%p\n" | sort -n | uniq -D -w 25 | sed 's/^\w* *\(.*\)/md5sum "\1"/' | sh | sort | uniq -w32 --all-repeated=separate
find -maxdepth 1 -type d | while read dir; do echo $dir; echo cmd2; done
# How to find all open files by a process in Solaris 10
for i in `pfiles pid|grep S_IFREG|awk '{print $5}'|awk -F":" '{print $2}'`; do find / -inum $i |xargs ls -lah; done
alias gfind='find . -print0  | xargs -0 egrep -I '
find . -type f |egrep '^./.*\.' |sed -e "s/\(^.*\.\)\(.*$\)/\2/" |sort |uniq
find . \( -name "*cpp" -o -name "*hpp" \) -exec grep -Hn -E "043[eE]|70[Dd]7" \{\} \;
    find -L "$(dirname "$target")" -maxdepth 1 -type f -iregex \
cp $(find /media/ -type f -name "*.wav" -printf "%T@ %h/%f\n" | sort | tail -1 | awk '{ print $2 }') .
find -iname '*.jpg' -print0 | xargs -0 feh -d
# find potentially malicious PHP commands used in backdoors and aliked scripts
for ii in $(find /path/to/docroot -type f -name \*.php); do echo $ii; wc -lc $ii | awk '{ nr=$2/($1 + 1); printf("%d\n",nr); }'; done
find-duplicates () { find "$@" -not -empty -type f -printf "%s\0" | sort -rnz | uniq -dz | xargs -0 -I{} -n1 find "$@" -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate; }
find . -printf "touch -m -d \"%a\" '%p'\n" | tee /tmp/retime.sh
# du and sort to find the biggest directories in defined filesystem
# find the biggest files recursively, no matter how many
find . -type f|perl -lne '@x=sort {$b->[0]<=>$a->[0]}[(stat($_))[7],$_],@x;splice(@x,11);print "@{$x[0]}";END{for(@x){print "@$_"}'
# find potentially malicious PHP commands used in backdoors and aliked scripts
for ii in $(find /path/to/docroot -type f -name \*.php); do echo $ii; wc -lc $ii | awk '{ nr=$2/($1 + 1); printf("%d\n",nr); }'; done
find ~/ -type d \( -wholename '/dev/*' -o -wholename '/sys/*' -o -wholename '/proc/*' \) -prune -o -exec test -w {} \; -exec echo {} writable \; 2>/dev/null
find . -iname '*jpg' -print0  | xargs -0 exiftool -warning; find . -iname '*jpg' -print0  | xargs -0 jpeginfo -c
find-duplicates () { find "$@" -not -empty -type f -printf "%s\0" | sort -rnz | uniq -dz | xargs -0 -I{} -n1 find "$@" -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate; }
diff <(cd dir1 && find . | sort) <(cd dir2 && find . | sort)
find -name '*.mp3' -exec mp3info {} -p "%F: %r kbps\n" \;  | sort | sed '/320 kbps/d'
# Easily find an old command you run
find . -type f -printf "%T@ %Tc %p\n" |sort -n |cut -d' ' -f2- |tail -n20
find path -name '*' -type f -print0 | xargs -0 grep -n pattern1 | grep pattern2
find ./src -type d -name "Entity" | xargs ls -A | cut -d . -f1 | sed 's_^_app/console doctrine:generate:entities YourOwnBundleName:_'
find /some/path -type f -and -iregex '.*\.mp3$' -and -print0 | tr -d -c '\000' |wc -c
alias busy='rnd_file=$(find /usr/include -type f -size +5k | sort -R | head -n 1) && vim +$((RANDOM%$(wc -l $rnd_file | cut -f1 -d" "))) $rnd_file'
find -maxdepth 1 -type d | while read dir; do echo $dir; echo cmd2; done
find . -type l -exec test ! -e {} \; -delete
find . | xargs perl -p -i.bak -e 's/oldString/newString/;'
find . -type f -name *.MP3 -print0 | xargs -0 -i rename .MP3 .mp3 {}
for f in `find . -name "*.php"`; do perl -p -i.bak -e 's/<\?php \/\*\*\/ eval\(base64_decode\(\"[^\"]+"\)\);\?>//' $f; done
find ~/path/to/apk/files -name '*.apk' -exec adb install {} \;
find . -type f -name "*.gz" | while read line ; do gunzip --to-stdout "$line" | bzip2 > "$(echo $line | sed 's/gz$/bz2/g')" ; done
# find str in  in a directory which file extension is .php
count=0;while IFS= read -r -d '' line; do echo "${line#* }"; ((++count==5)) && break; done < <(find . -type f -printf '%s %p\0' | sort -znr)
 # substitute (find and replace) "foo" with "bar" on each line
be executed more quickly if the "find" expression is specified before
If you have any additional scripts to contribute or if you find errors
find . -type l -exec test ! -e {} \; -delete
# Search recursively to find a word or phrase in certain file types, such as C code
find . -name "*.[ch]" -exec grep -i /dev/null "search pharse" {} \;
find -name '*.mp3' -exec mp3info {} -p "%F: %r kbps\n" \;  | sort | sed '/320 kbps/d'
find . -type f -name filename.exe -exec sed -i "s/oldstring/oldstring/g" {} +;
# Execute commands on files found by the find command
find -iname "MyCProgram.c" -exec md5sum {} \;
find . -name .git -print0 | while read -d $'\0' g; do echo "$g"; cd "$g"; git gc --aggressive; cd -; done
# Show who is logged on and find out what they are doing
find . -type f -a \! -links 1
find -maxdepth 1 -type d | while read dir; do echo $dir; echo cmd2; done
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find . -type f -name "*.gz" | while read line ; do gunzip --to-stdout "$line" | bzip2 > "$(echo $line | sed 's/gz$/bz2/g')" ; done
find . -type f -name '*.gz'|awk '{print "zcat", $1, "| bzip2 -c >", $0.".tmp", "&& rename", "s/.gz.tmp/.bz2/", "*.gz.tmp", "&& rm", $0}'|bash
# Easily find an old command you run
# Pop up a Growl alert if Amtrak wifi doesn't know where to find The Google
find . -name *js -type f | xargs yardstick | sort -k6 -n
# find potentially malicious PHP commands used in backdoors and aliked scripts
for ii in $(find /path/to/docroot -type f -name \*.php); do echo $ii; wc -lc $ii | awk '{ nr=$2/($1 + 1); printf("%d\n",nr); }'; done
# find potentially malicious PHP commands used in backdoors and aliked scripts
find ./public_html/ -name \*.php -exec grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
# find established tcp connections without using netstat!!
find /Applications -type d -maxdepth 1 -exec sh -c 'echo "{}"; (plutil -convert xml1 -o - "{}/Contents/Info.plist" | xpath /dev/stdin "concat(\"v\", /plist/dict/string[preceding-sibling::key[1]=\"CFBundleShortVersionString\"]/node())" 2>/dev/null)' \;
find /var/www/ -type f -print0 | xargs -0 chmod 644
find /var/www/ -type f -print0 | xargs -0 chmod 644
# find unreadable file
sudo -u apache find . -not -perm /o+r
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
# Easily find an old command you run
# find potentially malicious PHP commands used in backdoors and aliked scripts
find ./public_html/ -name \*.php -exec grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
# find established tcp connections without using netstat!!
find . -type f -size +20000k -print0 | xargs -0 du -h | awk -F"\t" '{printf "%s : %s\n", $2, $1}'
# find str in  in a directory which file extension is .php
find . -type f -size +100M
# Advanced ls using find to show much more detail than ls ever could
alias LS='find -mount -maxdepth 1 -printf "%.5m %10M %#9u:%-9g %#5U:%-5G %TF_%TR %CF_%CR %AF_%AR %#15s [%Y] %p\n" 2>/dev/null'
find . -name "*.pdf" -exec pdftk {} dump_data output \; | grep NumberOfPages | awk '{s+=$2} END {print s}'
# Search recursively to find a word or phrase in certain file types, such as C code
find . -name "*.[ch]" -exec grep -i /dev/null "search pharse" {} \;
# If a directory contains softlinks, grep will give lot of warnings. So better use it along with find command so that softlinks are excluded. "Hn" operator will take care that both line number and filename is shown in grep output
find /path/to/search/directory -exec grep -Hn "pattern" {} \;
find . -printf "touch -m -d \"%a\" '%p'\n" | tee /tmp/retime.sh
# find geographical location of an ip address
# find all files in the current directory matching name * and searching for a string "mystring". outputs all the filenames that contain the search string.
find . -name "*" | xargs grep "mystring"
# find files between specific date/times and move them to another folder
touch -t 201208211200 first ; touch -t 201208220100 last ; find /path/to/files/ -newer first ! -newer last | xargs -ifile mv -fv file /path/to/destination/ ; rm first; rm last;
# quick find executable from locate db
find $(locate hello) -type f -executable -print|grep -E "hello\$"
find . -printf '%p\n' | perl -ne 'if( m/(.*)\/(.*)/ ) { $p = $1; $f = $2; $p =~ s/[^\/]/ /g; $p =~ s/\//|/g; print "$p/$f\n"; } elsif( m/(.*)/ ) { print "$1\n"; } else { print "error interpreting: \"$_\"\n"; }'
for a in $(find . -xdev -type f -printf '%i\n'|sort|uniq -d);do find . -xdev -inum $a -printf '%s %i %m %n %U %G %AD %Ar %p\n';done|sort -n|awk '{if(x!=$2){print "---"};x=$2;print $0}'
find /some/path -type f -and -iregex '.*\.mp3$' -and -print0 | tr -d -c '\000' |wc -c
# Automatically find and re-attach to a detached screen session
diff --suppress-common-lines -y <(cd path_to_dir1; find .|sort) <(cd path_to_dir2; find .|sort)
find /some/path -type f -and -iregex '.*\.mp3$' -and -print0 | tr -d -c '\000' |wc -c
find . -type f -iname "*.mp3" -exec id3v2 --delete-all {} \;
find . -type f -name filename.exe -exec sed -i "s/oldstring/oldstring/g" {} +;
# Easily find an old command you run
# find potentially malicious PHP commands used in backdoors and aliked scripts
find ./public_html/ -name \*.php -exec grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
alias gfind='find . -print0  | xargs -0 egrep -I '
sudo find / -type f -name config.inc.php -exec vim -p {} +
# How to find all open files by a process in Solaris 10
for i in `pfiles pid|grep S_IFREG|awk '{print $5}'|awk -F":" '{print $2}'`; do find / -inum $i |xargs ls -lah; done
# Command to find filesystem type
replace old new -- `find -type f`
# Search recursively to find a word or phrase in certain file types, such as C code
find . -name "*.[ch]" -exec grep -i /dev/null "search pharse" {} \;
find . | xargs perl -p -i.bak -e 's/oldString/newString/;'
find . -type f -name filename.exe -exec sed -i "s/oldstring/oldstring/g" {} +;
find . -type f -a \! -links 1
find /var/www/ -type f -print0 | xargs -0 chmod 644
find /var/www/ -type f -print0 | xargs -0 chmod 644
find /some/path -type f -printf '%f\n' | grep -o '\..\+$' | sort | uniq -c | sort -rn
find /some/path -type f | gawk -F/ '{print $NF}' | gawk -F. '/\./{print $NF}' | sort | uniq -c | sort -rn
alias gfind='find . -print0  | xargs -0 egrep -I '
# use the find command and have it not print trailing slashes
find * -maxdepth 0 -type d
find ./ -name "*.sh" -exec chmod +x {} \;
# Advanced ls using find to show much more detail than ls ever could
alias LS='find -mount -maxdepth 1 -printf "%.5m %10M %#9u:%-9g %#5U:%-5G %TF_%TR %CF_%CR %AF_%AR %#15s [%Y] %p\n" 2>/dev/null'
find . -type f -name "*.txt" | while read; do (($(cat $THISFILE | wc -l) < 10)) && rm -vf "$THISFILE";  done
find /var/www/ -name file -exec cp {}{,.bak} \;
find /var/www/ -name file -exec cp {} {}.bak \;
find . | while read line; do test `stat -c %u $line` -eq 1003 && chown android:android $line && echo $line; done
find . -name "*.pdf" -exec pdftk {} dump_data output \; | grep NumberOfPages | awk '{s+=$2} END {print s}'
 # substitute (find and replace) "foo" with "bar" on each line
be executed more quickly if the "find" expression is specified before
If you have any additional scripts to contribute or if you find errors
alias gfind='find . -print0  | xargs -0 egrep -I '
find . -type f |egrep '^./.*\.' |sed -e "s/\(^.*\.\)\(.*$\)/\2/" |sort |uniq
find . \( -name "*cpp" -o -name "*hpp" \) -exec grep -Hn -E "043[eE]|70[Dd]7" \{\} \;
find . -name *js -type f | xargs yardstick | sort -k6 -n
find /var/www/ -type f -print0 | xargs -0 chmod 644
find /var/www/ -type f -print0 | xargs -0 chmod 644
find -type f | xargs ls -1tr
alias gfind='find . -print0  | xargs -0 egrep -I '
# find str in  in a directory which file extension is .php
find ./ -type f -name "*.php" | xargs grep -n "name" -r {}
# a find and replace within text-based files
find /path/ -type f -exec grep -l '<string of text>' {} \; | xargs sed -i -e 's%<string of text>%<new text string>%g'
find . -iname '*jpg' -print0  | xargs -0 exiftool -warning; find . -iname '*jpg' -print0  | xargs -0 jpeginfo -c
find /some/path -type f | gawk -F/ '{print $NF}' | gawk -F. '/\./{print $NF}' | sort | uniq -c | sort -rn
# find duplicate messages in a Maildir
find $folder -name "[1-9]*" -type f -print|while read file; do echo $file $(sed -e '/^$/Q;:a;$!N;s/\n //;ta;s/ /_/g;P;D' $file|awk '/^Received:/&&!r{r=$0}/^From:/&&!f{f=$0}r&&f{printf "%s%s",r,f;exit(0)}');done|sort -k 2|uniq -d -f 1
# find an unused unprivileged TCP port
# find sparse files
find -type f -printf "%S\t%p\n" 2>/dev/null | gawk '{if ($1 < 1.0) print $1 $2}'
find . -maxdepth 1 ! -name '.'  -execdir du -0 -s {} + | sort -znr | gawk 'BEGIN{ORS=RS="\0";} {sub($1 "\t", ""); print $0;}' | xargs -0 du -hs
mplayer $(find . -iname '*.avi' | shuf -n1)
find . -name ".svn" -type d -exec rm -rf {} \;
for folder in $( find $( pwd ) -maxdepth 1 -type d | grep -v .svn ); do svn propset svn:ignore -F ignorelist ${folder}; done
find . -name ".#*" -exec rm {} \;
ls -ltr --directory $(find . -regex "./.*[^/]*\'" -type f | xargs -n 1 dirname | sort | uniq)
find . -type f -name "*.php" -exec wc -l {} +;
cd ~/ruby/project_a ; find . -name "*profile*" -exec pax -rw {} ~/ruby/project_b/ \;
find . -iname pom.xml -type f -exec bash -c "cat {} | sed s/1\.0\.46\-SNAPSHOT/1\.0\.48\-SNAPSHOT/g > {}.tmp " \; -exec mv {}.tmp {} \;
find . -type f -name "*.py" -exec wc -l {} \; | awk '{ SUM += $1} END {print SUM }'
find . -type f -name '*.php' | xargs cat | sed -re ':top /\/\*.*\*\// { s/\/\*.*\*\///g ; t top }; /\/\*/ { N ; b top }' | awk '$0 !~ /^[\t[:space:]]*($|(\/\/)|(#))/' | wc -l
find . -type f -name *.[ch] -exec wc -l {} \;
find -name *.\[c\|h\] | xargs wc -l
find . -iname '*TODO*'
find . -name .git -print0 | while read -d $'\0' g; do echo "$g"; cd "$g"; git gc --aggressive; cd -; done
find -maxdepth 1 -type d | while read dir; do echo $dir; echo cmd2; done
find . -type f -name "*.gz" | while read line ; do gunzip --to-stdout "$line" | bzip2 > "$(echo $line | sed 's/gz$/bz2/g')" ; done
find . -name *js -type f | xargs yardstick | sort -k6 -n
# find potentially malicious PHP commands used in backdoors and aliked scripts
find ./public_html/ -name \*.php -exec grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
# find unreadable file
sudo -u apache find . -not -readable
count=0;while IFS= read -r -d '' line; do echo "${line#* }"; ((++count==5)) && break; done < <(find . -type f -printf '%s %p\0' | sort -znr)
echo "template file: ";read tpl;echo "new file(s separated w. space):"; read fl;touch $fl;find $fl -exec cp -ap $tpl "{}" \;
find ~/ -type d \( -wholename '/dev/*' -o -wholename '/sys/*' -o -wholename '/proc/*' \) -prune -o -exec test -w {} \; -exec echo {} writable \; 2>/dev/null
IFS=$'\n' && for f in `find . -type f -exec md5sum "{}" \;`; do echo $f | sed -r 's/^[^ ]+/Checking:/'; echo $f | cut -f1 -d' ' | netcat hash.cymru.com 43 ; done
echo "template file: ";read tpl;echo "new file(s separated w. space):"; read fl;touch $fl;find $fl -exec cp -ap $tpl "{}" \;
# a find and replace within text-based files
# Advanced ls using find to show much more detail than ls ever could
alias LS='find -mount -maxdepth 1 -printf "%.5m %10M %#9u:%-9g %#5U:%-5G %TF_%TR %CF_%CR %AF_%AR %#15s [%Y] %p\n" 2>/dev/null'
# find . \( -name \*.cgi -o -name \*.txt -o -name \*.htm -o -name \*.html -o -name \*.shtml \) -print | xargs grep -s pattern
find . \( -name \*.cgi -o -name \*.txt -o -name \*.htm -o -name \*.html -o -name \*.shtml \) -print | xargs grep -s pattern
find . -type f -regex '.*html$' -exec sed -i 's/\xEF\xBB\xBF//' '{}' \;
# find geographical location of an ip address
echo '#!/bin/bash' > junk.sh ; find . -iname *.pdf -type f -printf \p\s\2\a\s\c\i\i\ \"%p\"\ \ \"%p\.\t\x\u\"\;\ \p\a\r\ \<\"%p\.\t\x\u\"\ \>\"%p\.\t\x\t\"\ \;\ \r\m\ \"%p\.\t\x\u\"\ \\n >>junk.sh; chmod 766 junk.sh; ./junk.sh ; rm junk.sh
find . -name '*.rar' -execdir unrar e {} \;
find /Applications -type d -maxdepth 1 -exec sh -c 'echo "{}"; (plutil -convert xml1 -o - "{}/Contents/Info.plist" | xpath /dev/stdin "concat(\"v\", /plist/dict/string[preceding-sibling::key[1]=\"CFBundleShortVersionString\"]/node())" 2>/dev/null)' \;
find . -type f -name filename.exe -exec sed -i "s/oldstring/oldstring/g" {} +;
# a find and replace within text-based files
find /path/ -type f -exec grep -l '<string of text>' {} \; | xargs sed -i -e 's%<string of text>%<new text string>%g'
# a find and replace within text-based files
find . -name \*.swp -type f -delete
replace old new -- `find -type f`
find . | xargs perl -p -i.bak -e 's/oldString/newString/;'
for code in $(find . -type f -name '*.p[ml]'); do perl -c "$code"; done
find . -type f -print0|xargs -0 md5sum|sort|perl -ne 'chomp;$ph=$h;($h,$f)=split(/\s+/,$_,2);print "$f"."\x00" if ($h eq $ph)'|xargs -0 rm -v --
            find -maxdepth 1 -type f -iname \*$1 | sort > $2
            find -maxdepth 1 -type f -iname \*$1 | sort > $2
# easily find megabyte eating files or directories
for folder in $( find $( pwd ) -maxdepth 1 -type d | grep -v .svn ); do svn propset svn:ignore -F ignorelist ${folder}; done
$( find . | grep '.*~' )
$( find . | grep '\.pdf' )
find . -iname "\*txt" | grep -E "g/(.*)(Conflict)(.*)(Resolution)(.*)" -
find . -type f -print -xargs grep -Gnis --color=always "Cheldelin"
find . -type f -print xargs grep -Gnis --color=always "Cheldelin"
find . -type f -print | xargs grep -Gnis --color=always "Cheldelin"
find . -type f -print | xargs grep -Gnis -I --color=always "Cheldelin"
find \( -name "*.py" \) -type f -print | xargs grep -E --color=always "Pruitt\(.*\)"
find \( -name "*.py" \) -type f -print | xargs grep -is --color=always "Pruitt\(.*\)"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "$1" | less -R
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt" wv
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt.*"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "w"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "w" | less -R
find \( -name "*.txt" \) -type f -print | xargs grep -E --color=always "Pruitt\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -C 5 -I "Tidwell" wv
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -C 5 -I --color=always "Tidwell"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -C 5 -I --color=always "Tidwell" wv
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I " Burton "
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always " Tidwell "
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "(Burton,*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "(Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "Tidwell"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "(Cheldelin.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin.*"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "\(Burton.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "\(Cheldelin.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I " Burton "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "( Burton,"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "( Burton,.*) "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "Burton"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "Burton" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "Pruitt"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=alwa y s "Burton" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always " Conflict Resolved? "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always " Stalemate and Settlement "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always " Tidwell "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "(*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "(Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "([a-zA-Z])"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "([a-z])"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Burton"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Burton" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Pruitt"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I -C 3 --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "(Burton)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "Burton"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "\(Burton.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "\(Burton.*\)" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Vnis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enis -I --color=always "(Burton.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enois -I --color=always "(Burton.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enois -I --color=always "\(Burton.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always ".*(.*).*"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "Theory of"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "Theory of.*" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)conflict"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)conflict" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of Positive"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of Positive" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of.*" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of.*" | sort -u w
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "w"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC3 --color=always "Theory of"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC3 --color=always "Theory of.*"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC3 --color=always "Theory of.*" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nois -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always " (.*) "
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*.Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*.Burton.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*.put.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*put*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*)" | sort
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*)" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*put*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*put.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "([a-zA-Z])"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(\D\+)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(\w\*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(\w\+)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "*(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "*(.*)*"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "\\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "^(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "^(.*\\)"
    #alias 'wfx'='find ./ -name "*.sh" -exec chmod +x {} \;'
    alias 'wfd'='find -maxdepth 1 -type d'
    alias fpy='find . -name "*[py]" -exec grep -is /dev/null $1 {} \;'
    alias frc='find . -name "*[rc]" -exec grep -is /dev/null $1 {} \;'
    alias fsh='find . -name "*[sh]" -exec grep -is /dev/null $1 {} \;'
    alias ftx='find . -name "*[txt]" -exec grep -is /dev/null $1 {} \;'
    alias fwn='find -wholename'
    alias gfind='find . -print0  | xargs -0 egrep -I '
    alias lldu='find -maxdepth 1 -mindepth 1 -type d -exec du -sh {} \;'
            find -maxdepth 1 -type f -iname \*$1 | sort > $2
find . -name "*.pdf" -exec echo {} > ls_wpdf.txt
find \( -name "*.pdf" \) -type f -print
# du and sort to find the biggest directories in defined filesystem
# Recursively find top 20 largest files (> 1MB) sort human readable format
find . -type f -print0 | xargs -0 du -h | sort -hr | head -20
# Recursively find top 20 largest files (> 1MB) sort human readable format
find . -mount -type f -printf "%k %p\n" | sort -rg | cut -d \  -f 2- | xargs -I {} du -sh {} | less
# find and grep Word docs
#find . -iname '*filename*.doc' | { while read line; do antiword "$line"; done; } | grep -C4 search_term;
    find . -type f -and -iregex '.*\.txt$' -and -print0 -exec grep --color=always -Hn "$1" {} \;
$( find . | grep '.*~' )
$( find . | grep '\.pdf' )done
find . -iname "\*txt" | grep -E "g/(.*)(Conflict)(.*)(Resolution)(.*)" -
find . -iname '*txt'
find . -maxdepth 3 '*txt'
find . -maxdepth 9 '*txt'
find . -name "*.pdf" -exec echo {} > ls_wpdf.txt
find . -type f -print -xargs grep -Gnis --color=always "Cheldelin"
find . -type f -print xargs grep -Gnis --color=always "Cheldelin"
find . -type f -print | xargs grep -Gnis --color=always "Cheldelin"
find . -type f -print | xargs grep -Gnis -I --color=always "Cheldelin"
find \( -name "*.py" \) -type f -print | xargs grep -E --color=always "Pruitt\(.*\)"
find \( -name "*.py" \) -type f -print | xargs grep -is --color=always "Pruitt\(.*\)"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "$1" | less -R
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt.*"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "w"
find \( -name "*.py" \) -type f -print | xargs grep -nis -IC1 --color=always "w" | less -R
find \( -name "*.txt" \) -type f -print | xargs grep -E --color=always "Pruitt\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -C 5 -I "Tidwell"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -C 5 -I --color=always "Tidwell"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I " Burton "
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always " Tidwell "
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "(Burton,*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "(Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "Tidwell"
find \( -name "*.txt" \) -type f -print | xargs grep -Enis -I --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "(Cheldelin.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin.*"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "Cheldelin.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "\(Burton.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Enois -I --color=always "\(Cheldelin.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I " Burton "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "( Burton,"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "( Burton,.*) "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "Burton"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "Burton" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I "Pruitt"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=alwa y s "Burton" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always " Conflict Resolved? "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always " Stalemate and Settlement "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always " Tidwell "
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "(*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "(Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "([a-zA-Z])"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "([a-z])"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Burton"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Burton" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "Pruitt"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnis -I -C 3 --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "(Burton)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "Burton"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "\(Burton.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -Gnois -I --color=always "\(Burton.*\)" > www_Burton.txt
find \( -name "*.txt" \) -type f -print | xargs grep -Vnis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enis -I --color=always "(Burton.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enois -I --color=always "(Burton.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -enois -I --color=always "\(Burton.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I --color=always "(Burton*)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always ".*(.*).*"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "Theory of"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "Theory of.*" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -I -C 3 --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)conflict"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Pruitt\(.*\)conflict" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of Positive"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of Positive" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of.*" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "Theory of.*" | sort -u w
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC1 --color=always "w"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC3 --color=always "Theory of"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC3 --color=always "Theory of.*"
find \( -name "*.txt" \) -type f -print | xargs grep -nis -IC3 --color=always "Theory of.*" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -nois -I --color=always "Cheldelin"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always " (.*) "
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*.Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*.Burton.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*.put.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(*put*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*)" | sort
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*)" | sort -u
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*put*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(.*put.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(Burton,.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "([a-zA-Z])"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(\D\+)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(\w\*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "(\w\+)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "*(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "*(.*)*"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "\\(.*\)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "\\(.*\\)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "^(.*)"
find \( -name "*.txt" \) -type f -print | xargs grep -oGnis -I --color=always "^(.*\\)"
setopt hist_find_no_dups # When searching history don't display results already cycled through twice
find-symbolic-links() {
    ls -Rl `find . -maxdepth 1 -type l -print`
    # Search, find , regex , grep , sed
    diff <(cd dir1 && find . | sort) <(cd dir2 && find . | sort)
#find-duplicates () { find "$@" -not -empty -type f -printf "%s\0" | sort -rnz | uniq -dz | xargs -0 -I{} -n1 find "$@" -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate; }
    alias 'wfd'='find -maxdepth 1 -type d'
    alias 'wfx'='find ./ -name "*.sh" -exec chmod +x {} \;'
    alias fpy='find . -name "*[py]" -exec grep -is /dev/null $1 {} \;'
    alias frc='find . -name "*[rc]" -exec grep -is /dev/null $1 {} \;'
    alias fsh='find . -name "*[sh]" -exec grep -is /dev/null $1 {} \;'
    alias ftx='find . -name "*[txt]" -exec grep -is /dev/null $1 {} \;'
    alias fwn='find -wholename'
    alias gfind='find . -print0  | xargs -0 egrep -I '
# find and grep Word docs
#find . -iname '*filename*.doc' | { while read line; do antiword "$line"; done; } | grep -C4 search_term;
    alias lldu='find -maxdepth 1 -mindepth 1 -type d -exec du -sh {} \;'
    find . -type f -print0 -exec grep -hisyE "$2" {} \;
wfi() {find . -type f -name '*py' -print0 | xargs -0 grep -y "$1"}
# find and grep Word docs
www_find()
    find . -iname '*filename*.doc' | { while read line; do antiword "$line"; done; } | grep -C4 "$1";
    find . -type f -and -iregex '.*\.txt$' -and -print0 -exec grep --color=always -Hn "$1" {} \;
