kate /usr/share/pyshared/autokey/qtui/data/api.txt

# 
kate -b %U

clipboard.fill_clipboard(contents)

clipboard.fill_clipboard(contents)

clipboard.fill_clipboard(contents) Copy text into the clipboard
clipboard.fill_selection(contents) Copy text into the X selection
clipboard.get_clipboard() Read text from the clipboard
clipboard.get_selection() Read text from the X selection

dialog.choose_colour(title="Select Colour") Show a Colour Chooser dialog
dialog.choose_directory(title="Select Directory", initialDir="~", rememberAs=None) Show a Directory Chooser dialog
dialog.combo_menu(options, title="Choose an option", message="Choose an option") Show a combobox menu
dialog.input_dialog(title="Enter a value", message="Enter a value", default="") Show an input dialog
dialog.list_menu(options, title="Choose a value", message="Choose a value", default=None) Show a single-selection list menu
dialog.list_menu_multi(options, title="Choose one or more values", message="Choose one or more values", defaults=[]) Show a multiple-selection list menu
dialog.open_file(title="Open File", initialDir="~", fileTypes="*|All Files", rememberAs=None) Show an Open File dialog
dialog.password_dialog(title="Enter password", message="Enter password") Show a password input dialog
dialog.save_file(title="Save As", initialDir="~", fileTypes="*|All Files", rememberAs=None) Show a Save As dialog
engine.create_abbreviation(folder, description, abbr, contents) Create a text abbreviation
engine.create_hotkey(folder, description, modifiers, key, contents) Create a text hotkey.
engine.create_phrase(folder, description, contents) Create a text phrase
engine.get_folder(title) Retrieve a folder by its title
engine.run_script(description) Run an existing script using its description to look it up
keyboard.send_key(key, repeat=1) Send a keyboard event
keyboard.send_keys(keyString) Send a sequence of keys via keyboard events
keyboard.fake_keypress(key, repeat=1) Fake a keypress
keyboard.press_key(key) Send a key down event
keyboard.release_key(key) Send a key up event
mouse.click_absolute(x, y, button) Send a mouse click relative to the screen (absolute)
mouse.click_relative(x, y, button) Send a mouse click relative to the active window
store.get_value(key) Get a value
store.remove_value(key) Remove a value
store.set_value(key, value) Store a value
system.create_file(fileName, contents="") Create a file with contents
system.exec_command(command, getOutput=True) Execute a shell command
window.activate(title, switchDesktop=False) Activate the specified window, giving it input focus
window.close(title) Close the specified window gracefully
window.get_active_geometry() Get the geometry of the currently active window
window.move_to_desktop(title, deskNum) Move the specified window to the given desktop
window.close(title, xOrigin=-1, yOrigin=-1, width=-1, height=-1) Resize and/or move the specified window
window.set_property(title, title, action, prop) Set a property on the given window using the specified action
window.switch_desktop(deskNum) Switch to the specified desktop
window.wait_for_exist(title, timeOut=5) Wait for window with the given title to be created
window.wait_for_focus(title, timeOut=5) Wait for window with the given title to have focus
