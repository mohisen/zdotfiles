#https://sites.google.com/site/eenixprojects/linux-projects/pdf-speech-reader



This is a nifty little bash script that uses a speech synthesizer to read a PDF document. This is quite handy if you want to listen to the words while reading an e-book, or just listen while doing something else. What makes this script awesome, is that it remembers the last line it read, and gives you the option to restart listening at that same line. The script has two dependencies: pdftotext and espeak. I am pretty sure that they both come with Ubuntu per default, otherwise they can be found in the repositories.

The script can be viewed in the text box below, or downloaded from the link at the bottom of the page.


####################################################
 # espeakpdf                                        #
 # Author: EEnix Projects                           #
 # Web: https://sites.google.com/site/eenixprojects #
 ####################################################
 
 # Store filename as variable.
 PDFFILE="$1"
 clear
 
 # Echo some information to terminal.
 echo "espeakpdf"
 echo "Author: EEnix Projects"
 echo "Website: https://sites.google.com/site/eenixprojects"
 
 # Create temp file for saving text
 TEMPREAD=/tmp/$(basename "$PDFFILE" | awk -F. '{print $1}').txt
 HISTORY=~/.espeakpdf/espeakpdf.history
 if [ ! -d ~/.espeakpdf ];then
     mkdir ~/.espeakpdf
 fi
 if [ ! -f $HISTORY ];then
     echo "# espeakpdf history file." > $HISTORY 
     echo "# Author: EEnix Projects" >> $HISTORY
     echo "# Website: https://sites.google.com/site/eenixprojects" >> $HISTORY
 fi
 
 # Get write instruction if file exists
 if [ -f "$TEMPREAD" ]; then
     echo "Text file with the same name already exists, would you like to overwrite it? (y/N)"
     read RESPONSE
 case $RESPONSE in
 y )
     # Convert PDF to TEXT File.
     echo ""
     echo "Converting $PDFFILE to $(basename "$TEMPREAD")"
     echo "Overwriting to path: $TEMPREAD"
     pdftotext "$PDFFILE" "$TEMPREAD";;
 Y )
     # Convert PDF to TEXT File.
     echo ""
     echo "Converting $PDFFILE to $(basename "$TEMPREAD")"
     echo "Overwriting to path: $TEMPREAD"
     pdftotext "$PDFFILE" "$TEMPREAD";;
 N )
     echo ""
     echo "Existing text file will be used.";;
 n )
     echo ""
     echo "Existing text file will be used.";;
 * )
     echo ""
     echo "Existing text file will be used.";;
 esac
 
 else
     echo ""
     echo "Converting $PDFFILE to $(basename "$TEMPREAD")"
     echo "Writing to path: $TEMPREAD"
     pdftotext "$PDFFILE" "$TEMPREAD"
 fi
 
 # Count number of lines.
 echo ""
 echo "Counting number of lines in text file..."
 NUMLINES=$(cat "$TEMPREAD" | wc -l)
 
 # Check if file has bookmark in history and get instruction on where to begin:
 if grep -q "$TEMPREAD" $HISTORY; then
     echo ""
     echo "Would you like to start at your previous bookmark? (Y/n)"
     echo "(Answering no will erase previous bookmark)"
     read RESPONSE
     case $RESPONSE in
     y )
         STARTLINE=`cat $HISTORY | grep "$TEMPREAD" | awk '{print $(NF)}'`;;
     Y )
         STARTLINE=`cat $HISTORY | grep "$TEMPREAD" | awk '{print $(NF)}'`;;
     n )    
         STARTLINE=1;;
     N )
         STARTLINE=1;;
     * )
         STARTLINE=`cat $HISTORY | grep "$TEMPREAD" | awk '{print $(NF)}'`;;
     esac
 else
     STARTLINE=1
 fi
 
 # Start reading PDF:
 echo ""
 echo "Reading:"
 for i in $(seq $STARTLINE $NUMLINES)
 do
     CURLINE=$(cat "$TEMPREAD" | head -n $i | tail -n 1)
     echo "Line $i: $CURLINE"
     espeak -s 150 -v en-uk -p 50 "$CURLINE" >/dev/null 2>
 



After downloading the script from the link at the bottom of the page, place it somewhere in your $PATH (e.g. ~/bin) and make it executable using the following command:
chmod u+x espeakpdf

You can now run the command from anywhere in your terminal, by simply adding the PDF you want to be read as an argument, for example:

espeakpdf Document.pdf

Download the script from this link.
I hope this bash script makes reading more enjoyable! :-D (P.S. I will be looking into improving the voice quality of the speech synthesizer)
