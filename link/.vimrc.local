" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
" =============================================================================
"
" File: .vimrc.local
" Author:  Ahmed Alghamdi <tazjel@gmail.com>
" Last Change: Sun Jan 26 00:06:11 AST 2014
" Version: 0.1
" WebPage: http://github.com/tazjel/zdotfiles.git
" License: BSD
"
" References : http://github.com/tazjel/zdotfiles.git
"
" script type: plugin
" }

if exists('g:loaded_zvim')
  finish
endif
let g:loaded_zvim =1


if !exists('g:spf13_no_autochdir')
    autocmd BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif
    " Always switch to the current file directory
endif
" Use local vimrc if available {
    if filereadable(expand("~/.vimrc.local"))
        source ~/.vimrc.local
    endif
" }

" Use bundles config {
    if filereadable(expand("~/.vimrc.bundles"))
        source ~/.vimrc.bundles
    endif
" }


" Adjust viewports to the same size
map <Leader>= <C-w>=
map <CR> :
map ;; :q!<CR>
let mapleader = ','
let maplocalleader = ','
""""""""""""""

" Togglesyntax
function! ToggleSyntax()
    if exists("g:syntax_on")
        syntax off
    else
        syntax enable
        scriptencoding utf-8
    endif
endfunction


" diff
function! WW__diff_map()
    if &diff
        nnoremap <C-j> ]c
        nnoremap <C-k> [c
        colorscheme inkpot
        "Vimdiff quit without changes
        nnoremap q :qa! <CR>
    endif
endfunction
"

" find files
fun! WW__FindFiles()
  let $filename = input("Enter file name to find: ")
  let $error_file = $HOME."/.findfile.output"
  silent! exe "!find . -iname \"".$filename."\" \| xargs file \| perl -pe 's/:/:1:/' > ".$error_file
  cfile $error_file
  copen
  redraw!
endfun
"
"References less.vim"
" Switch to editing (switch off less mode)
" map v :silent call <SID>End()<CR>"
fun! s:End()
    set ma
    if exists('s:lz')
    let &lz = s:lz
    endif
    unmap h
    unmap H
    unmap <Space>
    unmap <C-V>
    unmap f
    unmap <C-F>
    unmap z
    unmap <Esc><Space>
    unmap F
    unmap d
    unmap <C-D>
    unmap <CR>
    unmap <C-N>
    unmap e
    unmap <C-E>
    unmap j
    unmap <C-J>
    unmap b
    unmap <C-B>
    unmap w
    unmap <Esc>v
    unmap u
    unmap <C-U>
    unmap k
    unmap y
    unmap <C-Y>
    unmap <C-P>
    unmap <C-K>
    unmap r
    unmap <C-R>
    unmap R
    unmap g
    unmap <
    unmap <Esc><
    unmap G
    unmap >
    unmap <Esc>>
    unmap %
    unmap p
    unmap n
    unmap N
    unmap q
    unmap v
    unmap /
    unmap ?
endfun


""command! -nargs=? -range=% PasteBin :call PasteBin(<line1>, <line2>)
" =============================================================================
" Section: Plugin completion
let g:loaded_zvim=2
