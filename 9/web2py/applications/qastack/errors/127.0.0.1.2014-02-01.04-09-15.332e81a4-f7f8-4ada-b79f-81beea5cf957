(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Row' object has no attribute 'COUNT(question_tags.id)'"
p3
sS'layer'
p4
S'/home/bani/zdotfiles/9/web2py/applications/qastack/views/default/view.html'
p5
sS'code'
p6
S'response.write(\'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us">\\n<head>\\n\\t<title>QA-Stack - Your questions, everyone\\\'s answers</title>\\n\\t<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" />\\n\\t<meta name="description" content="QA-Stack is a Questions and Answers site created in python using the web2py web application development framework" />\\n\\t<meta name="keywords" content="qa-stack,q&amp;a,python,web2py,stack overflow,coding" />\\n\\t<meta name="robots" content="index, follow" />\\n\\t<link rel="shortcut icon" href="\', escape=False)\nresponse.write(URL(r=request,c=\'static/images\',f=\'favicon.ico\'))\nresponse.write(\'" />\\n    <link rel="stylesheet" href="\', escape=False)\nresponse.write(URL(r=request,c=\'static/css\',f=\'qastack_stylesheet.css\'))\nresponse.write(\'" type="text/css" title="QA-Stack CSS" media="screen" />\\n</head>\\n<body>\\n\\n<div id="header">\\n\\t<div><a href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'index\'))\nresponse.write(\'"\\n\\t        class="nolink"\\n\\t        title="\', escape=False)\nresponse.write(XML(T(\'QA-Stack Homepage\')))\nresponse.write(\'"><img src="\', escape=False)\nresponse.write(URL(r=request, c=\'static/images\', f=\'qastack_logo.png\'))\nresponse.write(\'"\\n\\t\\t\\talt="QA-Stack.com" style="width:276px;height:60px;border:0;" /></a></div>\\n\\t<p><em class="note">Your questions, Everyone\\\'s answers</em></p>\\n\\t<ul>\\n\\t\\t<li><a id="aquestions" href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'index\'))\nresponse.write(\'" title="\', escape=False)\nresponse.write(XML(T(\'Questions\')))\nresponse.write(\'">Questions</a></li>\\n\\t\\t<li><a id="aunanswered" href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'index\', args=[\'unanswered\']))\nresponse.write(\'" title="\', escape=False)\nresponse.write(XML(T(\'Unanswered\')))\nresponse.write(\'">Unanswered</a></li>\\n\\t\\t<li><a id="afeatured" href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'index\', args=[\'featured\']))\nresponse.write(\'" title="\', escape=False)\nresponse.write(XML(T(\'Featured\')))\nresponse.write(\'">Featured</a></li>\\n\\t\\t\', escape=False)\nif auth_user.is_auth():\n    response.write(\'\\n\\t\\t\\t<li><a id="asubscribed"\\n\\t\\t\\t\\thref="\', escape=False)\n    response.write(URL(r=request,\n    c=\'default\',\n    f=\'index\',\n    args=[\'subscribed\']))\n    response.write(\'"\\n\\t\\t\\t\\ttitle="\', escape=False)\n    response.write(XML(T(\'Subscribed\')))\n    response.write(\'">Subscribed</a></li>\\n\\t\\t\', escape=False)\n    pass\nresponse.write(\'\\n\\t\\t<li><a id="atags" href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'tags\'))\nresponse.write(\'" title="\', escape=False)\nresponse.write(XML(T(\'Tags\')))\nresponse.write(\'">Tags</a></li>\\n\\t\\t\', escape=False)\nif auth_user.is_admin():\n    response.write(\'\\n\\t\\t\\t<li><a id="aadmin" href="\', escape=False)\n    response.write(URL(r=request, c=\'admin\', f=\'index\'))\n    response.write(\'" title="\', escape=False)\n    response.write(XML(T(\'Admin\')))\n    response.write(\'">Admin</a></li>\\n\\t\\t\', escape=False)\n    pass\nresponse.write(\'\\n\\t</ul>\\n\\t<form id="layoutdims" method="post" action="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'search\'))\nresponse.write(\'">\\n\\t\\t<fieldset>\\n\\t\\t\\t\', escape=False)\nif auth_user.is_auth():\n    response.write(\'\\n\\t\\t\\t\\t<em>\', escape=False)\n    response.write(auth_user())\n    response.write(\' (\', escape=False)\n    response.write(auth_user.get_role())\n    response.write(\')</em> |\\n\\t\\t\\t\\t<a class="bold" title="\', escape=False)\n    response.write(XML(T(\'Ask a Question\')))\n    response.write(\'" href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'ask\'))\n    response.write(\'">\', escape=False)\n    response.write(XML(T(\'Ask a Question\')))\n    response.write(\'</a> |\\n\\t\\t\\t\\t<a title="\', escape=False)\n    response.write(XML(T(\'Member Preferences\')))\n    response.write(\'" href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'preferences\'))\n    response.write(\'">\', escape=False)\n    response.write(XML(T(\'Preferences\')))\n    response.write(\'</a> |\\n\\t\\t\\t\\t<a title="\', escape=False)\n    response.write(XML(T(\'Logout\')))\n    response.write(\'" href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'logout\'))\n    response.write(\'">\', escape=False)\n    response.write(XML(T(\'Logout\')))\n    response.write(\'</a> |\\n\\t\\t\\t\', escape=False)\nelse:\n    response.write(\'\\n                <a title="\', escape=False)\n    response.write(XML(T(\'Ask a Question\')))\n    response.write(\'" href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'login\', vars=dict(ask=\'yes\')))\n    response.write(\'">Ask a Question</a> |\\n\\t\\t\\t\\t<a title="\', escape=False)\n    response.write(XML(T(\'Log In/Registering\')))\n    response.write(\'" href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'login\'))\n    response.write(\'">Login/Register</a> |\\n\\t\\t\\t\', escape=False)\n    pass\nresponse.write(\'\\n\\t\\t\\t<a title="\', escape=False)\nresponse.write(XML(T(\'about\')))\nresponse.write(\'" href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'about\'))\nresponse.write(\'">\', escape=False)\nresponse.write(XML(T(\'About\')))\nresponse.write(\'</a> |\\n\\t\\t\\t<input type="text" id="srch_txt" name="srch_txt" value="" style="width:200px;" />\\n\\t\\t\\t<input type="submit" id="srch_btn" name="srch_btn" value="\', escape=False)\nresponse.write(XML(T(\'Tag Search\')))\nresponse.write(\'" />\\n\\t\\t</fieldset>\\n\\t</form>\\n</div>\\n\\n<table class="main-layout" cellspacing="0" cellpadding="0">\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<td class="main-layout-left">\\n\\t\\t\\t\\t<!-- Column 1 start -->\\n\\t\\t\\t\\t<div class="main-layout-container">\\n\\t\\t\\t\\t\\t\', escape=False)\nresponse.write(\'\\n\\n<!--\\nNamed Anchors Specification:\\n\\nquestionMain - Start of the question, top of page\\nquestionCommentsStart - Start of the comments section for the question\\nanswersMain - The start of the answers section\\nanswerXYZ - Each Answer with ID XYZ\\ncommentXYX - A specific anchor on a comment ID (comments are unique among questions and answers)\\n//-->\\n\\n<script type="text/javascript" src="\', escape=False)\nresponse.write(URL(r=request,c=\'static/js\',f=\'jquery.js\'))\nresponse.write(\'"></script>\\n\\n<script type="text/javascript">\\n<!--\\n    function ajaxSubmit(url, qa_elem, add_val) {\\n        /*\\n         url is the URL to process\\n         qa_elem is the elem_id that will increment or decrement\\n         add_val will be +1 or -1 depending if it is upvote or dnvote\\n        */\\n        var request = new XMLHttpRequest();\\n        request.open("GET", url);\\n        request.onreadystatechange = function() {\\n            if (request.readyState == 4 && request.status == 200) {\\n                document.getElementById(\\\'dyn_msg\\\').innerText = request.responseText;\\n                // Only update the counts if we know for a fact that there\\n                // were no errors reported.\\n                if (request.responseText == \\\'\\\') {\\n                    var cur_val_o = document.getElementById(qa_elem);\\n                    var cur_val = parseInt(cur_val_o.innerText);\\n                    cur_val_o.innerText = cur_val + add_val;\\n                    document.getElementById(\\\'dyn_msg\\\').innerText = "Vote count has been updated " + cur_val_o.innerText + " points.";\\n                }\\n                reportMsg();\\n            }\\n        }\\n        //alert(request.readyState + "|" + request.status);\\n        request.send();\\n    }\\n\\n    function reportMsg() {\\n        var d = $(\\\'#dyn_msg\\\');\\n        var position = d.position();\\n        $(document).ready(function() {\\n            $(\\\'#dyn_msg\\\')\\n            .insertAfter( $(this) )\\n            .fadeIn(\\\'slow\\\')\\n            .animate({opacity: 1.0}, 1000)\\n            .fadeOut(\\\'slow\\\');\\n        });\\n    }\\n//-->\\n</script>\\n\\n<div id="dyn_msg" class="quick-alert"></div>\\n\\n\', escape=False)\nif not question.questions.is_visible:\n    response.write(\'\\n    <div class="error2">This Question is marked as HIDDEN - For Administration use Only</div>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n\', escape=False)\nif view_info[\'errors\']:\n    response.write(\'\\n    <p class="err">\', escape=False)\n    response.write(XML(T(\'There was one or more messages generated while processing your request, please review the following\')))\n    response.write(\'</p>\\n    <ul>\\n        \', escape=False)\n    for error in view_info[\'errors\']:\n        response.write(\'\\n            <li class="err">\', escape=False)\n        response.write(XML(T(error)))\n        response.write(\'</li>\\n        \', escape=False)\n        pass\n    response.write(\'\\n    </ul>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n\', escape=False)\nif request.vars.get(\'err\', \'0\') != \'0\':\n    response.write(\'\\n    <p class="err"><a name="error">\', escape=False)\n    response.write(XML(T(\'An error or warning has been generated, please read below\')))\n    response.write(\':</a></p>\\n    <p class="err">\\n        \', escape=False)\n    response.write(XML(T(request.vars.get(\'error_code\'))))\n    response.write(\'.\\n    </p>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n\', escape=False)\nif auth_user.is_auth():\n    response.write(\'\\n    <div class="info-pretty">\\n        <div>\\n            \', escape=False)\n    if view_info[\'is_subscribed\']:\n        response.write(\'\\n                <a href="\', escape=False)\n        response.write(URL(r=request, c=\'members\', f=\'unsubscribe\', args=[question.questions.id]))\n        response.write(\'"\\n                   title="\', escape=False)\n        response.write(XML(T(\'Unsubscribe from this Question\')))\n        response.write(\'"\\n                   class="bold">\', escape=False)\n        response.write(XML(T(\'Unsubscribe\')))\n        response.write(\'</a>\\n            \', escape=False)\n    else:\n        response.write(\'\\n                <a href="\', escape=False)\n        response.write(URL(r=request, c=\'members\', f=\'subscribe\', args=[question.questions.id]))\n        response.write(\'"\\n                   title="\', escape=False)\n        response.write(XML(T(\'Subscribe to this Question\')))\n        response.write(\'"\\n                   class="bold">\', escape=False)\n        response.write(XML(T(\'Subscribe\')))\n        response.write(\'</a>\\n            \', escape=False)\n        pass\n    response.write(\' |\\n            <!-- More "admin" options can be specified in this section //-->\\n            <a href="#add_answer" title="\', escape=False)\n    response.write(XML(T(\'Answer this Question\')))\n    response.write(\'"\\n               class="bold">\', escape=False)\n    response.write(XML(T(\'Answer\')))\n    response.write(\'</a>\\n            \', escape=False)\n    if can_comment:\n        response.write(\' |\\n                <a href="\', escape=False)\n        response.write(URL(r=request,\n        c=\'members\',\n        f=\'comment_question\',\n        anchor=\'add_comment\',\n        args=[question.questions.id]))\n        response.write(\'"\\n                   title="\', escape=False)\n        response.write(XML(T(\'Comment on this Question\')))\n        response.write(\'"\\n                   class="bold">\', escape=False)\n        response.write(XML(T(\'Comment Question\')))\n        response.write(\'</a>\\n            \', escape=False)\n        pass\n    response.write(\'\\n            \', escape=False)\n    if auth_user.has_role(\'TeamLead,Manager,SysAdmin\'):\n        response.write(\'\\n                |\\n                \', escape=False)\n        if view_info.get(\'featured_votes\', 0) >= 3:\n            response.write(\'\\n                    <span class="disabled-bold">\', escape=False)\n            response.write(XML(T(\'Featured Question\')))\n            response.write(\'</span>\\n                \', escape=False)\n        else:\n            response.write(\'\\n                    <a href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'flag\', args=[\'question\', question.questions.id, \'featured\'], vars=dict(qid=question.questions.id)))\n            response.write(\'"\\n                        title="\', escape=False)\n            response.write(XML(T(\'Award Featured Status\')))\n            response.write(\'"\\n                        class="bold">\', escape=False)\n            response.write(XML(T(\'Award Featured Status\')))\n            response.write(\'\\n                        (\', escape=False)\n            response.write(view_info.get(\'featured_votes\', \'??\'))\n            response.write(\')</a>\\n                \', escape=False)\n            pass\n        response.write(\'\\n            \', escape=False)\n        pass\n    response.write(\'\\n            \', escape=False)\n    if auth_user.has_role(\'TeamLead,Manager,SysAdmin,Reviewer\'):\n        response.write(\'\\n                |\\n                \', escape=False)\n        if view_info.get(\'offensive_votes\', 0) >= 3:\n            response.write(\'\\n                    <span class="disabled-bold">\', escape=False)\n            response.write(XML(T(\'Offensive Question\')))\n            response.write(\'</span>\\n                \', escape=False)\n        else:\n            response.write(\'\\n                    <a href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'flag\', args=[\'question\', question.questions.id, \'offensive\'], vars=dict(qid=question.questions.id)))\n            response.write(\'"\\n                    title="\', escape=False)\n            response.write(XML(T(\'Vote for Offensive Content\')))\n            response.write(\'"\\n                    class="bold">\', escape=False)\n            response.write(XML(T(\'Offensive Question\')))\n            response.write(\'\\n                    (\', escape=False)\n            response.write(view_info.get(\'offensive_votes\', \'??\'))\n            response.write(\')</a>\\n                \', escape=False)\n            pass\n        response.write(\'\\n            \', escape=False)\n        pass\n    response.write(\'\\n        </div>\\n    </div>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n<h2 class="fancy">\', escape=False)\nif question.questions.is_featured:\n    response.write(\'\\n    <img src="\', escape=False)\n    response.write(URL(r=request, c=\'static/images/medium\', f=\'shield_blue.png\'))\n    response.write(\'"\\n    alt="\', escape=False)\n    response.write(XML(T(\'Featured\')))\n    response.write(\'"\\n    title="\', escape=False)\n    response.write(XML(T(\'Featured\')))\n    response.write(\'"\\n    style="float:left;margin:0;vertical-algin:middle;" />\\n\', escape=False)\n    pass\nresponse.write(\'\\n&nbsp;<a name="questionMain">\', escape=False)\nresponse.write(question.questions.title)\nresponse.write(\'</a></h2>\\n\\n<div class="paragraph-big">\\n    <table cellspacing="1" cellpadding="1" style="width:100%;margin-bottom:10px;">\\n        <tbody>\\n            <tr>\\n                <td style="text-align:center;vertical-align:top;width:100px;">\\n                    \', escape=False)\nif stackhelper.user_can_vote():\n    response.write(\'\\n                        <a href="javascript:void(0);"\\n                        class="nolink"\\n                        onclick="ajaxSubmit(\\\'\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'question\', question.questions.id, \'up\', question.questions.id], vars=dict(from_ajax=1)))\n    response.write(\'\\\', \\\'q_votes_display\\\', 1);return false;"\\n                        title="\', escape=False)\n    response.write(XML(T(\'Vote Up\')))\n    response.write(\'"><img src="\', escape=False)\n    response.write(URL(r=request, c=\'static/images/medium\', f=\'checkmark.png\'))\n    response.write(\'"\\n                        alt="\', escape=False)\n    response.write(XML(T(\'Vote Up\')))\n    response.write(\'"\\n                        title="\', escape=False)\n    response.write(XML(T(\'Vote Up\')))\n    response.write(\'" /></a><br />\\n                        <span class="votes-display" id="q_votes_display">\', escape=False)\n    response.write(question.questions.votes_up - question.questions.votes_dn)\n    response.write(\'</span><br />\\n                        <a href="javascript:void(0);"\\n                        onclick="ajaxSubmit(\\\'\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'question\', question.questions.id, \'down\', question.questions.id], vars=dict(from_ajax=1)))\n    response.write(\'\\\', \\\'q_votes_display\\\', -1);return false;"\\n                        class="nolink"\\n                        title="\', escape=False)\n    response.write(XML(T(\'Vote Down\')))\n    response.write(\'"><img src="\', escape=False)\n    response.write(URL(r=request, c=\'static/images/medium\', f=\'x.png\'))\n    response.write(\'"\\n                        alt="\', escape=False)\n    response.write(XML(T(\'Vote Down\')))\n    response.write(\'"\\n                        title="\', escape=False)\n    response.write(XML(T(\'Vote Down\')))\n    response.write(\'" /></a>\\n                    \', escape=False)\nelse:\n    response.write(\'\\n                        <img src="\', escape=False)\n    response.write(URL(r=request, c=\'static/images/medium\', f=\'checkmark_disabled.png\'))\n    response.write(\'"\\n                        alt="\', escape=False)\n    response.write(XML(T(\'Not enough credits to upvote\')))\n    response.write(\'"\\n                        title="\', escape=False)\n    response.write(XML(T(\'Not enough credits to upvote\')))\n    response.write(\'" /><br />\\n                        <span class="votes-display">\', escape=False)\n    response.write(question.questions.votes_up - question.questions.votes_dn)\n    response.write(\'</span><br />\\n                        <img src="\', escape=False)\n    response.write(URL(r=request, c=\'static/images/medium\', f=\'x_disabled.png\'))\n    response.write(\'"\\n                        alt="\', escape=False)\n    response.write(XML(T(\'Not enough credits to downvote\')))\n    response.write(\'"\\n                        title="\', escape=False)\n    response.write(XML(T(\'Not enough credits to downvote\')))\n    response.write(\'" />\\n                    \', escape=False)\n    pass\nresponse.write(\'\\n                </td>\\n                <td style="vertical-align:top;">\\n                    <div class="lsep">\\n                        <div class="explain">\\n                            \', escape=False)\nif stackhelper.has_member_avatar(question.questions.created_by):\n    response.write(\'\\n                                <img src="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'get_avatar_image\', args=[question.questions.created_by]))\n    response.write(\'"\\n                                     alt=""\\n                                     style="vertical-align:top;" />\\n                            \', escape=False)\n    pass\nresponse.write(\'\\n                            \', escape=False)\nresponse.write(XML(T(\'By\')))\nresponse.write(\': \', escape=False)\nresponse.write(question.member_properties.property_value)\nresponse.write(\'\\n                            (\', escape=False)\nresponse.write(stackhelper.get_user_role(question.questions.created_by))\nresponse.write(\'),\\n                            \', escape=False)\nresponse.write(XML(T(\'Created\')))\nresponse.write(\'\\n                            \', escape=False)\nresponse.write(prettydate(question.questions.created_on, T))\nresponse.write(\',\\n                            \', escape=False)\nresponse.write(XML(T(\'Updated\')))\nresponse.write(\'\\n                            \', escape=False)\nresponse.write(prettydate(question.questions.modified_on, T))\nresponse.write(\'.\\n                        </div>\\n                        <div class="paragraph-all">\\n                            \', escape=False)\nresponse.write(XML(parse_content(question.questions.description)))\nresponse.write(\'\\n                        </div>\\n                        <img src="\', escape=False)\nresponse.write(URL(r=request, c=\'static/images/small\', f=\'tag.png\'))\nresponse.write(\'"\\n                             alt="Tags"\\n                             title="Tags"\\n                             style="float:left;margin:0 5px 0 0;vertical-algin:middle;" />\\n                        <div class="tags">\\n                            \', escape=False)\nfor tag in tags:\n    response.write(\'\\n                                <a class="tag" href="\', escape=False)\n    response.write(URL(r=request, c=\'default\', f=\'index\', args=[\'tags\'], vars=dict(tag=tag.tagname)))\n    response.write(\'"\\n                                   title="\', escape=False)\n    response.write(tag.tagname)\n    response.write(\'">\', escape=False)\n    response.write(tag.tagname)\n    response.write(\'</a>\\n                            \', escape=False)\n    pass\nresponse.write(\'\\n                        </div>\\n                    </div>\\n                    \', escape=False)\nif can_comment:\n    response.write(\'\\n                        <div class="paragraph-top">\\n                            <a href="\', escape=False)\n    response.write(URL(r=request,\n    c=\'members\',\n    f=\'comment_question\',\n    anchor=\'add_comment\',\n    args=[question.questions.id]))\n    response.write(\'"\\n                                title="\', escape=False)\n    response.write(XML(T(\'Comment on this Question\')))\n    response.write(\'"\\n                                class="bold">\', escape=False)\n    response.write(XML(T(\'Comment on this Question\')))\n    response.write(\'</a>\\n                            <!-- if the user has permissions to edit questions\\n                            (being an admin, etc, or the logged in user is the\\n                            creator of this question, then he can edit this) //-->\\n                            | <a href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'edit_question\', args=[question.questions.id]))\n    response.write(\'" title="" class="bold"\\n                            title="\', escape=False)\n    response.write(XML(T(\'Edit Question\')))\n    response.write(\'">\', escape=False)\n    response.write(XML(T(\'Edit Question\')))\n    response.write(\'</a>\\n                        </div>\\n                    \', escape=False)\n    pass\nresponse.write(\'\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    \', escape=False)\nif q_comments:\n    response.write(\'\\n        <table class="comment-table" cellspacing="0" cellpadding="0">\\n            <thead>\\n                <tr>\\n                    <th><div style="margin:5px 0 5px 0;"><b><a name="questionCommentsStart">\', escape=False)\n    response.write(XML(T(\'Comments For Question\')))\n    response.write(\'</a></b></div></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n            \', escape=False)\n    for comment in q_comments:\n        response.write(\'\\n                <tr>\\n                    <td>\\n                        <div style="font-weight:bold;">\\n                            \', escape=False)\n        if stackhelper.user_can_vote():\n            response.write(\'\\n                                <a href="javascript:void(0);"\\n                                class="nolink"\\n                                onclick="ajaxSubmit(\\\'\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'comment\', comment.comments.id, \'up\', question.questions.id], vars=dict(from_ajax=1)))\n            response.write("\', \'c_votes_display_", escape=False)\n            response.write(comment.comments.id)\n            response.write(\'\\\', 1);return false;"\\n                                title="\', escape=False)\n            response.write(XML(T(\'Vote Up\')))\n            response.write(\'"><img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/small\', f=\'checkmark.png\'))\n            response.write(\'"\\n                                style="vertical-align:middle;"\\n                                alt="\', escape=False)\n            response.write(XML(T(\'Vote Up\')))\n            response.write(\'"\\n                                title="\', escape=False)\n            response.write(XML(T(\'Vote Up\')))\n            response.write(\'" /></a>\\n                                <a href="javascript:void(0);"\\n                                class="nolink"\\n                                onclick="ajaxSubmit(\\\'\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'comment\', comment.comments.id, \'down\', question.questions.id], vars=dict(from_ajax=1)))\n            response.write("\', \'c_votes_display_", escape=False)\n            response.write(comment.comments.id)\n            response.write(\'\\\', -1);return false;"\\n                                title="\', escape=False)\n            response.write(XML(T(\'Vote Down\')))\n            response.write(\'"><img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/small\', f=\'x.png\'))\n            response.write(\'" style="vertical-align:middle;"\\n                                alt="\', escape=False)\n            response.write(XML(T(\'Vote Down\')))\n            response.write(\'"\\n                                title="\', escape=False)\n            response.write(XML(T(\'Vote Down\')))\n            response.write(\'" /></a>\\n                            \', escape=False)\n        else:\n            response.write(\'\\n                                <img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/small\', f=\'checkmark_disabled.png\'))\n            response.write(\'" style="vertical-align:middle;"\\n                                alt="\', escape=False)\n            response.write(XML(T(\'Not enough credits to upvote\')))\n            response.write(\'" />\\n                                <img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/small\', f=\'x_disabled.png\'))\n            response.write(\'"\\n                                style="vertical-align:middle;"\\n                                alt="\', escape=False)\n            response.write(XML(T(\'Not enough Credits to downvote\')))\n            response.write(\'"\\n                                title="\', escape=False)\n            response.write(XML(T(\'Not enough Credits to downvote\')))\n            response.write(\'" />\\n                            \', escape=False)\n            pass\n        response.write(\'\\n                            <a name="comment\', escape=False)\n        response.write(comment.comments.id)\n        response.write(\'">\', escape=False)\n        response.write(XML(T(\'By\')))\n        response.write(\': \', escape=False)\n        response.write(comment.member_properties.property_value)\n        response.write(\'\\n                            (\', escape=False)\n        response.write(stackhelper.get_user_role(comment.comments.modified_by))\n        response.write(\')</a>,\\n                            \', escape=False)\n        response.write(XML(T(\'Updated\')))\n        response.write(\'\\n                            \', escape=False)\n        response.write(prettydate(comment.comments.modified_on, T))\n        response.write(\',\\n                            \', escape=False)\n        response.write(XML(T(\'Votes\')))\n        response.write(\': <span id="c_votes_display_\', escape=False)\n        response.write(comment.comments.id)\n        response.write(\'">\', escape=False)\n        response.write(comment.comments.votes_up - comment.comments.votes_dn)\n        response.write(\'</span>\\n                            \', escape=False)\n        if auth_user.is_auth():\n            response.write(\' |\\n                                <a title=""\\n                                href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'flag_entry\', args=[comment.comments.id, question.questions.id, \'comment\']))\n            response.write(\'"\\n                                onclick="return confirm(\\\'This will flag this comment for removal by the administrators\\\\n\\\\nPlease Confirm.\\\');"\\n                                class="bold">Report as Offensive</a>\\n                            \', escape=False)\n            pass\n        response.write(\'\\n                        </div>\\n                        <div class="pad-comment">\', escape=False)\n        response.write(XML(parse_content(comment.comments.description)))\n        response.write(\'</div>\\n                    </td>\\n                </tr>\\n            \', escape=False)\n        pass\n    response.write(\'\\n            </tbody>\\n        </table>\\n    \', escape=False)\n    pass\nresponse.write(\'\\n\\n</div>\\n\\n<h2 class="fancy"><a name="answersMain">\', escape=False)\nresponse.write(len(answers))\nresponse.write(\' \', escape=False)\nresponse.write(XML(T(\'Responses\')))\nresponse.write(\'</a></h2>\\n\\n\', escape=False)\nif answers:\n    response.write(\'\\n    <table cellspacing="1" cellpadding="1" style="width:100%;margin-bottom:10px;">\\n        <tbody>\\n            \', escape=False)\n    for answer in answers:\n        response.write(\'\\n                <tr>\\n                    <td style="text-align:center;vertical-align:top;width:100px;\', escape=False)\n        if answer.answers.is_answer:\n            response.write(\'border-top:2px solid #bababa;border-left:2px solid #bababa;border-bottom:2px solid #eaeaea;border-right:2px solid #eaeaea;background-color:#fafafa;\', escape=False)\n            pass\n        response.write(\'">\\n                        \', escape=False)\n        if stackhelper.user_can_vote():\n            response.write(\'\\n                            <a href="javascript:void(0);"\\n                            class="nolink"\\n                            onclick="ajaxSubmit(\\\'\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'answer\', answer.answers.id, \'up\', question.questions.id], vars=dict(from_ajax=1)))\n            response.write("\', \'answer_", escape=False)\n            response.write(answer.answers.id)\n            response.write(\'\\\', 1);return false;"\\n                            title="\', escape=False)\n            response.write(XML(T(\'Vote Up\')))\n            response.write(\'"><img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/medium\', f=\'checkmark.png\'))\n            response.write(\'"\\n                            alt="\', escape=False)\n            response.write(XML(T(\'Vote Up\')))\n            response.write(\'"\\n                            title="\', escape=False)\n            response.write(XML(T(\'Vote Up\')))\n            response.write(\'" /></a><br />\\n                            <span class="votes-display" id="answer_\', escape=False)\n            response.write(answer.answers.id)\n            response.write(\'">\', escape=False)\n            response.write(answer.answers.votes_up - answer.answers.votes_dn)\n            response.write(\'</span><br />\\n                            <a href="javascript:void(0);"\\n                            class="nolink"\\n                            onclick="ajaxSubmit(\\\'\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'answer\', answer.answers.id, \'down\', question.questions.id], vars=dict(from_ajax=1)))\n            response.write("\', \'answer_", escape=False)\n            response.write(answer.answers.id)\n            response.write(\'\\\', -1);return false;"\\n                            title="\', escape=False)\n            response.write(XML(T(\'Vote Down\')))\n            response.write(\'"><img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/medium\', f=\'x.png\'))\n            response.write(\'"\\n                            alt="\', escape=False)\n            response.write(XML(T(\'Vote Down\')))\n            response.write(\'"\\n                            title="\', escape=False)\n            response.write(XML(T(\'Vote Down\')))\n            response.write(\'" /></a>\\n                        \', escape=False)\n        else:\n            response.write(\'\\n                            <img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/medium\', f=\'checkmark_disabled.png\'))\n            response.write(\'"\\n                            alt="\', escape=False)\n            response.write(XML(T(\'Not enough credits to upvote\')))\n            response.write(\'" /><br />\\n                            <span class="votes-display">\', escape=False)\n            response.write(answer.answers.votes_up - answer.answers.votes_dn)\n            response.write(\'</span><br />\\n                            <img src="\', escape=False)\n            response.write(URL(r=request, c=\'static/images/medium\', f=\'x_disabled.png\'))\n            response.write(\'"\\n                            alt="\', escape=False)\n            response.write(XML(T(\'Not enough credits to downvote\')))\n            response.write(\'"\\n                            title="\', escape=False)\n            response.write(XML(T(\'Not enough credits to downvote\')))\n            response.write(\'" />\\n                        \', escape=False)\n            pass\n        response.write(\'\\n                    </td>\\n                    <td style="vertical-align:top;">\\n                        <div class="lsep">\\n                            \', escape=False)\n        if answer.answers.is_answer:\n            response.write(\'\\n                                <div class="info-pretty">\\n                                    <div style="font-size:120%;font-weight:bold;text-align:center;">\', escape=False)\n            response.write(XML(T(\'Accepted Answer\')))\n            response.write(\'</div>\\n                                </div>\\n                            \', escape=False)\n            pass\n        response.write(\'\\n                            <!-- owner, admin or member options... //-->\\n                            <div class="info" style="margin-bottom:10px;">\\n                                \', escape=False)\n        if auth_user.has_role(\'Reviewer,TeamLead,Manager,SysAdmin\'):\n            response.write(\'\\n                                    <a href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'comment_answer\',\n            args=[question.questions.id, answer.answers.id],\n            anchor=\'add_comment\'))\n            response.write(\'"\\n                                       class="bold"\\n                                       title="\', escape=False)\n            response.write(XML(T(\'Comment this Answer\')))\n            response.write(\'">\', escape=False)\n            response.write(XML(T(\'Comment this Answer\')))\n            response.write(\'</a>\\n                                \', escape=False)\n            pass\n        response.write(\'\\n                                \', escape=False)\n        if (auth_user.has_role(\'Manager,SysAdmin\') or auth_user.get_user_id() == question.questions.created_by) and not answer.answers.is_answer:\n            response.write(\'\\n                                    |\\n                                    <a href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'toggle_answer\', args=[answer.answers.id, question.questions.id]))\n            response.write(\'"\\n                                       title="\', escape=False)\n            response.write(XML(T(\'Accept this Answer\')))\n            response.write(\'"\\n                                       onclick="return confirm(\\\'This will change the answer status for this question, Please Confirm\\\');"\\n                                       class="bold">\', escape=False)\n            response.write(XML(T(\'Accept this Answer\')))\n            response.write(\'</a>\\n                                \', escape=False)\n            pass\n        response.write(\'\\n                                \', escape=False)\n        if auth_user.has_role(\'Manager,SysAdmin\') or (auth_user.get_user_id() == answer.answers.created_by and not answer.answers.is_answer):\n            response.write(\'\\n                                    |\\n                                    <a href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'edit_answer\', args=[answer.answers.id]))\n            response.write(\'"\\n                                       title="\', escape=False)\n            response.write(XML(T(\'Edit this Answer\')))\n            response.write(\'"\\n                                       class="bold">\', escape=False)\n            response.write(XML(T(\'Edit this Answer\')))\n            response.write(\'</a>\\n                                \', escape=False)\n            pass\n        response.write(\'\\n                                \', escape=False)\n        if auth_user.is_auth():\n            response.write(\'\\n                                    |\\n                                    <a title=""\\n                                    href="\', escape=False)\n            response.write(URL(r=request, c=\'members\', f=\'flag_entry\', args=[answer.answers.id, question.questions.id, \'answer\']))\n            response.write(\'"\\n                                    onclick="return confirm(\\\'This will flag this answer for removal by the administrators\\\\n\\\\nPlease Confirm.\\\');"\\n                                    class="bold">Report as Offensive</a>\\n                                \', escape=False)\n            pass\n        response.write(\'\\n                            </div>\\n                            <span class="explain"><a name="answer\', escape=False)\n        response.write(answer.answers.id)\n        response.write(\'">\', escape=False)\n        response.write(XML(T(\'By\')))\n        response.write(\': \', escape=False)\n        response.write(answer.member_properties.property_value)\n        response.write(\'\\n                            (\', escape=False)\n        response.write(stackhelper.get_user_role(answer.answers.modified_by))\n        response.write(\'),\\n                            \', escape=False)\n        response.write(prettydate(answer.answers.created_on))\n        response.write(\'</a></span>\\n                            <div class="paragraph"><!-- pygmentize //-->\\n                                \', escape=False)\n        response.write(XML(parse_content(answer.answers.description)))\n        response.write(\'\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                \', escape=False)\n        if comments_a.has_key(answer.answers.id):\n            response.write(\'\\n                    <tr>\\n                        <td colspan="2">\\n                            <table class="comment-table" cellspacing="0" cellpadding="0">\\n                                <thead>\\n                                    <tr>\\n                                        <th><div style="margin:5px 0 5px 0;"><b><a name="commentsAnswerStart">\', escape=False)\n            response.write(XML(T(\'Comments For Answer\')))\n            response.write(\'</a></b></div></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                \', escape=False)\n            for comment in comments_a[answer.answers.id]:\n                response.write(\'\\n                                    <tr>\\n                                        <td>\\n                                            <div style="font-weight:bold;">\\n                                                \', escape=False)\n                if stackhelper.user_can_vote():\n                    response.write(\'\\n                                                    <a href="javascript:void(0);"\\n                                                    class="nolink"\\n                                                    onclick="ajaxSubmit(\\\'\', escape=False)\n                    response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'comment\', comment.comments.id, \'up\', question.questions.id], vars=dict(from_ajax=1)))\n                    response.write("\', \'c_votes_display_", escape=False)\n                    response.write(comment.comments.id)\n                    response.write(\'\\\', 1);return false;"\\n                                                    title="\', escape=False)\n                    response.write(XML(T(\'Vote Up\')))\n                    response.write(\'"><img src="\', escape=False)\n                    response.write(URL(r=request, c=\'static/images/small\', f=\'checkmark.png\'))\n                    response.write(\'"\\n                                                    alt="\', escape=False)\n                    response.write(XML(T(\'Vote Up\')))\n                    response.write(\'"\\n                                                    title="\', escape=False)\n                    response.write(XML(T(\'Vote Up\')))\n                    response.write(\'" /></a>\\n                                                    <a href="javascript:void(0);"\\n                                                    class="nolink"\\n                                                    onclick="ajaxSubmit(\\\'\', escape=False)\n                    response.write(URL(r=request, c=\'members\', f=\'vote\', args=[\'comment\', comment.comments.id, \'down\', question.questions.id], vars=dict(from_ajax=1)))\n                    response.write("\', \'c_votes_display_", escape=False)\n                    response.write(comment.comments.id)\n                    response.write(\'\\\', -1);return false;"\\n                                                    title="\', escape=False)\n                    response.write(XML(T(\'Vote Down\')))\n                    response.write(\'"><img src="\', escape=False)\n                    response.write(URL(r=request, c=\'static/images/small\', f=\'x.png\'))\n                    response.write(\'"\\n                                                    alt="\', escape=False)\n                    response.write(XML(T(\'Vote Down\')))\n                    response.write(\'"\\n                                                    title="\', escape=False)\n                    response.write(XML(T(\'Vote Down\')))\n                    response.write(\'" /></a>\\n                                                \', escape=False)\n                else:\n                    response.write(\'\\n                                                    <img src="\', escape=False)\n                    response.write(URL(r=request, c=\'static/images/small\', f=\'checkmark_disabled.png\'))\n                    response.write(\'"\\n                                                    alt="\', escape=False)\n                    response.write(XML(T(\'Not enough credits to upvote\')))\n                    response.write(\'" />\\n                                                    <img src="\', escape=False)\n                    response.write(URL(r=request, c=\'static/images/small\', f=\'x_disabled.png\'))\n                    response.write(\'"\\n                                                    alt="\', escape=False)\n                    response.write(XML(T(\'Not enough Credits to downvote\')))\n                    response.write(\'"\\n                                                    title="\', escape=False)\n                    response.write(XML(T(\'Not enough Credits to downvote\')))\n                    response.write(\'" />\\n                                                \', escape=False)\n                    pass\n                response.write(\'\\n                                                <a name="comment\', escape=False)\n                response.write(comment.comments.id)\n                response.write(\'">\', escape=False)\n                response.write(XML(T(\'By\')))\n                response.write(\': \', escape=False)\n                response.write(comment.member_properties.property_value)\n                response.write(\'\\n                                                (\', escape=False)\n                response.write(stackhelper.get_user_role(comment.comments.modified_by))\n                response.write(\')</a>,\\n                                                \', escape=False)\n                response.write(XML(T(\'Updated\')))\n                response.write(\': \', escape=False)\n                response.write(prettydate(comment.comments.modified_on, T))\n                response.write(\',\\n                                                \', escape=False)\n                response.write(XML(T(\'Votes\')))\n                response.write(\': <span id="c_votes_display_\', escape=False)\n                response.write(comment.comments.id)\n                response.write(\'">\', escape=False)\n                response.write(comment.comments.votes_up - comment.comments.votes_dn)\n                response.write(\'</span>\\n                                                \', escape=False)\n                if auth_user.has_role(\'Manager,SysAdmin\') or auth_user.get_user_id() == comment.comments.created_by:\n                    response.write(\'\\n                                                    | <a href="\', escape=False)\n                    response.write(URL(r=request, c=\'members\', f=\'edit_comment\', args=[comment.comments.id, question.questions.id]))\n                    response.write(\'"\\n                                                    class="bold"\\n                                                    title="\', escape=False)\n                    response.write(XML(T(\'Edit this comment\')))\n                    response.write(\'">\', escape=False)\n                    response.write(XML(T(\'Edit this comment\')))\n                    response.write(\'</a>\\n                                                \', escape=False)\n                    pass\n                response.write(\'\\n                                                \', escape=False)\n                if auth_user.is_auth():\n                    response.write(\'|\\n                                                    <a title=""\\n                                                    href="\', escape=False)\n                    response.write(URL(r=request, c=\'members\', f=\'flag_entry\', args=[comment.comments.id, question.questions.id, \'comment\']))\n                    response.write(\'"\\n                                                    onclick="return confirm(\\\'This will flag this comment for removal by the administrators\\\\n\\\\nPlease Confirm.\\\');"\\n                                                    class="bold">Report as Offensive</a>\\n                                                \', escape=False)\n                    pass\n                response.write(\'\\n                                            </div>\\n                                            <div class="pad-comment">\', escape=False)\n                response.write(XML(parse_content(comment.comments.description)))\n                response.write(\'</div>\\n                                        </td>\\n                                    </tr>\\n                                \', escape=False)\n                pass\n            response.write(\'\\n                                </tbody>\\n                            </table>\\n                        </td>\\n                    </tr>\\n                \', escape=False)\n            pass\n        response.write(\'\\n                <tr><td colspan="2"><div class="hr"><hr /></div></td></tr>\\n            \', escape=False)\n        pass\n    response.write(\'\\n        </tbody>\\n    </table>\\n\', escape=False)\nelse:\n    response.write(\'\\n    <p><em>\', escape=False)\n    response.write(XML(T(\'This question does not have any answers yet\')))\n    response.write(\'.</em></p>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n<div class="paragraph">\\n    <h3><a href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'index\'))\nresponse.write(\'"\\n    title="\', escape=False)\nresponse.write(XML(T(\'Back to Home Page\')))\nresponse.write(\'">\', escape=False)\nresponse.write(XML(T(\'Back to Home Page\')))\nresponse.write(\'</a></h3>\\n</div>\\n\\n\', escape=False)\nif auth_user.is_auth():\n    response.write(\'\\n    <!-- Answer Add Form: Begin //-->\\n    <form id="answer_question_form" method="post" action="">\\n        <fieldset id="answer_question_form_fields">\\n            <input type="hidden" id="form_submitted" name="form_submitted" value="1" />\\n            <input type="hidden" id="qid" name="qid" value="\', escape=False)\n    response.write(question.questions.id)\n    response.write(\'" />\\n            <h2><a name="add_answer" title="">\', escape=False)\n    response.write(XML(T(\'Your Answer\')))\n    response.write(\':</a></h2>\\n            <div><textarea id="answer" name="answer" cols="0" rows="0" style="width:800px;height:250px;">\', escape=False)\n    response.write(request.vars.get(\'answer\', \'\'))\n    response.write(\'</textarea></div>\\n        </fieldset>\\n\\n        <div class="paragraph-all info">\\n            Basic html is allowed, use of <span class="explain">&lt;b&gt; &lt;i&gt;</span> ok to use, in addition, use the following <i>pseudo-code</i>\\n            to highlight and nicely format your code if you post any code snippet <i>(Click to Insert)</i>:\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code-python][/code-python]\\\');return false;" title="">[code-python]</a>,\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code-c][/code-c]\\\');return false;" title="">[code-c]</a>,\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code-c++][/code-c++]\\\');return false;" title="">[code-c++]</a>,\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code-c#][/code-c#]\\\');return false;" title="">[code-c#]</a>,\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code-php][/code-php]\\\');return false;" title="">[code-php]</a>,\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code-java][/code-java]\\\');return false;" title="">[code-java]</a>,\\n            or\\n            <a href="javascript:void(0);" onclick="add_helper(\\\'[code][/code]\\\');return false;" title="">[code]</a>\\n            (for a language not included in the previous code definitions).<br />Close your code snippet\\n            with a matching <span class="explain">[/code-<i>language</i>]</span> if applicable or manually added.\\n        </div>\\n\\n        <div class="paragraph">\\n            <input type="submit" id="preview_answer" name="preview_answer" value="\', escape=False)\n    response.write(XML(T(\'Preview Answer\')))\n    response.write(\'" />\\n            \', escape=False)\n    if view_info.get(\'form_submitted\'):\n        response.write(\'\\n                <input type="submit" id="post_answer" name="post_answer" value="\', escape=False)\n        response.write(XML(T(\'Post Answer\')))\n        response.write(\'" />\\n            \', escape=False)\n        pass\n    response.write(\'\\n        </div>\\n    </form>\\n\\n    \', escape=False)\n    if view_info.get(\'preview_answer\'):\n        response.write(\'\\n        <h3 class="fancy"><a name="answer_preview" title="">\', escape=False)\n        response.write(XML(T(\'Answer Preview\')))\n        response.write(\'</a></h3>\\n        <div class="paragraph">\\n            \', escape=False)\n        response.write(XML(parse_content(view_info[\'answer\'])))\n        response.write(\'\\n        </div>\\n    \', escape=False)\n        pass\n    response.write(\'\\n\\n    <script type="text/javascript">\\n    <!--\\n        function add_helper(s_value) {\\n            var oquestion = document.getElementById(\\\'answer\\\');\\n\\n            // IE support\\n            if (document.selection) {\\n                oquestion.focus();\\n                sel = document.selection.createRange();\\n                sel.text = s_value;\\n            }\\n            // MOZILLA/NETSCAPE support\\n            else if (oquestion.selectionStart || oquestion.selectionStart == 0) {\\n                var start_pos = oquestion.selectionStart;\\n                var end_pos = oquestion.selectionEnd;\\n                oquestion.value = oquestion.value.substring(0, start_pos) + s_value + oquestion.value.substring(end_pos, oquestion.value.length);\\n            } else {\\n                oquestion.value += s_value;\\n            }\\n\\n            //document.getElementById(\\\'question\\\').focus();\\n        }\\n    //-->\\n    </script>\\n    <!-- Answer Add Form: End //-->\\n\', escape=False)\nelse:\n    response.write(\'\\n    <p style="text-align:center;margin-top:30px;">\', escape=False)\n    response.write(XML(T(\'You may post an answer by signing in or registering for an account\')))\n    response.write(\'\\n    <a href="\', escape=False)\n    response.write(URL(r=request, c=\'members\', f=\'login\'))\n    response.write(\'" title="\', escape=False)\n    response.write(XML(T(\'Log In/Registering\')))\n    response.write(\'" class="bold">Here</a></p>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\\n<script type="text/javascript">\\n<!--\\n    // This little snippet moves the cursor to the appropriate place on the page\\n    var posted = \', escape=False)\nif view_info.get(\'preview_answer\'):\n    response.write(\'true\', escape=False)\nelse:\n    response.write(\'false\', escape=False)\n    pass\nresponse.write(";\\n    if (posted) {\\n        window.location.hash = \'answer_preview\';\\n    }\\n    ", escape=False)\nif request.vars.get(\'anchor\', \'\') != \'\':\n    response.write("\\n    window.location.hash = \'", escape=False)\n    response.write(request.vars[\'anchor\'])\n    response.write("\';\\n    ", escape=False)\n    pass\nresponse.write(\'\\n\\n    // Highlight the "Questions" tab\\n    document.getElementById(\\\'aquestions\\\').className = \\\'active\\\';\\n//-->\\n</script>\\n\', escape=False)\nresponse.write(\'\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- Column 1 end -->\\n\\t\\t\\t</td>\\n\\t\\t\\t<td class="main-layout-right">\\n\\t\\t\\t\\t<!-- Column 2 start -->\\n\\t\\t\\t\\t<div class="main-layout-container">\\n\\t\\t\\t\\t\\t\', escape=False)\nresponse.write(\'<h2>QA-Stack.com</h2>\\n<div class="sidenav">\', escape=False)\nresponse.write(XML(stackhelper.get_system_property(\'s_info_html\', \'\')))\nresponse.write(\'</div>\\n<h2>\', escape=False)\nresponse.write(XML(T(\'Popular Tags\')))\nresponse.write(\'</h2>\\n<div class="sidenav">\\n\\t\', escape=False)\nresponse.write(XML(stackhelper.get_sidebar_tags()))\nresponse.write(\'\\n</div>\', escape=False)\nresponse.write(\'\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- Column 2 end -->\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<div id="footer">\\n\\t<p>QA-Stack is Open Source distributed under the Simplified BSD License -\\n\\tVersion 1.0.0 (06-Mar-2012) | <a href="\', escape=False)\nresponse.write(URL(r=request, c=\'default\', f=\'contact_admin\'))\nresponse.write(\'"\\n\\ttitle="\', escape=False)\nresponse.write(XML(T(\'Contact Administrator\')))\nresponse.write(\'">\', escape=False)\nresponse.write(XML(T(\'Contact Administrator\')))\nresponse.write(\'</a></p>\\n</div>\\n\\n</body>\\n</html>\\n\', escape=False)'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'args'
p24
S'("\'Row\' object has no attribute \'COUNT(question_tags.id)\'",)'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.AttributeError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.AttributeError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'Row' object has no attribute 'COUNT(question_tags.id)'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's\xadx\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>qastack</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-64a2aa6f-0e45-407e-829a-398b7d39e7a5<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_experiments</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-f897546d-35d0-4d7a-93f6-a88129f5ec57<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_qastack</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_w2pgis</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-fe9565e6-02fb-493b-8b11-98a3336bb8f2<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_wapp</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8912dbb8-c814-4be9-a0df-579afab2a21f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ae6689f8-2471-4a44-a536-ffc71435631a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_zblender</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-f4281243-3914-4ab4-9cf0-30994c1a50bd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_zdotfiles</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a49070f9-effb-495f-a756-1cc3883379df<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8,ar;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-ae6689f8-2471-4a44-a536-ffc71435631a; session_id_experiments=127.0.0.1-f897546d-35d0-4d7a-93f6-a88129f5ec57; session_id_w2pgis=127.0.0.1-fe9565e6-02fb-493b-8b11-98a3336bb8f2; session_id_wapp=127.0.0.1-8912dbb8-c814-4be9-a0df-579afab2a21f; session_id_zblender=127.0.0.1-f4281243-3914-4ab4-9cf0-30994c1a50bd; session_id_zdotfiles=127.0.0.1-a49070f9-effb-495f-a756-1cc3883379df; session_id_admin=127.0.0.1-64a2aa6f-0e45-407e-829a-398b7d39e7a5; session_id_qastack=127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/qastack/members/ask</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/32.0.1700.102 Chrome/32.0.1700.102 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/qastack/default/view/1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>55316</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>wDell</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/bani/zdotfiles/9/web2py/applications/experiments/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/zblender/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/welcome/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/wapp/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/w2pgis/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/qastack/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/admin/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/zdotfiles/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1ba8098: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;wDell&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/bani/zdotfiles/9/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8,ar;q=0.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-ae6689f8-2471-4a44-a536-ffc71435631a; session_id_experiments=127.0.0.1-f897546d-35d0-4d7a-93f6-a88129f5ec57; session_id_w2pgis=127.0.0.1-fe9565e6-02fb-493b-8b11-98a3336bb8f2; session_id_wapp=127.0.0.1-8912dbb8-c814-4be9-a0df-579afab2a21f; session_id_zblender=127.0.0.1-f4281243-3914-4ab4-9cf0-30994c1a50bd; session_id_zdotfiles=127.0.0.1-a49070f9-effb-495f-a756-1cc3883379df; session_id_admin=127.0.0.1-64a2aa6f-0e45-407e-829a-398b7d39e7a5; session_id_qastack=127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/qastack/members/ask</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/32.0.1700.102 Chrome/32.0.1700.102 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>wDell</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/qastack/default/view/1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>55316</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/qastack/default/view/1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>wDell</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2014.01.14.22.16.35</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f66ef8341e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x1fb32c0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f66c082fc50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f66ef8341e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x1fb32c0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f66c082fc50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py/applications/qastack/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>view</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/bani/zdotfiles/9/web2py/applications/experiments/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/zblender/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/welcome/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/wapp/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/w2pgis/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/qastack/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/admin/&#x27;, &#x27;/home/bani/zdotfiles/9/web2py/applications/zdotfiles/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1ba8098: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;wDell&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/bani/zdotfiles/9/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>wDell</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2014.01.14.22.16.35</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 2, 1, 4, 9, 15, 981744)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/qastack/default/view/1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 2, 1, 1, 9, 15, 981751)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>qastack/127.0.0.1.2014-02-01.04-09-15.332e81a4-f7f8-4ada-b79f-81beea5cf957</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f66c0827590&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/bani/zdotfiles/9/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x7f66c08488b0, file "/...cations/qastack/views/default/view.html", line 1>'
p69
ssS'lnum'
p70
I217
sS'lines'
p71
(dp72
I212
S'    try:'
p73
sI213
S'        if isinstance(code, types.CodeType):'
p74
sI214
S'            ccode = code'
p75
sI215
S'        else:'
p76
sI216
S'            ccode = compile2(code, layer)'
p77
sI217
S'        exec ccode in environment'
p78
sI218
S'    except HTTP:'
p79
sI219
S'        raise'
p80
sI220
S'    except RestrictedError:'
p81
sI221
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p82
ssS'call'
p83
S'(code=\'response.write(\\\'<!DOCTYPE html PUBLIC "-//W3C//D.../p>\\\\n</div>\\\\n\\\\n</body>\\\\n</html>\\\\n\\\', escape=False)\', environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, ...}, layer=\'/home/bani/zdotfiles/9/web2py/applications/qastack/views/default/view.html\')'
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/home/bani/zdotfiles/9/web2py/applications/qastack/views/default/view.html'
p88
sg64
(dp89
sg70
I650
sg71
(dp90
I641
S'    response.write("\';\\n    ", escape=False)'
p91
sI642
S'    pass'
p92
sI643
S'response.write(\'\\n\\n    // Highlight the "Questions" tab\\n    document.getElementById(\\\'aquestions\\\').className = \\\'active\\\';\\n//-->\\n</script>\\n\', escape=False)'
p93
sI644
S'response.write(\'\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- Column 1 end -->\\n\\t\\t\\t</td>\\n\\t\\t\\t<td class="main-layout-right">\\n\\t\\t\\t\\t<!-- Column 2 start -->\\n\\t\\t\\t\\t<div class="main-layout-container">\\n\\t\\t\\t\\t\\t\', escape=False)'
p94
sI645
S'response.write(\'<h2>QA-Stack.com</h2>\\n<div class="sidenav">\', escape=False)'
p95
sI646
S"response.write(XML(stackhelper.get_system_property('s_info_html', '')))"
p96
sI647
S"response.write('</div>\\n<h2>', escape=False)"
p97
sI648
S"response.write(XML(T('Popular Tags')))"
p98
sI649
S'response.write(\'</h2>\\n<div class="sidenav">\\n\\t\', escape=False)'
p99
sI650
S'response.write(XML(stackhelper.get_sidebar_tags()))'
p100
sI651
S"response.write('\\n</div>', escape=False)"
p101
sI652
S'response.write(\'\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- Column 2 end -->\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<div id="footer">\\n\\t<p>QA-Stack is Open Source distributed under the Simplified BSD License -\\n\\tVersion 1.0.0 (06-Mar-2012) | <a href="\', escape=False)'
p102
sI653
S"response.write(URL(r=request, c='default', f='contact_admin'))"
p103
sI654
S'response.write(\'"\\n\\ttitle="\', escape=False)'
p104
sI655
S"response.write(XML(T('Contact Administrator')))"
p105
sI656
S'response.write(\'">\', escape=False)'
p106
sI657
S"response.write(XML(T('Contact Administrator')))"
p107
sI658
S"response.write('</a></p>\\n</div>\\n\\n</body>\\n</html>\\n', escape=False)"
p108
ssg83
S'()'
p109
sg85
S'<module>'
p110
sa(dp111
g62
S'/home/bani/zdotfiles/9/web2py/applications/qastack/modules/QAStackHelper.py'
p112
sg64
(dp113
S'tag'
p114
S'<Row {\'_extra\': {\'COUNT("question_tags"."id")\': 1L}, \'tags\': {\'tagname\': \'git\'}}>'
p115
sS'tag_cnt'
p116
S'<gluon.dal.Expression object>'
p117
ssg70
I559
sg71
(dp118
I554
S'            orderby=~tag_cnt,'
p119
sI555
S'            limitby=(0, 12))'
p120
sI556
S"        html = ''"
p121
sI557
S'        for tag in tags:'
p122
sI558
S'            tagname = tag.tags.tagname'
p123
sI559
S"            tag_cnt = tag['COUNT(question_tags.id)']"
p124
sI560
S'            if bold_toggle:'
p125
sI561
S"                html_stub = 'font-weight:bold;'"
p126
sI562
S'                bold_toggle = False'
p127
sI563
S'            else:'
p128
ssg83
S'(self=<QAStackHelper.QAStackHelper object>)'
p129
sg85
S'get_sidebar_tags'
p130
sa(dp131
g62
S'/home/bani/zdotfiles/9/web2py/gluon/dal.py'
p132
sg64
(dp133
S'ae'
p134
S'AttributeError("\'Row\' object has no attribute \'COUNT(question_tags.id)\'",)'
p135
ssg70
I7324
sg71
(dp136
I7328
S'    __delitem__ = object.__delattr__'
p137
sI7319
S'        except (KeyError,AttributeError,TypeError), ae:'
p138
sI7320
S'            try:'
p139
sI7321
S"                self[key] = ogetattr(self,'__get_lazy_reference__')(key)"
p140
sI7322
S'                return self[key]'
p141
sI7323
S'            except:'
p142
sI7324
S'                raise ae'
p143
sI7325
S''
sI7326
S'    __setitem__ = lambda self, key, value: setattr(self, str(key), value)'
p144
sI7327
S''
ssg83
S'(self=<Row {\'_extra\': {\'COUNT("question_tags"."id")\': 1L}, \'tags\': {\'tagname\': \'git\'}}>, k=\'COUNT(question_tags.id)\')'
p145
sg85
g20
sasS'pyver'
p146
S'Python 2.7.5+: /usr/bin/python (prefix: /usr)'
p147
sS'session'
p148
g57
(S's/\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth_alias</td><td style="vertical-align:top;">:</td><td><div>tazjel@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_id</td><td style="vertical-align:top;">:</td><td><div>2L</div></td></tr></table></div>'
tRp149
sS'etype'
p150
S"<type 'exceptions.AttributeError'>"
p151
sS'date'
p152
S'Sat Feb  1 04:09:16 2014'
p153
sS'response'
p154
g57
(S's\x1d\x1f\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f66bc21d6c0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_qastack</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Index</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/qastack/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu_edit</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Edit</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/qastack</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Controller</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/qastack/controllers/default.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>View</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/qastack/views/default/view.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Layout</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/qastack/views/layout.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Stylesheet</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/qastack/static/base.css</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>DB Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/qastack/models/db.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Menu Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/qastack/models/menu.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/qastack/appadmin/index</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/view/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_qastack</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/bani/zdotfiles/9/web2py/applications/qastack/sessions/127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2&#x27;, mode &#x27;rb+&#x27; at 0x7f66bc283c90&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/bani/zdotfiles/9/web2py/applications/qastack/sessions/127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>99f16256ee904c7b558675c51719754b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-08ecfdac-ba44-48c4-91c0-ab67cf9194d2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_qastack</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>qastack</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>customize me!</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>qastack</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/view.html</div></td></tr></table></div>'
tRp155
sS'locals'
p156
(dp157
S'ae'
p158
S'AttributeError("\'Row\' object has no attribute \'COUNT(question_tags.id)\'",)'
p159
sS'k'
S"'COUNT(question_tags.id)'"
p160
sS'm'
S'None'
p161
sS'_extra'
p162
S'<Row {\'COUNT("question_tags"."id")\': 1L}>'
p163
sS'key'
p164
S"'COUNT(question_tags.id)'"
p165
sS'v'
S'<function <lambda>>'
p166
sS'self'
p167
S'<Row {\'_extra\': {\'COUNT("question_tags"."id")\': 1L}, \'tags\': {\'tagname\': \'git\'}}>'
p168
sssS'traceback'
p169
S'Traceback (most recent call last):\n  File "/home/bani/zdotfiles/9/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/bani/zdotfiles/9/web2py/applications/qastack/views/default/view.html", line 650, in <module>\n  File "/home/bani/zdotfiles/9/web2py/applications/qastack/modules/QAStackHelper.py", line 559, in get_sidebar_tags\n    tag_cnt = tag[\'COUNT(question_tags.id)\']\n  File "/home/bani/zdotfiles/9/web2py/gluon/dal.py", line 7324, in __getitem__\n    raise ae\nAttributeError: \'Row\' object has no attribute \'COUNT(question_tags.id)\'\n'
p170
s.