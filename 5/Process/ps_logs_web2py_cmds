
# tell if a port is in use
netstat -a --numeric-ports | grep 8321

# Show all listening and established ports TCP and UDP together with the PID of the associated process
lsof -ni


# Show all listening and established ports TCP and UDP together with the PID of the associated process
netstat -plantu

# open ports with iptables
sudo iptables -I INPUT -p tcp --dport 3000 -j ACCEPT

# Lists all listening ports together with the PID of the associated process
netstat -anpe

# Query well known ports list
# commandlinefu.com by David Winterbottom

# Broadcast your shell thru ports 5000, 5001, 5002 ...
script -qf | tee >(nc -l -p 5000)

# Monitoring TCP connections number
watch "ss -nat | awk '"'{print $1}'"' | sort | uniq -c"

# ttyS0 - terminal on serial connection
setserial -q /dev/ttyS0

# tell if a port is in use
netstat -a --numeric-ports | grep 8321

# Show all listening and established ports TCP and UDP together with the PID of the associated process
lsof -ni


# Show all listening and established ports TCP and UDP together with the PID of the associated process
netstat -plantu

# open ports with iptables
sudo iptables -I INPUT -p tcp --dport 3000 -j ACCEPT

# Lists all listening ports together with the PID of the associated process
netstat -anpe

# Query well known ports list
getent services <<service>>

# Query well known ports list
portnum() { egrep "[[:space:]]$*/" /etc/services; }

# check open ports (both ipv4 and ipv6)
lsof -Pi | grep LISTEN

# check open ports (both ipv4 and ipv6)
lsof -i

# check open ports (both ipv4 and ipv6)
netstat -plntu

# check open ports (both ipv4 and ipv6)
netstat -plnt

# check open ports (both ipv4 and ipv6)
lsof -Pn | grep LISTEN

# lsof - cleaned up for just open listening ports, the process, and the owner of the process
lsof -iTCP -sTCP:LISTEN

# lsof - cleaned up for just open listening ports, the process, and the owner of the process
alias oports="echo -e "User:\tCommand:\tPort:\n----------------------------" && lsof -i 4 -P -n | awk '/LISTEN/ {print $3, $1, $9}' | sed 's/ [a-z0-9\.\*]*:/ /' | sort -u -k 3 -n | xargs printf '%-10s %-10s %-10s\n'"

# View files opened by a program on startup and shutdown
sudo lsof -rc command >> /tmp/command.txt

# lsof - cleaned up for just open listening ports, the process, and the owner of the process
alias oports="echo 'User:      Command:   Port:'; echo '----------------------------' ; lsof -i 4 -P -n | grep -i 'listen' | awk '{print \$3, \$1, \$9}' | sed 's/ [a-z0-9\.\*]*:/ /' | sort -k 3 -n |xargs printf '%-10s %-10s %-10s\n' | uniq"

# Nmap find open TCP/IP ports for a target that is blocking ping
nmap -sT -PN -vv <target ip>

# showing opened ports on machine
netstat -tulpnc

# sort a list of comma separated numbers: sort_csn
sort_csn () { echo "${1}" | sed -e "s/,/\n/g"| sort -nu | awk '{printf("%s,",$0)} END {printf("\n")}' | sed -e "s/,$//"; }

# Forensic tool to find hidden processes and ports
unhide (proc|sys|brute)

# find an unused unprivileged TCP port
netstat  -atn | perl -0777 -ne '@ports = /tcp.*?\:(\d+)\s+/imsg ; for $port (32768..61000) {if(!grep(/^$port$/, @ports)) { print $port; last } }'

# List all open ports and their owning executables
lsof -i -P | grep -i "listen"

