# commandlinefu.com by David Winterbottom

# Hypnosis
for count in $(seq 2 1001); do say "$count sheeps";sleep 2;done

# Show all available colors on your terminal.
perl -E 'say $_,`tput setb $_`," "x(`tput cols`-length("$_")),`tput sgr0` for 0..(`tput colors`-1)'

# FizzBuzz in Perl
perl -E 'say$_%15?$_%3?$_%5?$_:Buzz:Fizz:Fizzbuzz for 1..100'

# old man's advice
fortune | toilet -w $(($(tput cols)-5)) -f pagga | cowsay -n -f beavis.zen

# Speaks latest tweet by Obama (os x)
curl "http://api.twitter.com/1/statuses/user_timeline.xml?count=1&screen_name=barackobama" | egrep -w "<text>(.*)</text>" | sed -E "s/<\/?text>//g" | say

# echo text in fancy manner
sayspeed() { for i in $(seq 1 `echo "$1"|wc -c`); do echo -n "`echo $1 |cut -c ${i}`"; sleep 0.1s; done; echo "";}

# Have Google Translate speak to you using your local speakers
function say { mplayer -really-quiet "http://translate.google.com/translate_tts?tl=en&q=$1"; }

# OSX: Use Say Command to Help You Play Hide-and-Seek
txt="";for i in {1..20};do txt=$txt"$i. ";done;say $txt" Ready or not, here I come"

# google tts
say() { curl -sA Mozilla -d q=`python3 -c 'from urllib.parse import quote_plus; from sys import stdin; print(quote_plus(stdin.read()[:100]))' <<<"$@"` 'http://translate.google.com/translate_tts' | mpg123 -q -; }

# Realtime clock cowsay
watch -tn1 'figlet -f slant  `date +%T` | cowsay -n -f telebears'

# Random cowsay with figlet typhography
figlet -f $(ls /usr/share/figlet/fonts/*.flf | shuf -n1) namakukingkong | cowsay -n -f $(ls /usr/share/cows/ | shuf -n1)

# Print a list of installed Perl modules
perl -MExtUtils::Installed -E 'say for ExtUtils::Installed->new()->modules()'

# Google text-to-speech in local language or language of choice
say() { if [[ "${1}" =~ -[a-z]{2} ]]; then local lang=${1#-}; local text="${*#$1}"; else local lang=${LANG%_*}; local text="$*";fi; mplayer "http://translate.google.com/translate_tts?ie=UTF-8&tl=${lang}&q=${text}" &> /dev/null ; }

# speak a chat log file while it's running
tail -f LOGFILE | awk '{system("say \"" $0 "\"");}'

# speak a chat log file while it's running
tail -f LOGFILE | perl -ne '`say "$_"`;'

# Gets the english pronunciation of a phrase
say() { local IFS=+;mplayer "http://translate.google.com/translate_tts?q=$*"; }

# Gets the english pronunciation of a phrase
say() { mplayer "http://translate.google.com/translate_tts?q=$1"; }

# Gets the english pronunciation of a phrase
say() { wget -q -U Mozilla -O output.mp3 "http://translate.google.com/translate_tts?tl=en&q=$1"; gnome-terminal -x bash -c "totem output.mp3"; sleep 4; totem --quit;}

# Generate an XKCD #936 style 4 word password
perl -F'\s+' -anE 'push @w,$F[1];END{$r.=splice @w,rand @w,1 for(1..4);say $r}' diceware.wordlist.asc

# Syntax Highlight your Perl code
perl -mText::Highlight -E 'say Text::Highlight->new(ansi => 1)->highlight(Perl => do { local (@ARGV,$/) = shift; <> }) ' path/to/perl-file.pl

# Timer with sound alarm
say(){ mplayer -user-agent Mozilla "http://translate.google.com/translate_tts?tl=en&q=$(echo $* | sed 's#\ #\+#g')" > /dev/null 2>&1 ;  }; sleep 3s && say "wake up, you bastard"

# let the cow suggest some commit messages for you
curl -s http://whatthecommit.com/index.txt | cowsay

# Google text-to-speech in mp3 format
say(){ mplayer -user-agent Mozilla "http://translate.google.com/translate_tts?tl=en&q=$(echo $* | sed 's#\ #\+#g')" > /dev/null 2>&1 ;  }

# Cowsay Random Cow saying your fortune with colorized output
files=(/usr/share/cowsay/cows/*); cowsay -f `echo ${files[$((RANDOM%${#files}))]}` `fortune` | toilet -F gay -f term

# Cowsay Random Cowfile
files=(/usr/share/cowsay/cows/*); cowsay -f `echo ${files[$((RANDOM%${#files}))]}` <TEXT>

