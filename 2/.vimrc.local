"Modeline and Notes {
"vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"   _____       _______        ___ __
"  |_   _| ___/|\___  /   (_) / _ |||       __   __(_)_ __ ___
"    | |  / _ ||   / /    | || (_)|||    ___\ \ / /| | '_ ` _ \
"    | | | (_) | _/ /__  _| || \_  ||__ |___|\ V / | | | | | | |
"    |_|  \.__/\|_____/ |___| \__| |___|      \_/  |_|_| |_| |_|
"
"
"   This is the personal .vimrc file of Ahmed Alghamdi.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   This is a mirror of :http://spf13.com
" }
let g:BASH_SyntaxCheckOptionsGlob  = "-O extglob"
"%s/[\r \t]\+$//
set autoread
set t_Co=256 "use 256 colours in terminal
set nocompatible
set encoding=utf-8

set foldmethod=manual
"set t_Co=256 "use 256 colours in terminal
"-----------------------------
"   Pasteboard
"-----------------------------
"register :reg = line "
"maps = line "
"bookmarks"
"marks
"fold "!ls
"auto complete"
"tabs"
"buffers"
"windows"
set clipboard+=unnamed
map Y y$
let g:vimsyn_noerror= 1
map <C-c> "+y<CR>

vnoremap <silent> w1 w!>> ~/tst/vi.txt<CR>
vnoremap <silent> WW y<C-W><C-W>Gp<C-W><C-W>
vnoremap <silent> wW :Bookmark<CR>
"References
vmap sb "zdi<b><C-R>z</b><ESC>
"vnoremap  y<C-W><C-W>G$P<C-W><C-W>
":g/map/t$"
":g/^/t.                     : duplicate every line
""""""""""""""
map ws :!rm ~/.vimswap/*<CR>

"Install unhtml
map wh :!rm ~/tst/vhtml<CR>:r!unhtml % > ~/tst/vhtml<CR><Esc>:vsplit ~/tst/vhtml<CR>
"close"
nnoremap <silent> ; :q!<CR>
nnoremap <silent> W :w<CR>
        "Save "
"==================================="
"            F[1-12]
"==================================="
cab zz w ~/zdotfiles/
cab wv w ~/zdotfiles/2/.vimrc.local
set syntax=vim
""#map wf "{"<CR>#<CR>function<space>()<CR>{<CR><CR><CR>}<CR>"{"
                    "F1
map <F1> ,cc<space>

                    "<F2>
nnoremap <F2> :reg<CR>

 "Multiple Files Management (Essential)
":bn              : goto next buffer
":bp              : goto previous buffer
":wn              : save file and move to next (super)
":wp              : save file and move to previous
":bd              : remove file from buffer list (super)
":bun             : Buffer unload (remove window but not from list)
":badd file.c     : file from buffer list
":b3              : go to buffer 3 [C]
":b main          : go to buffer with main in name eg main.c (ultra)
":sav php.html    : Save current file as php.html and "move" to php.html
":sav! %<.bak     : Save Current file to alternative extension (old way)
":sav! %:r.cfm    : Save Current file to alternative extension
":sav %:s/fred/joe/           : do a substitute on file name
":sav %:s/fred/joe/:r.bak2    : do a substitute on file name & ext.
":!mv % %:r.bak   : rename current file (DOS use Rename or DEL)
":help filename-modifiers
":e!              : return to unmodified file
":w c:/aaa/%      : save file elsewhere
":e #             : edit alternative file (also cntrl-^)
":rew             : return to beginning of edited files list (:args)
":brew            : buffer rewind
":sp fred.txt     : open fred.txt into a split
":sball,:sb       : Split all buffers (super)
":scrollbind      : in each split window
":map   <F5> :ls<CR>:e # : Pressing F5 lists all buffer, just type number
":set hidden      : Allows to change buffer w/o saving current buffer
"-
                    ""F3
map <F3> :ls<CR>:sb
map <s-F3> [c
map <S-Right> dp
map <S-Left> do

                     "<F4> :verbose map

nnoremap <F4> :verbose map


"F5"

nnoremap <silent> <F5> :vsplit ~/zdotfiles/2/.vimrc.local<CR>
nnoremap <S-F5> :source ~/zdotfiles/2/.vimrc.local<CR>
                                "F7
"map   <F6>>   :w<CR>:!perl -c %<CR>

map   <F6> :ls<CR>:e # : Pressing F5 lists all buffer, just type number
map <F7> :%s//gc<Left><Left><Left>
"F8
map <F8> :diffthis<CR>
map <F8> :diffthis<CR><ESC><C-W><C-W>:diffthisa<CR>

map <F8><F8> :diffoff<CR>
map <C-F8> :diffput<CR>
map <C-F8><C-F8> :diffput<CR>
"F9
"F9"
    " SessionOpen:
nnoremap <silent> <F9> :Session
nnoremap <silent> <S-F9> :SessionList<CR>
nnoremap <M-F9> :SessionOpen
nnoremap <C-F9> :SessionSaveAs

"F10
"F11
"F12
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""''
" Split the Line at Cursor
nnoremap K i<cr><esc><right>
"html substitute
"%s/<[^>]*>//gi<cr>


nnoremap <C-J> m`o<Esc>``
nnoremap <C-K> m`O<Esc>``






map <S-Enter> O<Esc>j
map <CR> o<Esc>k



"!sed 's/<[^>]*>//g' %

"find files

" Recursively search your directory tree files for a string

"alias gfind='find . -print0  | xargs -0 egrep -I '
map zz :vsplit ~/zdotfiles/1/.zsh/al.zsh<CR><CR><ESC><ESC>Gp<ESC><C-W>q
cab wz w ~/zdotfiles/1/

cab wv w ~/zdotfiles/2/
set autoread





fun! FindFiles()
    let $filename = input("Enter file name to find: ")
    let $error_file = $HOME."/.findfile.output"
    silent! exe "!find . -iname \"".$filename."\" \| xargs file \| perl -pe 's/:/:1:/' > ".$error_file
    cfile $error_file
    copen
    redraw!
endfun

"----------------------------------------
"----------------------------------------
"" Markers & moving about
"'.               : jump to last modification line (SUPER)
"`.               : jump to exact spot in last modification line
"g;               : cycle thru recent changes (oldest first)
"g,               : reverse direction
":changes
":h changelist    : help for above
"<C-O>            : retrace your movements in file (starting from most recent)
"<C-I>            : retrace your movements in file (reverse direction)
":ju(mps)         : list of your movements
":help jump-motions
":history         : list of all your commands
":his c           : commandline history
":his s           : search history
"q/               : Search history Window (puts you in full edit mode) (exit CTRL-C)
"q:               : commandline history Window (puts you in full edit mode) (exit CTRL-C)
":<C-F>           : history Window (exit CTRL-C)
                                "F6
"nnoremap <F6> :set arabic<CR>
"nnoremap <S-F6>:set noarabic<CR>
"nnoremap <S-F6> :set rightleft<CR>
"nnoremap <C-F6> :set norightleft<CR>

" A function to save word under cursor to a file
imap ,,, <esc>bdwa<<esc>pa><cr></<esc>pa><esc>kA
"---------------------------------------------------"

let g:I=0
function! INC(increment)
    let g:I =g:I + a:increment
    return g:I
endfunction
" eg create list starting from 223 incrementing by 5 between markers a,b
":let I=223
":'a,'bs/^/\=INC(5)/
"" create a(comand Abbreviations) map for INC
cab viminc :let I=0 \| 'a,'bs/^/\=INC(1)/
"----------------------------------------
"" *generate a list of numbers*  23-64
"o23<ESC>qqYp<C-A>q40@q
"----------------------------------------
" : Pressing F5 lists all buffer, just type number
set modifiable
let g:is_bash=1
UnBundle 'AutoClose'
ca w!! w !sudo tee "%"
ca WW !sudo tee "%"

