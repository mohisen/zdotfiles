

# commandlinefu - 25 {{{1
# Notepad in a browser {{{2
firefox 'data:text/html, <html contenteditable>'

# Recompress all files in current directory from gzip to bzip2 {{{2
find . -type f -name '*.gz'|awk '{print "zcat", $1, "| bzip2 -c >", $0.".tmp", "&& rename", "s/.gz.tmp/.bz2/", "*.gz.tmp", "&& rm", $0}'|bash

# Create executable, automountable filesystem in a file, with password! {{{2
dd if=/dev/zero of=T bs=1024 count=10240;mkfs.ext3 -q T;E=$(echo 'read O;mount -o loop,offset=$O F /mnt;'|base64|tr -d '\n');echo "E=\$(echo $E|base64 -d);eval \$E;exit;">F;cat <(dd if=/dev/zero bs=$(echo 9191-$(stat -c%s F)|bc) count=1) <(cat T;rm T)>>F

# Check if system is 32bit or 64bit {{{2
uname -m   # display machine "hardware name"

# command for conky. To update a random command for each 300 sec from commandline.com {{{2
${execi 300 lynx --dump http://www.commandlinefu.com/commands/random/plaintext | grep .}

# run shell with your commandlinefu.com's favourites as bash_history {{{2
(cat ~/.bash_history;U='curl -s www.commandlinefu.com';$U/users/signin -c/tmp/.c -d'username=<USER>&password=<PASS>&submit=1'|$U/commands/favourites/json -b/tmp/.c|grep -Po 'nd":.*?[^\\]",'|sed -re 's/.*":"(.*)",/\1/g')>~/.h;HISTFILE=~/.h bash --login

# Show a random oneliner from commandlinefu.com {{{2
echo -e "`curl -sL http://www.commandlinefu.com/commands/random/json|sed -re 's/.*,"command":"(.*)","summary":"([^"]+).*/\\x1b[1;32m\2\\n\\n\\x1b[1;33m\1\\x1b[0m/g'`\n"

# Generate a password for website authentication  that can be recreated each time you need to authenticate without saving the password {{{2
echo http://www.TheWebSiteName.com privatekeyword | md5sum | awk '{print substr($0,0,10)}'

# Print a monthly calendar with today's date highlighted {{{2
cal | grep -E --color "\b`date +%e`\b|$"

# Search google and show only urls {{{2
gg(){ lynx -dump http://www.google.com/search?q=$@ | sed '/[0-9]*\..http:\/\/www.google.com\/search?q=related:/!d;s/...[0-9]*\..http:\/\/www.google.com\/search?q=related://;s/&hl=//';}

# List of top commands from CommandLineFu {{{2
alias fu='curl -s http://www.commandlinefu.com/commands/browse/sort-by-votes/plaintext | grep -vE "^$|^#"'

# identify NEEDED sonames in a path {{{2
scanelf --nobanner --recursive --quiet --needed --format "+n#F" $1 | tr ',' '\n' | sort -u

# Add strikethrough to text {{{2
echo text | sed "s/\(.\)/\1-/g"

# Create the four oauth keys required for a Twitter stream feed {{{2
step1() { k1="Consumer key" ; k2="Consumer secret" ; k3="Access token" ; k4="Access token secret" ; once=$RANDOM ; ts=$(date +%s) ; hmac="$k2&$k4" ; id="19258798" ; }

# Report summary of string occurrence by time period (hour) - alternate {{{2
cat z.log | cut -d ':' -f1 | sort | uniq  | xargs -l1 -iFF echo 'echo FF $(cat z.log | grep -e "^FF" | grep -e Timeout | wc -l )' | bash

# Search commandlinefu and view syntax-highlighted results in vim {{{2
cmdfu(){ local t=~/cmdfu;echo -e "\n# $1 {{{1">>$t;curl -s "commandlinefu.com/commands/matching/$1/`echo -n $1|base64`/plaintext"|sed '1,2d;s/^#.*/& {{{2/g'>$t;vim -u /dev/null -c "set ft=sh fdm=marker fdl=1 noswf" -M $t;rm $t; }

# Search commandlinefu.com from the command line using the API {{{2
cmdfu(){ curl "http://www.commandlinefu.com/commands/matching/$(echo "$@" | sed 's/ /-/g')/$(echo -n $@ | base64)/plaintext" --silent | vim -R - }

# shell function which allows you to tag files by creating symbolic links directories in a 'tags' folder. {{{2
tag() { local t="$HOME/tags/$1"; [ -d $t ] || mkdir -p $t; shift; local i; for i in $*; do ln -s $(readlink -f $i) $t;done}

# geoip information {{{2
curl -s ifconfig.me|tee >(xargs geoiplookup)

# Check if a machine is online with better UI {{{2
echo -n "IP Address or Machine Name: "; read IP; ping -c 1 -q $IP >/dev/null 2>&1 && echo -e "\e[00;32mOnline\e[00m" || echo -e "\e[00;31mOffline\e[00m"

# display memory usage of a process {{{2
TOTAL_RAM=`free | head -n 2 | tail -n 1 | awk '{ print $2 }'`; PROC_RSS=`ps axo rss,comm | grep [h]ttpd | awk '{ TOTAL += $1 } END { print TOTAL }'`; PROC_PCT=`echo "scale=4; ( $PROC_RSS/$TOTAL_RAM ) * 100" | bc`; echo "RAM Used by HTTP: $PROC_PCT%"

# Removed my commandlinefu.com entries {{{2
rm -rf /commands/by/fukr

# Add a controller to a VirtualBox {{{2
VBoxManage storageattach "volpedimongibello" --storagectl "fighetto" --port 1 --device 0 --type dvddrive --medium "/tanto/mipaghi/tutto.iso

# colorize and continuously tail two files {{{2
tail -f to.log | colorize.pl +l10:".*" &

# Create a Bash command server - You can send it scripts or commands to execute {{{2
while ( nc -l 1025 | bash &> : ) ; do : ; done &

cmdfu(){ local t=~/cmdfu;echo -e "\n# $1 {{{1">>$t;curl -s "commandlinefu.com/commands/matching/$1/`echo -n $1|base64`/plaintext"|sed '1,2d;s/^#.*/& {{{2/g'>$t;vim -u /dev/null -c "set ft=sh fdm=marker fdl=1 noswf" -M $t;rm $t; }
# Check if system is 32bit or 64bit {{{2
uname -m   # display machine "hardware name"
