
# Recompress all files in current directory from gzip to bzip2 {{{2
find . -type f -name "*.gz" | while read line ; do gunzip --to-stdout "$line" | bzip2 > "$(echo $line | sed 's/gz$/bz2/g')" ; done

# Recompress all files in current directory from gzip to bzip2 {{{2
find . -type f -name '*.gz'|awk '{print "zcat", $1, "| bzip2 -c >", $0.".tmp", "&& rename", "s/.gz.tmp/.bz2/", "*.gz.tmp", "&& rm", $0}'|bash

# Easily find an old command you run {{{2
cat .bash_history | tail -100 | grep {command}

# Pop up a Growl alert if Amtrak wifi doesn't know where to find The Google {{{2
while [ 1 ]; do (ping -c 1 google.com || growlnotify -m 'ur wifiz, it has teh sad'); sleep 10; done

# Yardstick static analysis report sorted by which JavaScript files have the highest ratio of comments to code. {{{2
find . -name *js -type f | xargs yardstick | sort -k6 -n

# find potentially malicious PHP commands used in backdoors and aliked scripts {{{2
for ii in $(find /path/to/docroot -type f -name \*.php); do echo $ii; wc -lc $ii | awk '{ nr=$2/($1 + 1); printf("%d\n",nr); }'; done

# Find LVM Volume Group name for a block device {{{2
cat /sys/block/md1/holders/dm*/dm/name | awk -F- '{print $1}' | sort -u

# find potentially malicious PHP commands used in backdoors and aliked scripts {{{2
find ./public_html/ -name \*.php -exec grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;

# Find out the permissions of the current directory {{{2
ls -lad

# find established tcp connections without using netstat!! {{{2
lsof -i -n | grep ESTABLISHED

# List OSX applications and versions. {{{2
find /Applications -type d -maxdepth 1 -exec sh -c 'echo "{}"; (plutil -convert xml1 -o - "{}/Contents/Info.plist" | xpath /dev/stdin "concat(\"v\", /plist/dict/string[preceding-sibling::key[1]=\"CFBundleShortVersionString\"]/node())" 2>/dev/null)' \;

# Recursively change permissions on directories, leave files alone. {{{2
find /var/www/ -type f -print0 | xargs -0 chmod 644

# Recursively change permissions on files, leave directories alone. {{{2
find /var/www/ -type f -print0 | xargs -0 chmod 644

# find unreadable file {{{2
sudo -u apache find . -not -perm /o+r

# find unreadable file {{{2
sudo -u apache find . -not -readable

# show 20 last modified files in current directory including subdirectories {{{2
ls -tl **/*(om[1,20])

# Find files with size over 100MB and output with better lay-out {{{2
print -rl **/*(.Lm+100)

# Find today created files {{{2
print -rl **/*(.m0)

# Find today created files {{{2
find -maxdepth 1 -type f -newermt "00:00" -printf "%f\n" | sort

# Show the total number of changes that every user committed to a Subversion repository {{{2
svn log -v --xml > log.xml; zorba -q 'let $log := doc("log.xml")/log/logentry return for $author in distinct-values($log/author) order by $author return concat($author, " ", sum(count($log[author=$author]/paths/path)), "&#xa;")' --serialize-text

# Find top 5 big files {{{2
ls -Sh **/*(.Lm+100) | tail -5

# find str in  in a directory which file extension is .php {{{2
ack --type=php <string>

# Find files and list them sorted by modification time {{{2
find -type f | xargs ls -1tr

# Find top 5 big files {{{2
count=0;while IFS= read -r -d '' line; do echo "${line#* }"; ((++count==5)) && break; done < <(find . -type f -printf '%s %p\0' | sort -znr)

# Find top 5 big files {{{2
find . -type f -exec ls -s {} \; | sort -n -r | head -5

# The single most useful thing in bash {{{2
vim ~/.inputrc

# bash auto-complete your screen sessions {{{2
complete -C "perl -e '@w=split(/ /,\$ENV{COMP_LINE},-1);\$w=pop(@w);for(qx(screen -ls)){print qq/\$1\n/ if (/^\s*\$w/&&/(\d+\.\w+)/||/\d+\.(\$w\w*)/)}'" screen

# Easily find an old command you run {{{2
cat .bash_history | tail -100 | grep {command}

# Google verbatim search on your terminal {{{2
function google { Q="$@"; GOOG_URL='https://www.google.de/search?tbs=li:1&q='; AGENT="Mozilla/4.0"; stream=$(curl -A "$AGENT" -skLm 10 "${GOOG_URL}${Q//\ /+}" | grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }

# find potentially malicious PHP commands used in backdoors and aliked scripts {{{2
find ./public_html/ -name \*.php -exec grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;

# Search google.com on your terminal {{{2
Q="YOURSEARCH"; GOOG_URL="http://www.google.com/search?q="; AGENT="Mozilla/4.0"; stream=$(curl -A "$AGENT" -skLm 10 "${GOOG_URL}\"${Q/\ /+}\"" | grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"

# Get fresh FollowBack list for Twitter {{{2
for a in $(seq 5 8); do cat twit.txt | cut -d " " -f$a | grep "^@" | sort -u; done > followlst.txt

# Recursively search your directory tree files for a string {{{2
alias gfind='find . -print0  | xargs -0 egrep -I '

# (DEBIAN-BASED DISTROS) Find total installed size of packages given a search term {{{2
dpkg-query -Wf '${Installed-Size}\t${Package}\n' | grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'

# How to search for files and open all of them in tabbed vim editor. {{{2
sudo find / -type f -name config.inc.php -exec vim -p {} +

# Git Global search and replace {{{2
git grep -l foo | xargs sed -i 's/foo/bar/g'

# Copy a file over SSH without SCP {{{2
ssh username1@servername1 -t ssh username2@servername2 uuencode -m testfile1.tar - | uudecode > testfile1.tar

# How to find all open files by a process in Solaris 10 {{{2
for i in `pfiles pid|grep S_IFREG|awk '{print $5}'|awk -F":" '{print $2}'`; do find / -inum $i |xargs ls -lah; done

# Search in files {{{2
grep -i -h 'account.journal.cashbox.line' *.py

# Put uppercase letters in curly brackets in a BibTeX database {{{2
sed '/^\s*[^@%]/s=\([A-Z][A-Z]*\)\([^}A-Z]\|},$\)={\1}\2=g' literature.bib > output.bib

# Grep inside Vim and navigate results {{{2
:vimgrep pattern %

# Oneliner to get domain names list of all existing domain names (from wikipedia) {{{2
curl -s http://en.m.wikipedia.org/wiki/List_of_Internet_top-level_domains | sed -n '/<tr valign="top">/{s/<[^>]*>//g;p}'

# Command to find filesystem type {{{2
#11671 {{{2

# recursive search and replace old with new string, inside files {{{2
replace old new -- `find -type f`

# Search recursively to find a word or phrase in certain file types, such as C code {{{2
find . -name "*.[ch]" -exec grep -i /dev/null "search pharse" {} \;

# Find and replace text within all files within a directory {{{2
find . | xargs perl -p -i.bak -e 's/oldString/newString/;'

# Geolocate a given IP address (zh-CN) {{{2
ydip () { w3m -dump "http://www.youdao.com/smartresult-xml/search.s?type=ip&q=$1"; }

# Find all files matching 'name.xml' and search for 'text' within them {{{2
grep -nH "text" -r . --include *name.xml

# If a directory contains softlinks, grep will give lot of warnings. So better use it along with find command so that softlinks are excluded. "Hn" operator will take care that both line number and filename is shown in grep output {{{2
find /path/to/search/directory -exec grep -Hn "pattern" {} \;

# List all symbolic links in current directory that matches regexp {{{2
perl -e 'print map { -l and $_ .= "\n" } <libxml*>'

