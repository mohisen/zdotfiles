grep "\ $DATE\
--
grep Date | awk '{print " 
grep "\ $DATE\
--
grep i386 | awk '{ print "apt-get -y  remove --purge "$2 }' | sh
grep '^rc\b' | awk '{ print $2 }' | xargs sudo dpkg -P
grep usr/sbin/sshd|sed 's,usr,/usr,'|md5sum -c
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
grep ^rc | awk '{ print $2}' | xargs apt-get -y remove --purge
grep FAILED$ | cut -f1 -d'
grep ^rc|awk '{ print $2 }')
grep ii | cut -d" " -f3 | sed '
--
grep (package name)
--
grep 'deleted'| grep "\/proc.*\file-name-part"
--
grep -a -B 25 -A 100 'some string in the file' /dev/sda1 > results.txt
--
grep {command}
grep ESTABLISHED
--
grep -l foo | xargs sed -i 's/foo/bar/g'
--
grep S_IFREG|awk '{print $5}'|awk -F"
grep -i -h 'account.journal.cashbox.line' *.py
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
--
grep -i /dev/null "search pharse" {} \;
--
grep -nH "text" -r . --include *name.xml
grep will give lot of warnings. So better use it along with find command so that softlinks are excluded. "Hn" operator will take care that both line number and filename is shown in grep output {{{2
grep -Hn "pattern" {} \;
--
grep "(){" | sed -e 's/(){//g' | less; }
--
grep")[39m
--
grep -v")[39m
--
grep -A1 -B1")[39m
grep for AAA and BBB and CCC (in any order)[39m
grep for AAA and BBB and CCC (in that order)[39m
grep for AAA or BBB or CCC (emulates "egrep")[39m
--
grep '.' ")[39m
--
grep Chrome | perl -ne 'print "$1\n" if / (\d+)$/' | ( x=0;while read line; do (( x += $line )); done; echo $((x/1024)) );
--
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
--
grep -o '/'|perl -ne '$x.="./.";print`readlink -f $x`'|xargs -tn1 chmod 755
--
grep '(ESSID|Signal|Address)'| \sed -e 's/Cell  - Address
--
grep "Nmap scan report for"| cut -d' ' -f 5  > ips.txt
grep \"icmp\" &" ; done; done
--
grep -qF "$HEX" file; then eval echo $HEX \\x${i}${j}; fi; done; done 2> /dev/null | less
--
grep -P '
--
grep postfix /var/log/messages | audit2allow -M mypolicy
--
grep ^d  | sed 's
--
grep -lf gnome-panel | awk '{if ($2=="gnome-panel") print $1}' | xargs kill -9
--
grep [process] | awk '{print $2}' | xargs -I % ls /proc/%/fd | wc -l
--
grep <process> | grep -v grep | awk '{print $2}' | xargs -i -t kill -9 {}
--
grep sbin/apache | awk '{print"-p " $2}' | xargs strace -f
grep " lm " > /dev/null && echo 64 bits || echo 32 bits
grep " lm ") ]] ; then echo "64 bits" ; else echo "32 bits" ; fi
grep process_name_here | wc -l
--
grep command)
--
grep S_IFREG|awk '{print $5}'|awk -F"
--
grep .mp3 >list.txt; while read line; do newname=`echo $line|sed 's/\ /-/g'|sort`; newname=`echo $newname|tr -s '-' `; echo $newname; echo $newname>> tracklist.txt;mv "$line" "$newname"; done <list.txt; rm list.txt
grep tracker | awk '{print $8}' | cut -d'/' -f4 | grep -v grep`; do killall -9 $i; done
--
grep -in bar
--
grep "$TTYTEST$" |awk '{print $1}'`;echo $REALUSERID
--
grep mp4 | awk '{print $0}' | sed -e 's/\.mp4//'); do (ffmpeg -i $track.mp4 -vn -ar 44100 -ac 2 -ab 320 -f mp3 $track.mp3); done; rm -f *.mp4}
--
grep '<title>'|sed -n '2s/ *<\/\?title>//gp'
--
Grep recursively your Python project with color highlighting the result and line numbers
grep --color=always -nr 'setLevel' --include=*py | less -SRqg
--
grep -d , foo)
grep -d ' -p ' foo)
--
grep foo | sed 's|^|-p |g')
grep http|grep -v grep | grep -v watch|wc -l && netstat -ntup|grep 
--
grep "_raid|_resync|jbd2"`)
grep energy -A 4"
--
grep pidgin`
--
grep -Po '^sub (\w+)' file.pm | cut -d' ' -f2
--
grep -oE '[0-9]{1,}.[0-9]{1,}.[0-9]{1,}.[0-9]{1,}' | sort | uniq -c | sort -n
--
grep 'dimensions
--
grep -vE '^(#|$)' file1) <(grep -vE '^(#|$)' file2)
--
grep FAILED$ | cut -f1 -d'
--
grep "Only in" | sed -e 's/^.*\
--
grep ${SUBNET}. | awk '{print $5}' | sort -t"." -k4 -n) <(for i in $(seq 1 254); do echo ${SUBNET}.$i; done)
--
grep '@href' | cut -d\= -f 2- | sort | uniq | linkchecker -r0 --stdin --complete -v -t 50 -F blacklist
--
grep -qIm1 . $file
--
grep --color -i -E 'listen|listening'
--
grep usr/sbin/sshd|sed 's,usr,/usr,'|md5sum -c
--
grep " lm " /proc/cpuinfo > /dev/null && echo "64-bit" || echo "32-bit"
--
grep 'Device / Media Name'
grep " lm " > /dev/null && echo 64 bits || echo 32 bits
grep " lm ") ]] ; then echo "64 bits" ; else echo "32 bits" ; fi
grep -q '\<lm\>' /proc/cpuinfo && echo 64 bits || echo 32 bits
--
grep <process> | grep -v grep | awk '{print $2}' | xargs -i -t kill -9 {}
--
grep Z | grep -v PID | awk '{ print $2 }' | xargs kill -9
--
grep -q ^0\$ && continue; done; kill %1; done &>/dev/null
grep -q ^0\$ && continue; done; kill %1; done
--
grep application | grep processtobekilled | gawk '{print $2}' | grep -v grep | xargs kill -9
--
grep 192.168.10.10 | awk "{print $2}" |xargs kill
--
grep defunct -B 1 | grep -Eo "[0-9]{3,}" | xargs kill -9
--
grep ESTABLISHED |awk '{printf \"%15.15s \\t%s\\n\", \$1, \$9}'"
grep -i 'MAIL FROM\|RCPT TO'
--
grep \"(call|channel)\""
grep "active" | cut -d' ' -f1
--
grep http|grep -v grep | grep -v watch|wc -l && netstat -ntup|grep 
--
grep -e "\(HTTP\|Location\)"'
--
grep -o mplayer`/fd/3";while [ -e "`$r`" ];do if [ "$f" = "`$r`" ];then sleep 1;else f="`$r`";notify-send " $f";fi;done
--
grep for.
--
grep cpu
--
grep -u murmur murmurd | head`; chomp $pid; `logger -p info -t "murmurd[$pid]" \\"$2\\"`;' &
--
grep {command}
--
grep "^-" | awk 'BEGIN {START=2002} (START <= $9){ print $10 ;START=$9 }' | tail -1
--
grep Chrome | perl -ne 'print "$1\n" if / (\d+)$/' | ( x=0;while read line; do (( x += $line )); done; echo $((x/1024)) );
--
grep '@href' | cut -d\= -f 2- | sort | uniq | linkchecker -r0 --stdin --complete -v -t 50 -F blacklist
--
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
grep [process] | awk '{print $2}' | xargs -I % ls /proc/%/fd | wc -l
--
grep -q "\"reason\"
--
grep <process> | grep -v grep | awk '{print $2}' | xargs -i -t kill -9 {}
--
grep sbin/apache | awk '{print"-p " $2}' | xargs strace -f
--
grep -B 4 XXX | grep RET| sed "s/.\+EPS/EPS/" |xargs -I '{}' cp '{}' out/'{}';done;
--
grep process_name_here | wc -l
grep java | awk '{ print $2 }'`;do ls /proc/$x/fd|wc -l;done
--
grep -Pzao '
--
grep -n pattern1 | grep pattern2
--
grep --color=always 'get install' /var/log/apt/history.log*
--
grep -o mplayer`/fd/3";while [ -e "`$r`" ];do if [ "$f" = "`$r`" ];then sleep 1;else f="`$r`";notify-send " $f";fi;done
--
grep c#t|awk '$2 > 0 {print $NF}')
--
grep -Eo "<original>(.)*</original>" | grep -Eo "http
--
grep NumberOfPages | awk '{s+=$2} END {print s}'
grep -i /dev/null "search pharse" {} \;
grep will give lot of warnings. So better use it along with find command so that softlinks are excluded. "Hn" operator will take care that both line number and filename is shown in grep output
grep -Hn "pattern" {} \;
--
grep "mystring"
--
grep -E "hello\$"
--
grep Mod
--
grep Mod
--
grep Detached | cut -c -10`
--
grep
grep is a command-line utility initially written for use with the Solaris 7 operating system. It has since been reimplemented for Linux and the BSDs (Dragonfly BSD, FreeBSD, NetBSD, and OpenBSD). It searches for all the named processes that can be specified as extended regular expression patterns, and\u2014by default\u2014returns their process ID. Alternatives include pidof (finds process ID given a program name) and ps.
--
grep (returning the process identifier of the named tasks) simplifies an otherwise complex task and is invoked with
grep 'bash'
--
grep`
grep 'processname' | grep 'grep' -v | awk '{print $1}'
grep is listing the process name as well as the PID (-l Lists the process name as well as the process ID) of all processes belonging to the group alice (-G Only match processes whose real group ID is listed. Either the numerical or symbolical value may be used)
grep -l -G alice
grep -v -u root
--
grep -n 
grep -n -u alice emacs
--
grep")
--
grep -v")
--
grep -A1 -B1")
grep for AAA and BBB and CCC (in any order)
grep for AAA and BBB and CCC (in that order)
grep for AAA or BBB or CCC (emulates "egrep")
--
grep '.' ")
--
grep si*
--
grep
--
grep bs
grep ba
grep bas
grep bash
grep .bash
grep \.bash
--
grep ".*
--
grep "
--
grep boo
--
grep 
--
grep mirror
grep zdot
--
grep zdotfiles
grep zdotfiles.git
grep zdotfiles.git ~
grep zdotfiles.git*
grep zdotfiles.git\s\~
grep zdotfiles.git\s\~*
--
grep .git
grep .git
--
grep status
grep status comm
grep comm
grep push
--
grep git
grep zfiles
--
grep tazjel
--
grep --color=auto -iRnH "tazjel" ~/
grep D
--
grep I
--
grep sixad
--
grep sixad
--
grep $1"' >> ~/.oh-my-zsh/lib/aliases.zsh
grep $1' >> ~/.oh-my-zsh/lib/aliases.zsh'
--
grep -v '[a-z]' | sort | uniq -c
grep ESTABLISHED |awk '{print $5}' | awk -F
grep 'tcp\|udp' | awk '{print $5}' | sed s/
grep -i stab | awk -F/ '{print $2}' | sort | uniq
grep ESTABLISHED | awk '\''{print $5}'\'' | awk -F
--
grep -i establ | awk -F/ '{print $2}' | sort | uniq
--
grep gre
--
grep w 
grep; sudo ln -s $(which ack-grep) /usr/local/bin/ack
--
grep 
--
grep .vim
grep vim
--
grep -e '^pulse
--
grep 'EMU|probe|emu|ALSA|alsa|ac97|udi|snd|ound|irmware'; sudo /etc/init.d/sl-modem-daemon status; sudo grep model /etc/modprobe.d/* ; sudo dmidecode|egrep 'anufact|roduct|erial|elease'; lsmod | egrep 'snd|usb|midi|udio'; aplay -l; sudo alsa force-reload; sudo lshw -C sound
--
grep "192.168.1.[0-9]* *ether"
grep ESTABLISHED | awk '{print $5}' | awk -F
grep -RnisI tazjel *
grep -i estab
grep -Eo 'src [0-9.]+'|grep -Eo '[0-9.]+'
--
grep -lir "abobani@gmail.com" *
--
grep .git
--
grep
grep gre
grep g
grep 'dimensions
--
grep 'geometry' | awk '{print $2;}') -r 10 -i 
--
grep -i -H "alias" {} \;
grep -i -H "whence" {} \;
grep -i -H "which-command" {} \;
grep -i -H "grrm" {} \;
grep -i -H "which-command=whence" {} \;
--
grep test *)
grep -Hrli 'alias' * | xargs vim
--
grep .bas
--
grep  adal
grep ad
--
grep' *
--
grep -il $1
grep -il $1
grep -il $1
grep -il $1
grep -il $1
grep -l "$1"\
--
grepit(){\
grep -R --include "*${2}" ${1} .\
grepit "w" *
grepit "alias" *
--
grep --color=always $2 | parallel -k echo "[$f]"; done\
--
grep -i "$1" }
--
grep "
grep "
grep '$1'"
--
grep $1"
--
grep -l $1"
--
grep -l string {alias} \;
grep -l string {"alias"} \;
grep -r -L -P "(func|alias)" 
grep -r -P "(func|alias)" 
grep -r -P "(sixad|alias)" 
grep -r -P "(tube)" 
grep -r -P "(^zshconfig)" 
grep -r -P "(zshconfig)" 
grep -r -P "(vibash)" 
grep -r -P "(vibash)" .
--
grep  "sixad"
grep -R -H sixad
grep sixad
grep sixad
grep -c sixad<
grep -c sixad<*
grep -c sixad
grep -c -r sixad
grep -c -l sixad
grep -l -c sixad
grep -l Rcopy {} \;
grep -l alias {} \;
grep -l -w alias {} \;
grep -l -w -x alias {} \;
--
grep sixad
--
grep siz
grep "siz"
grep "siz"
grep "siz" .
--
grep ls
grep ls
grep screen
grep grep
grep
--
grep print|line
grep print|line
grep print|line
grep line
grep -B line
grep -B line
grep -n line
grep --help
grep -n grep
grep
grep --help
grep
grep ls
grep alias
grep alias
grep alias
grep.zsh
grep vim
--
grep sixad*
grep sixad
--
grep history 
grep history
grep history
--
grep history
grep sssix
grep six
--
grep his
grep zz
grep 
grep a
--
grep hh
--
grep z
grep alias
--
grep .git
grep \.git
grep zgit
--
grep config
--
grep -r *.ttf
grep grep
grep *
--
grep kik_conf_add_opt $1 | awk -F "," '{print $5}' | tr -d '"'| sort
grep "{.*}" $1 | awk -F "," '{print $1}' | tr -d '{' |tr -d ' '
--
grep Network
--
grep inet6
--
grep sendmail
grep "pid"
--
grep
grep
grep
grep "pid"
--
grep 'ultimedia|udio|sound|AC97|ac97|EMU'
--
grep .z
grep'
--
grep -il "$1" {} \;\
--
grep ph 
grep str
grep fi
grep --help | fi
grep --help | grep li
grep --help | grep line
grep --help | grep fi
--
grep -H -r "alias" /
grep -H -r "alias" .
grep -H -r "alias" /home/bani/zdotfiles
grep -r "alias" /home/bani/zdotfiles
grep -r "alias " /home/bani/zdotfiles
grep -r "alias " /home/bani/ >> all_alias
grep -r "^alias\s" /home/bani/ >> all_alias
grep -r "^alias\s" /home/bani
grep -r "^alias " /home/bani
grep -r -h "^alias " /home/bani
grep -r -h "^alias " /home/bani > /home/bani/zdotfiles/all_alias.zsh
grep -r -h "^alias " /home/bani >> /home/bani/zdotfiles/all_alias.zsh
grep -r -h "^alias " /home/bani all_alias all_alias.zsh 
grep -r -h -G"^alias " /home/bani >> /home/bani/zdotfiles/all_alias.zsh
grep -r -h -G "^alias " /home/bani >> /home/bani/zdotfiles/all_alias.zsh
grep -r -h -G"^alias " /home/bani/zdotfiles 
grep -r -h -G "^alias " /home/bani/zdotfiles 
grep -r -h -G "^alias " /home/bani/zdotfiles > /home/bani/zdotfiles/all_alias.zsh  
grep -r -h -G "^alias " '/home/bani/zdotfiles' > /home/bani/zdotfiles/all_alias.zsh
grep -r -h -G "^alias " '/home/bani/zdotfiles' > '/home/bani/zdotfiles/wall_alias.zsh'
grep -r -h -G "^alias " '/home/bani/zdotfiles' > /home/bani/wall_alias.zsh 
--
grep search
grep w
--
grep ip 
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep cc
grep source
grep source /home
grep we got
grep we
--
grep gll
grep -r "glll" .
--
grep -r -G"^((?$
--
grep git
--
grep'\
--
grep -r "zzz" /
grep -r "zzz" /
grep -r "zzz" .
grep mercurial 
grep nginx
grep TRANSACTION
grep '
grep
grep alias *.zsh
--
grep -r 'rvm-prompt' . 
grep -r 'rvm-prompt' .
grep -r 'rvm' .
--
grep adal
grep adal
grep ccc
--
grep linux-image'
--
grep .mutt
--
grep 'vim' .
grep 'vim' .
grep 'vim'
grep -r 'vim'
grep -l 'vim'
grep -l 'vim'
grep 'vim'
--
grep --exclude 
grep * --exclude 
grep '*" --exclude 
grep '*.' 
grep '*' 
grep '.' 
grep '^.' 
grep '^\.' 
grep '^\." only dotfiles 
--
grep '*\.json'
grep '$.json'
grep '$json'
grep '*$json'
grep 'json'
grep '*json'
grep '*.json'
grep '*?json'
grep 'json$'
grep '^*json$'
grep '^*.json$'
grep '^*.j"son$'
grep '^*.?json$'
grep '^. && n$'
grep '^. || n$'
grep '^\. || n$'
grep 'n$'
grep 'n$' && '^.'
grep 'n$' && '^\.'
grep 'n$' && '^.\w'
grep 'n$' || '^.\w'
grep 'n$' || 'N'
grep 'n$' || '.'
grep 'n$' || '^.'
grep 'n$' || '^.f'
grep 'n$' || '^\.f'
grep 'n$' || 'f'
grep 'n$' && 'f'
grep "^." 
grep "^\." 
grep "^\. || N" 
grep "^\. || n$" 
grep "^\. | n$" 
grep "^\." | "n$" 
grep "^\." "n$" 
grep "^\." -G "n$" 
grep "(^\.)n$" 
grep "(^\.)(n$)" 
grep "(^\.)*(n$)" 
grep "^\.\(.*?\)n$" 
grep "^\.\(.*?)n$" 
grep "^\.\(.*\)n$/1\1" 
grep "^\.\(.*\)n$" 
grep "^\.\(.*\)n$"' json 
--
grep '-e'
grep '\-e'
--
grep -r 'ISO-10646\-1' .
grep -r 'ISO-10646\-1' ~
--
grep "^\."
--
grep mad | awk '{print $2}'
grep bani | awk '{print $2}'
grep bani | awk '{print $2}'
grep bani | awk '{print $9}'
--
grep bani | awk '{print $9}'
grep bani | awk '{print $2}'
grep bani | awk '{print $1}'
grep bani | awk '{print $0}'
grep bani | awk '{print $1}'+
--
grep "inet addr" | head -n1 | sed 's|.*addr
grep "inet addr" | head -n1
--
grep w 
grep wk 
grep -a wk 
--
grep --help | grep 'word' 
grep --help | grep -w'word' 
grep -w 'ack' .
grep 'ack' .
grep -w 'ack' .
grep -r -w 'ack'
grep -r -w 'ack' .
grep -r 'ack' .
grep -r 'awk' .
grep -r -c 'awk' .
grep -r --label 'awk' .
--
grep -r 'mkdir' .
grep -r --label 'mkdir' .
grep -r --label 'sed' .
grep -r --label 'vim' .
grep -r 'vim' .
grep -r 'grep' .
grep -r 'wget' .
grep -r 'wget' . >> vim =
grep -r 'wget' . >> vim -
grep -r 'wget' . | vim -
--
grep -r 'grep' . | vim -
grep --color 'w|$'
grep --color 'wget|$'
grep --color 'alias|$'
grep -r 'curl' . | vim -
grep -r 'curl' .
grep -r 'curl' . |grep 'alias' 
--
grep -v _curl_ >> /tmp/clfu.t && cat /tmp/clfu.t |uniq > ~/Desktop/commandlinefu.aprx.64184.cmds.txt && rm /tmp/clfu.t
--
grep TTYogesh
--
grep -r'
grep -r'
grep -r"
grep "\.bash"
grep -r"
grep -r" 
--
grep -v grep|grep w\
grep -v grep|grep w
grep -v grep|grep six
--
grep -r "git_super_status" .
grep -r "git_super_status" /
grep ba
grep b
--
grep -r 'git_super_status'
--
grep '^\.'
--
grep -r 'backup.sh' /
grep -r 'backup.sh' /home/bani 
--
grep easy
grep easy
--
grep sed
grep sed
grep sed
grep sed
grep sed >> /home/bani/agSe
grep sed >> /home/bani/agSe
grep sed >> /home/bani/agSe
grep sed >> /home/bani/agSe
--
grep sixad*
grep sixad
grep sixad
--
grep chm
--
grep /usr/local/bin
grep '\/usr/local/bin'
grep '\/usr]/local/bin'
grep '\/usr\/local/bin'
grep '\/usr\/local\/bin'
grep '\/usr\/local/bin'
grep -G '\/usr\/local/bin'
grep -f '\/usr\/local/bin'
grep -f '\/usr\/local\/bin'
--
grep up
--
grep in
grep i
grep w
grep w
grep inp
grep in
grep bas
grep xin 
grep bas 
--
grep bas 
--
grep sixad*
grep sixad
--
grep
--
grep '^'$(date +\%d) $HOME/zdotfiles/Time/$(date +\%m) | awk '{print " \n\n Fajer   
grep "^"$(date +\%d) $HOME/zdotfiles/Time/april_prayertime'
--
grep s | cut -d' ' -f 6
--
grep "nmap scan report for" | grep s | cut -d" " -f 6 '
grep "nmap scan report for"| cut -d' ' -f 5'
grep "nmap scan report for"| cut -d' ' -f 6'
grep "nmap scan report for" '
grep -ve '^(#|$)' file1) <(grep -ve '^(#|$)' file2)
grep "$1" ~/.zsh_history'
--
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep'
grep'
--
grep "^\."'
grep "^\." '
--
grep'
--
grep linux-image'
grep '^\.'"
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
--
grep -v "^#|^$"'
--
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
grep -o "inet addr
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
grep default|awk '{ print $8 }')|grep 'inet addr
--
grep "^0." | awk '{print "Gateway to the Word
grep inet | awk '{print $2}' | cut -d '
--
grep_logs(){
grep "$1" */logs/*.log
--
grep_1_2'='grep -GRh $1 ~ | sort | uniq -c | sort -nr >> $2 && tail  $2'
grep_1'='grep $1 ~/.zsh_history | sort | uniq -c | sort -nr'
grep'
grep'
--
grep $1 $HOME/.zsh_history | sed 's/^.*;//g'
--
grep -il "$1" {} \;
grep "
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep'
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -il'
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep'
--
grep --color=auto'
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep ^d'
--
grep -v "^#|^$"'
--
grep'
--
grep '
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep 'inet addr
--
grep "Current IP Address"'
grep -vE "^$|^#"'
--
grep='ps aux | grep $(echo $1 | sed "s/^\(.\)/[\1]/g")'
--
grep $USER'
--
grep -o -e '[0-9]+' | head -n 1)'
--
grep ^d | head -1 | cut -b 51- )'
grep ^d | head -1)'
grep '^ *[0-9]* *cd ' ~/.bash_history| tail -10 >>~/.bash_history && history -r ~/.bash_history"
grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'
--
grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
--
grep).
--
grep --color=always -sn ${case} "$1" 2>&- | more
--
grep
--
grep ^"$2" |sort -u ;
grep -o -e "--[^[
--
grep -E '^-?include' $makef |
--
grep "^$cur"' ; else gcmd=cat ; fi
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep'
--
grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
--
grep).
--
grep --color=always -sn ${case} "$1" 2>&- | more
--
grep
--
grep ^"$2" |sort -u ;
grep -o -e "--[^[
--
grep -E '^-?include' $makef |
--
grep "^$cur"' ; else gcmd=cat ; fi
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep '
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep '
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
--
grep).
--
grep --color=always -sn ${case} "$1" 2>&- | more
--
grep
--
grep ^"$2" |sort -u ;
grep -o -e "--[^[
--
grep -E '^-?include' $makef |
--
grep "^$cur"' ; else gcmd=cat ; fi
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep --exclude-dir=vendor --exclude-dir=tmp --exclude-dir=log "(binding.pry)|(console.log\(.+\))|(alert\(.+\))" -inR *
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -r "zw52.ru" * | awk '{print $1}' | cut -f1 -d\
--
grep $1'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
--
grep ${tstmp}
--
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep"
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep'
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep --exclude-dir=vendor --exclude-dir=tmp --exclude-dir=log "(binding.pry)|(console.log\(.+\))|(alert\(.+\))" -inR *
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -r "zw52.ru" * | awk '{print $1}' | cut -f1 -d\
--
grep $1'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
--
grep ${tstmp}
--
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep"
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep linux-image'
--
grep '^\.'"
--
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep linux-image'
--
grep '^\.'"
--
grep "^\.\(.*\)n$"'
--
grep Depends | sed "s/.*ends
--
grep 64`" ]
--
grep 64`" ]
--
grep Depends | sed "s/.*ends
--
grep
--
grep fi
grep ph 
grep str
--
grep '^\." only dotfiles 
grep "^\.\(.*\)n$"' json 
grep linux-image'
--
grep dir
grep grep  
grep sed
grep sed
grep sed
grep .vimrc  
--
grep nmap  
grep sed
grep sed
grep sed >> /home/bani/agSe
grep sed >> /home/bani/agSe
grep sed
grep sed
--
grep awk  
grep sed  
grep sed
--
grep bani
--
grep dir  
grep find 
grep find | less
grep find | less -G
--
grep sed >> /home/bani/agSe
grep sed >> /home/bani/agSe
--
grep 
grep exc]'
grep f
grep h
grep hid
grep ig
grep pat
grep w
--
grep.txt
grep.txt
--
grep alias | vim -
--
grep pray
grep pray
--
grep jeddah
--
grep.txt
--
grep sed
--
grep grep  
grep grep | sort -u 
--
grep ' d '  
grep d  
grep dir  
grep ' d ' | more  
--
grep his
grep history
grep -i history >> less
--
grep
grep 
grep | less
--
grep'
grep '^al'
grep 'al'
grep grep
grep ls
grep screen
--
grep -vE "^$|^#"'
grep -hI '
grep -I '
grep'
grep'
grep -l $1"
grep $1"
grep '$1'"
grep -r" 
grep 
grep a
grep ad
grep  adal
grep alias
grep ch
grep comm
grep git
grep gre
grep 'grep'
grep 'grep' 
grep hh
grep his
grep history
grep history 
grep ls
grep push
grep six
grep sixad
grep sssix
grep status
grep status comm
grep vim
grep z
grep zz
--
grep -r'
grep -r"
grep -r"
grep "
grep "
--
grep'
--
grep $2'
--
grep ^Inst | cut -d ' ' -f2
grep
--
grep "192.168.1.[0-9]* *ether"
grep "192.168.1.[0-9]* *ether"
grep "192.168.1.[0-9]* *ether" ###w get the IP and mac
--
grep bani | awk '{print $0}'
grep bani | awk '{print $1}'
grep bani | awk '{print $1}'+
grep bani | awk '{print $2}'
grep bani | awk '{print $9}'
--
grep -i Key
--
grep -E --color "\b`date +%C`\b|$"
grep -E --color $(\b`date +%C`\b|$)
grep -E --color "\b`date +%e`\b|$"
--
grep adal
grep w
grep w
grep 'w'
--
grep *
--
grep -c -l sixad
grep -c -r sixad
grep -c sixad
grep -c sixad<
grep -c sixad<*
grep -l -c sixad
--
grep print|line
grep -B line
grep line
grep print|line
grep -B line
grep -n line
grep print|line
--
grep grep 
--
grep'
--
grep -E --color "\b`date +%e`\b|$"
--
grep
--
grep fil
grep file
grep list
--
grep -v _curl_ >> /tmp/clfu.t && cat /tmp/clfu.t |uniq > ~/Desktop/commandlinefu.aprx.64184.cmds.txt && rm /tmp/clfu.t
--
grep -vE '^(#|$)' ~/.bash_aliases ) <(grep -vE '^(#|$)' ~/.bash_aliases )
grep -vE '^(#|$)' ~/.bash_aliases ) <(grep -vE '^(#|$)' ~/.bashrc )
grep -vE '^(#|$)' .bashrc.15 ) <(grep -vE '^(#|$)' .bashrc.16 )
grep -vE '^(#|$)' file1) <(grep -vE '^(#|$)' file2)
grep -vE '^(#|$)' /home/bani/.oh-my-zsh/lib/aliases.zsh ) <(grep -vE '^(#|$)' /home/bani/.oh-my-zsh/lib/aliases.zsh )
grep -vE '^(#|$)' /home/bani/zdotfiles/zsh/aliases.zsh ) <(grep -vE '^(#|$)' /home/bani/.oh-my-zsh/lib/aliases.zsh )
--
grep /home/bani/
grep 'Only in /home/bani/'
grep Only in /home/bani/
--
grep ttl
--
grep mercurial 
grep ii
grep ii | cut -d" " -f3 
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
--
grep $1' >> ~/.oh-my-zsh/lib/aliases.zsh'
grep $1"' >> ~/.oh-my-zsh/lib/aliases.zsh
--
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list ¨ >> wtst
--
grep
grep
grep
grep 
grep --help
grep --help | fi
grep --help | grep fi
grep --help | grep li
grep --help | grep line
grep ls
grep -R . ^\.
grep -R . ^\.config
grep -R . "^\.config"
--
grep ed
grep i
grep vi
--
grep TTYogesh
--
grep 'dimensions
--
grep --help
--
grep JPEG
grep rc
--
grep kde
grep .kde
grep \.kde
grep kde
--
grep vim
--
grep kde
grep .kde
grep -l "$1"\
grep -il $1
grep -il $1
grep -il $1
--
grep -il $1
--
grep -il $1
--
grep -hI prayer
grep -HI prayer
grep -I prayer
grep -LI prayer
--
grep -n "tail" -r {}
--
grep' *
--
greplogs(){\
--
grep adal
grep -a wk 
grep cc
grep ccc
grep gll
grep source
grep source /home
grep w 
grep we
grep we got
grep wk 
--
grep'\
--
grep Date | awk '{print " 
grep Date | awk '{print " 
grep Date | awk '{print " 
grep Date | awk '{print " 
grep Date | awk '{print " 
grep Date | awk '{print " 
--
grep "{.*}" $1 | awk -F "," '{print $1}' | tr -d '{' |tr -d ' '
grep "$1" */logs/*.log
grep ali *
grep . "alias"
grep alias *
grep aliases *
grep aliases_inbox/gj *txt
grep \<\(aliases_inbox\|i\)\>/gj *txt
grep aliases_inbox *txt
grep \(aliases_inbox\|w\)\>/gj *txt
grep aliases_inbox\|w/gj *txt
grep aliases *t
grep aliases *txt
grep 'alias | func' *
grep 'alias |func' *
grep alias|func *
grep \<\(alias\|i\)\>/gj *txt
grep alias *.zsh
grep 'ali | func' *
grep \<\(al\|i\)\>/gj *txt
grep awk ~/.zsh_history
grep awk ~/.zsh_history | sort | uniq -c | sort -nr
grep awk ~/.zsh_history | sort -u | uniq -c | sort -nr
grep --color=auto -iRnH "tazjel" ~/
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -GR ~ '^alias' 
grep -GR '^alias' ~ 
grep -GR '^alias' ~ >> /home/bani/Dropbox/wwalias
grep -GR '^alias' ~ | sort -n | uniq >> /home/bani/Dropbox/wwalias
grep -GRh '^alias' ~ | sort -n | uniq >> /home/bani/Dropbox/wwalias
grep -GRh diff
grep -h 
grep --help
grep --help | grep -*
grep --help | grep file
grep --help | grep ig
grep --help | grep ov
grep --help | grep p
grep --help | grep r
grep --help | grep R
grep --help | grep reg
grep --help | grep -v
grep --help | grep wor
grep --help | grep 'word' 
grep --help | grep -w'word' 
grep . "history"
grep . host
grep \<\(house\|home\)\>/gj /*.*
grep \<\(house\|home\)\>/gj /*.txt
grep \<\(house\|home\)\>/gj *.txt
grep -H -r "alias" /
grep -H -r "alias" .
grep -H -r "alias" /home/bani/zdotfiles
grep -hR dotfiles /home/bani 
grep -hR dotfiles\.org /home/bani
grep -hR dotfiles\.org /home/bani | 
grep -Hrli 'alias' * | xargs vim
grep -hR 'sed ' /home/bani/zdotfiles
grep -hR sed /media/Transcend/abobani/clf-ALL.txt
grep -hR '[^ \s]sed ' /home/bani/zdotfiles
grep -i "$(date +%b\ %d\ %H)" syslog
grep -i -h 'account.journal.cashbox.line' *.py
grep -i -h 'awk' '\*.sh'
grep -i -h 'awk' *.sh
grep -i -h 'awk' \*.sh
grep 'ip' r/lsf.txt   
grep  is given, - otherwise.  If fewer than two FILEs are given, assume -h.
grepit(){\
grepit "alias" *
grepit "w" *
grep kik_conf_add_opt $1 | awk -F "," '{print $5}' | tr -d '"'| sort
grep -lir "abobani@gmail.com" *
greplogs b
greplogs p
greplogs w
grep -lR commandlin
grep --no-messages find ~/.zsh_history 
grep --no-messages find  ~/.zsh_history 
grep --no-messages --no-filename find  ~/.zsh_history 
grep --no-messages --no-filename wfind  ~/.zsh_history 
grep --no-messages --quiet find  ~/.zsh_history 
grep --no-messages --silent find  ~/.zsh_history 
grep --no-messages wfind  ~/.zsh_history 
grep -r'
grep -r 'ack' .
grep -R ^alias
grep -R ^alias 
grep -R ^alias(.*)
grep -R ¨^alias(.*)+¨
grep -R  . "alias"
grep -R . . ^alias(.*)+
grep -R . . ¨^alias(.*)+¨
grep -R . alias 
grep -R alias 
grep -r "^alias " /home/bani
grep -r "alias " /home/bani/ >> all_alias
grep -r "alias " /home/bani/zdotfiles
grep -r "alias" /home/bani/zdotfiles
grep -R ^alias.*sed
grep -R ¨^alias.*sed¨
grep -R ¨^alias\(.*\)\sed¨
grep -R ¨^alias\(.*\)sed¨
grep -r "^alias\s" /home/bani
grep -r "^alias\s" /home/bani/ >> all_alias
grep -r 'awk' .
grep -r 'backup.sh' /
grep -r 'backup.sh' /home/bani 
grep -r -c 'awk' .
grep -R . "commandfu"
grep -R 'commandfu' .
grep -R "commandfu" .
grep -R commandlin
grep -R . "^\.config"
grep -r 'curl' .
grep -r 'curl' . |grep 'alias' 
grep -r 'curl' . | vim -
--
grep -r -G"^((?$
grep -r 'git_super_status'
grep -r "git_super_status" /
grep -r "git_super_status" .
grep -r "glll" .
grep -r 'grep' .
grep -r 'grep' . | vim -
grep -r -h "^alias " /home/bani
grep -r -h "^alias " /home/bani all_alias all_alias.zsh 
grep -r -h "^alias " /home/bani >> /home/bani/zdotfiles/all_alias.zsh
grep -r -h "^alias " /home/bani > /home/bani/zdotfiles/all_alias.zsh
grep -Rh 'alias' | sed 's/^.*
grep -RH 'alias' | sed 's/^.*
grep -r -h -G "^alias " /home/bani >> /home/bani/zdotfiles/all_alias.zsh
grep -r -h -G"^alias " /home/bani >> /home/bani/zdotfiles/all_alias.zsh
grep -r -h -G "^alias " /home/bani/zdotfiles 
grep -r -h -G"^alias " /home/bani/zdotfiles 
grep -r -h -G "^alias " '/home/bani/zdotfiles' > /home/bani/wall_alias.zsh 
grep -r -h -G "^alias " /home/bani/zdotfiles > /home/bani/zdotfiles/all_alias.zsh  
grep -r -h -G "^alias " '/home/bani/zdotfiles' > /home/bani/zdotfiles/all_alias.zsh
grep -r -h -G "^alias " '/home/bani/zdotfiles' > '/home/bani/zdotfiles/wall_alias.zsh'
grep -R . host
grep -rhR '[^ \s]sed ' /home/bani/zdotfiles
grep -R -H sixad
grep -R --include "*${2}" ${1} .\
grep -r 'ISO-10646\-1' ~
grep -r 'ISO-10646\-1' .
grep -r --label 'awk' .
grep -r --label 'mkdir' .
grep -r --label 'sed' .
grep -r --label 'vim' .
grep -r -L -P "(func|alias)" 
grep -r 'mkdir' .
grep -RnisI tazjel
grep -RnisI tazjel *
grep -RnisI tazjel | sed 's/^.*
grep -RnisI tazjel | sed 's/^.*
grep -RnisI tazjel | sed 's/^.*
grep -RnisI tazjel | sed 's/^.*
grep -r -P "(func|alias)" 
grep -r -P "(sixad|alias)" 
grep -r -P "(tube)" 
grep -r -P "(vibash)" 
grep -r -P "(vibash)" .
grep -r -P "(^zshconfig)" 
grep -r -P "(zshconfig)" 
grep -r 'rvm' .
grep -r 'rvm-prompt' .
grep -r 'rvm-prompt' . 
grep -R 'sed ' /home/bani/zdotfiles
grep -R tst2regex
grep -R . tst2regex
grep -R tst2regex .
grep -r *.ttf
grep -R txt2regex .
grep -r 'vim' .
grep -R w
grep -r -w 'ack'
grep -r -w 'ack' .
grep -R w alf
grep -r 'wget' .
grep -r 'wget' . >> vim =
grep -r 'wget' . >> vim -
grep -r 'wget' . | vim -
grep -r "zzz" /
grep -r "zzz" .
grep -r "zzz" /
grep sed $alf
grep 'sed ' /home/bani/zdotfiles
grep sed ~/.zsh_history | sort -u | uniq -c | sort -nr
grep sh .zsh_history 
grep -sRh 'alias' | sed 's/^.*
grep -sRh 'alias' | sed 's/\"/\\\"/g' | sed 's/<[^>]*>//g' | sort -u > ban_alias
grep -sRhw 'alias ' | sed 's/\"/\\\"/g' | sed 's/<[^>]*>//g' | sort -u > ban_alias
grep tazjel
grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n20
grep \<\(v\|m\)\>/gj *txt
grep \<\(v\|m\)\>/gj *vimrc
grep -w 'ack' .
grep \<\(w\|a\)\>/gj *vi
grep \<\(w\|a\)\>/gj *zsh
grep w $alf
grep -w --break 'sed ' /home/bani/zdotfiles
grep -wrhR 'sed' /home/bani/zdotfiles
grep -wrhR 'sed' /home/bani/zdotfiles >> w_sed
grep -wrhR '[^ \s]sed ' /home/bani/zdotfiles
grep \<\(w\|ww\)\>/gj /*.*
grep \<\(w\|ww\)\>/gj *
grep \<\(w\|ww\)\>/gj *.
grep \<\(w\|ww\)\>/gj *.*
grep \<\(w\|ww\)\>/gj *zsh
grep ww wwww
grep w  ~/.zsh_history 
grep zfiles
grep .zsh_history 
--
grep -e 'PLAYSTATION(R)3 Controller' -e 'Wireless Keypad'\
--
grep h
--
grep grep
--
grep
grep g
grep git
grep gre
grep grep
grep history
grep mirror
grep sixad
grep zdot
grep zdotfiles
grep zdotfiles.git
grep zdotfiles.git ~
grep zdotfiles.git*
grep zdotfiles.git\s\~
grep zdotfiles.git\s\~*
--
grep history
--
grep "has address "|cut -d" " -f4
grep "has address "|cut -d" " -f4 ### ip
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
grep inet
grep inet4
grep inet6
grep inet | awk '{print $2}' | cut -d '
grep "inet addr" | head -n1
grep "inet addr" | head -n1 | sed 's|.*addr
grep -o "inet addr
grep default|awk '{ print $8 }')|grep 'inet addr
--
grep -Eo 'src [0-9.]+'|grep -Eo '[0-9.]+'
--
grep -v "^$" | awk '{ print $1 }' | sort -nr | uniq -c
--
grep.txt
--
grep 
grep ba
grep bas
grep bash
grep .bash
grep "\.bash"
grep \.bash
grep boo
grep bs
--
grep g
grep gd
grep goo
grep search
grep w
--
grep "
--
grep /
--
grep "^\."
grep '^\.'
--
grep '^.' 
grep '^\.' 
grep '.' 
grep '*.' 
grep '*' 
grep "^." 
grep "^\." 
grep .ba
grep bas
grep bas 
grep .bas
grep .con
grep --exclude 
grep '*" --exclude 
grep * --exclude 
grep .git
grep "^\." -G "n$" 
grep gt
grep i
grep in
grep inp
grep '^*.?json$'
grep '^*.j"son$'
grep '^*.json$'
grep '^*json$'
grep '$.json'
grep '$json'
grep '*?json'
grep '*.json'
grep '*$json'
grep '*\.json'
grep '*json'
grep 'json'
grep 'json$'
grep -l 'vim'
grep '^. || n$'
grep '^. && n$'
grep '^\. || n$'
grep 'n$'
grep 'n$' || '^.'
grep 'n$' || '.'
grep 'n$' && '^.'
grep 'n$' && '^\.'
grep "^\. || n$" 
grep "^\. | n$" 
grep "^\." | "n$" 
grep "^\." "n$" 
grep "^\.\(.*?)n$" 
grep "^\.\(.*?\)n$" 
grep "^\.\(.*\)n$" 
grep "(^\.)(n$)" 
grep "(^\.)*(n$)" 
grep "(^\.)n$" 
grep "^\. || N" 
grep "^\.\(.*\)n$/1\1" 
grep 'n$' || '^.f'
grep 'n$' || '^\.f'
grep 'n$' || 'f'
grep 'n$' && 'f'
grep 'n$' || 'N'
grep 'n$' || '^.\w'
grep 'n$' && '^.\w'
grep -r 'vim'
grep up
grep .vi
grep vim
grep .vim
grep 'vim'
grep w
grep x
grep xin 
grep zsh
--
grep spf
grep "siz"
grep "siz" .
--
grep "^\."
grep "^\.config"
grep "^\.config"
--
grep
grep -n grep
--
grep /
--
grep b
grep ba
grep D
grep I
grep -l 'vim'
grep m
grep mo
grep 'vim'
grep 'vim' .
--
grep siz
grep "siz"
grep s
grep so
grep 'so'
grep sol
grep Soliah
--
grep bin
--
grep name /etc/resolv.conf
grep name /etc/resolv.conf
--
grep ^d
--
grep "
--
grep -io MODULENAME| xargs modinfo | grep -iw version
--
grep -i estab
grep sendmail
grep 'ultimedia|udio|sound|AC97|ac97|EMU'
grep Network
grep VGA
--
grep "
grep .git
grep \.git
grep .git
grep .git
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep sixad
grep w 
grep zgit
--
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
grep "
--
grep "
grep "
--
grep /
grep /
--
grep config
--
grep lo
--
grep '^tcp' | grep '/' | sed 's_.*/__' | sort | uniq
grep 'tcp\|udp' | awk '{print $5}' | sed s/
grep -v '[a-z]' | sort | uniq -c
grep -v '[a-z]' | sort | uniq -c
grep "pid"
grep ESTABLISHED |awk '{print $5}' | awk -F
grep -i establ | awk -F/ '{print $2}' | sort | uniq
grep -i stab | awk -F/ '{print $2}' | sort | uniq
--
grep UG | tr -s " " | cut -d" " -f2
--
grep Host | tr "(" ")" | cut -d\) -f2
--
grep "Nmap scan report for"
grep "Nmap scan report for" 
grep "Nmap scan report for"| cut -d' ' -f 3
grep "Nmap scan report for"| cut -d' ' -f 5
grep "Nmap scan report for"| cut -d' ' -f 6
grep Host | tr "(" ")" | cut -d\) -f2
grep Host | tr "(" ")" | cut -d\) -f2
grep Host | tr "(" ")" | cut -d\) -f2
--
grep.txt
--
grep -f '\/usr\/local/bin'
grep -f '\/usr\/local\/bin'
grep -G '\/usr\/local/bin'
grep /usr/local/bin
grep '\/usr/local/bin'
grep '\/usr]/local/bin'
grep '\/usr\/local/bin'
grep '\/usr\/local\/bin'
--
grep
grep easy
grep ey
grep --help
grep -l
grep -l  2
grep -l eas
grep -l easystroke
grep -l si
grep -l w
grep -l  web
grep -n
grep -o
grep sixad
grep w
grep we
grep web
grep $1 | grep -v grep | awk '{ print $1 }')\
--
grep  "sixad"
grep nginx
grep $(echo $1 | sed \"s/^\(.\)/[\1]/g\")
grep $(echo web | sed \"s/^\(.\)/[\1]/g\") 
grep $(echo w | sed \"s/^\(.\)/[\1]/g\") 
grep web2py
grep w
grep web
--
grep easy
grep nginx
grep root
grep s
grep six
grep sixa
grep TRANSACTION
grep web
grep web
grep web2py.*
grep web2py*
grep "web2py.*-R
grep "web2py.*-R"
grep web2py.*-R
--
grep a
grep b
grep blue
grep blue{print $2}'
grep blue{print $2} ' | xargs kill
grep bluetoothd
grep bluetoothd | awk '{print $2'} 
grep bluetoothd | awk '{print $2} '
grep bluetoothd | awk '{print $2} ' | xargs kill
grep bluetoothd | awk '{print $2} ' | xargs kill 
grep bluetoothd | awk '{print $2} ' | xargs sudo kill 
grep c
grep -i d
grep -i en
grep -i google
grep -i K 
grep -i r
grep -i t
grep roard
grep si
grep six
grep six
grep sixad
grep sixad
grep sixad | awk '{print $2 }' 
grep sudo | awk '{print $2 }' 
grep www
grep www | cut 
grep www | cut -3
grep www | cut -n
grep www | cut --output-delimiter 
grep www | cut -s
--
grep -v grep|grep six
grep -v grep|grep w
grep -v grep|grep w\
grep easy
grep si*
grep sixad
grep sixad
grep sixad*
--
grep www
grep www
--
grep
grep 'ack' .
grep -w 'ack' .
--
grep "^0." | awk '{print "Gateway to the Word
--
grep '-e'
grep '\-e'
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
--
grep STA | cut -f2 -d\"
grep -i "$1" }
--
grep STA | cut -f2 -d\"
--
grep sed  
grep sed | sort 
grep sed | sort -u  
grep sed | sort -u >> ban_alias
grep sed | sort -u | less
grep sed | sort -u > ban_alias
--
grep sed | sort -u | less
grep grep | sort -u 
grep sed | sort -u | less
grep sed | sort -u | less
--
grep "^ .*" | tr '\n' ' ' > 
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list ¨ >> wtst
--
grep "^ .*" | tr '\n' ' ') kde-runtime-data
--
grep kde
grep kde
--
grep kde
grep kde
grep kde
--
grep -sRhw 'alias ' /home | sed 's/\"/\\\"/g' | sed 's/<[^>]*>//g' | sort -u > USED_grep_all_alias
grep -wrhR 'grep' /home  >> w_grep
grep -wrhR 'sed' /home >> w_sed
--
grep inet | awk 'NR==1 {print $2}' | cut -c 6-
--
grep) /usr/local/bin/ack
--
grep "pid"
grep ESTABLISHED |awk '{print $5}' | awk -F
grep '
grep 
grep -l -q -d eth0 "^GET |^POST " tcp and port 80
--
grep sixad
grep sixad
--
grep -e '^pulse
--
grep --color 'alias|$'
grep --color 'w|$'
grep --color 'wget|$'
--
grep test *)
--
grep
--
grep
--
grep
grep
grep | sort
grep | sort -n
grep | sort -n | uniq --count --ignore-case --all-repeated 
grep | sort -n | uniq --count --unique --ignore-case --all-repeated 
grep | sort -n | uniq -d 
grep | sort -n | uniq --ignore-
grep | sort -n | uniq --ignore-case 
grep | sort -n | uniq --ignore-case --all-repeated 
grep alias
--
grep -HI prayer " >> zdotfiles/6/wfindw | head
--
grep file
--
grep alias
grep alias
grep ^alias ~/Inbox 
grep ^alias ~/Inbox/wwwalias 
grep bani | awk '{print $2}'
grep bani | awk '{print $9}'
grep di
grep eli 
grep elin
grep .mutt
grep 'vim' .
grep -w \.z
grep .z
grep \.z
grep.zsh
--
grep find 
grep find | sort -u
grep -h find 
grep --no-filename  find 
grep --no-messages find 
grep -o find | sort -u
grep -o find | sort -u  
grep -q find 
grep -q find | sort -u
--
grep | grep -h find 
--
grep
grep | grep find | sort -u
grep | grep -h find 
grep | grep -o find 
grep | grep -o find | sort -u
--
grep 
grep $1
grep bani | awk '{print $2}'
grep mad | awk '{print $2}'
grep w
grep sol
--
grep ip 
--
grep al
grep 'al'
grep al
grep ps
grep ps
--
grep افتتاح
--
grep S
grep S | cut -d' ' -f 5
grep S | cut -d' ' -f 6
--
grep diff
grep f
--
grep copy 
grep pa 
grep pas 
grep win 
--
grep w' 
grep w' 
--
grep_1 awk
grep_1 diff /home/bani/w/wWw_diff
grep_1 find 
grep_1 'sed '
grep_1 w
grep_1 w=
grep_logs a
grep_logs w
--
grep.txt
--
grep chm
--
grep" "grep -GRh \'^alias' ~ | sort -n | uniq >> /home/bani/Dropbox/wwalias"
--
grep\"^ .*\" | tr '\n' ' ' > ~/backed_up_package_list¨
grep\"^ \.*\" | tr '\n' ' ' > ~/backed_up_package_list¨
--
grep.txt
--
grep
GREP_OPTIONS='--color=auto'
GREP_COLOR='3;33'
--
grep '^'$(date +\%d) $HOME/zdotfiles/Time/$(date +\%m) | awk '{print " \n\n Fajer   
--
grep "^"$(date +\%d) $HOME/zdotfiles/Time/april_prayertime'
--
grep S | cut -d' ' -f 6
grep "Nmap scan report for" | grep S | cut -d" " -f 6 '
grep "Nmap scan report for"| cut -d' ' -f 5'
grep "Nmap scan report for"| cut -d' ' -f 6'
grep "Nmap scan report for" '
grep -vE '^(#|$)' file1) <(grep -vE '^(#|$)' file2)
grep "$1" ~/.zsh_history'
--
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep'
grep'
--
grep "^\."'
grep "^\." '
--
grep'
--
grep linux-image'
grep '^\.'"
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
--
grep -v "^#|^$"'
--
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
grep -o "inet addr
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
grep default|awk '{ print $8 }')|grep 'inet addr
--
grep "^0." | awk '{print "Gateway to the Word
grep inet | awk '{print $2}' | cut -d '
--
grep_logs(){
grep "$1" */logs/*.log
--
grep_1_2'='grep -GRh $1 ~ | sort | uniq -c | sort -nr >> $2 && tail  $2'
grep_1'='grep $1 ~/.zsh_history | sort | uniq -c | sort -nr'
grep'
grep'
--
grep $1 $HOME/.zsh_history | sed 's/^.*;//g'
--
grep -il "$1" {} \;
grep "
--
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
--
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
--
grep -v ' *#' filename | grep -v '^ *$'
--
grep -v '^$' file
grep '.' file
--
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep "inet addr" | head -n1 | sed 's|.*addr
grep "Network
--
grep -e 'Errors.0' /tmp/last_backup.txt`
--
grep -isl $1 *) &amp;
--
grep -isl "$1" *)
--
grep -l FOO *`
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -il'
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep'
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep 'inet addr
--
grep "Current IP Address"'
grep -vE "^$|^#"'
--
grep='ps aux | grep $(echo $1 | sed "s/^\(.\)/[\1]/g")'
--
grep $USER'
--
grep -o -e '[0-9]+' | head -n 1)'
--
grep ^d | head -1 | cut -b 51- )'
--
grep ^d | head -1 | cut -b 51- )'
grep ^d | head -1)'
grep '^ *[0-9]* *cd ' ~/.bash_history| tail -10 >>~/.bash_history && history -r ~/.bash_history"
--
grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep'
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep -v grep<span class="Statement">|</span>grep <span class="Constant">&quot;</span><span class="PreProc">$@</span><span class="Constant">&quot;'</span>
--
grep php<span class="Constant">'</span>
--
grep -P<span class="Constant">'</span>
--
grep=</span><span class="Constant">'</span>grep --color=auto<span class="Constant">'</span>
--
grep=</span><span class="Constant">'</span>grep --color=<span class="Statement">always</span><span class="Constant">'</span>
--
grep -sl&quot;</span>
grep -d <span class="Constant">'</span><span class="Constant">en1</span><span class="Constant">'</span> -t <span class="Constant">'</span><span class="Constant">^(GET|POST) </span><span class="Constant">'</span> <span class="Constant">'</span><span class="Constant">tcp and port 80</span><span class="Constant">''</span>
grep -d <span class="Constant">'</span><span class="Constant">en1</span><span class="Constant">'</span> -t <span class="Constant">'</span><span class="Constant">^(GET|POST) </span><span class="Constant">'</span> <span class="Constant">'</span><span class="Constant">tcp and port 80</span><span class="Constant">''</span>
--
grep<span class="Constant">'</span>
grep ^d<span class="Constant">'</span><span class="Constant"> #Only list directories</span>
grep ^d<span class="Constant">'</span><span class="Constant"> #Only list directories, including hidden ones</span>
--
grep -v -e <span class="Constant">&quot;</span><span class="Constant">^$</span><span class="Constant">&quot;</span> -e<span class="Constant">&quot;</span><span class="Constant">^ *#</span><span class="Constant">&quot;'</span>
--
grep <span class="Constant">&quot;</span><span class="Constant">
grep</span><span class="Constant">'</span>
--
grep -'
--
grep='grep --color=auto'
grep='fgrep --color=auto'
grep='egrep --color=auto'
--
Grep">grep</a> [pattern] [file]</code> - print lines matching a pattern. Examples
grep foo</code>
grep -e &quot;^(WW)&quot; -e &quot;^(EE)&quot; /var/log/Xorg.0.log</code> - prints all lines that contain warnings or errors
grep -c '[;{]' *.java</code> - quick &amp; dirty lines-of-code (LOC) counter (more like number-of-statements)</li>
--
grep -q searchstring {} \; -print</code>
--
grep 'Status'</code> - find out if package is installed or not</li>
--
grep /dev/sd</code> - print all mounted hard disk partitions
--
grep rendering</code> - check 3D acceleration.</li>
--
grep /home</code></li>
grep sda6</code></li>
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep and GNU awk). For your
--
grep sed | sort -u  
grep sed | sort -u | less
grep sed | sort -u | less
grep sed  
--
grep -RnisI tazjel
grep -RnisI tazjel | sed 's/^.*
--
greport12
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -il'
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep'
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -il'
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep'
--
grep'
--
grep -n'
--
grep='grep --include="*.py"'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep 'inet addr
--
grep "Current IP Address"'
grep -vE "^$|^#"'
--
grep='ps aux | grep $(echo $1 | sed "s/^\(.\)/[\1]/g")'
--
grep $USER'
--
grep -o -e '[0-9]+' | head -n 1)'
--
grep ^d | head -1 | cut -b 51- )'
--
grep ^d | head -1 | cut -b 51- )'
grep ^d | head -1)'
grep '^ *[0-9]* *cd ' ~/.bash_history| tail -10 >>~/.bash_history && history -r ~/.bash_history"
--
grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
--
grep -v -e "^$" -e"^ *#"'
--
grep'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep 'inet addr
--
grep "Current IP Address"'
grep -vE "^$|^#"'
--
grep='ps aux | grep $(echo $1 | sed "s/^\(.\)/[\1]/g")'
--
grep $USER'
--
grep -o -e '[0-9]+' | head -n 1)'
--
grep ^d | head -1 | cut -b 51- )'
--
grep ^d | head -1 | cut -b 51- )'
grep ^d | head -1)'
grep '^ *[0-9]* *cd ' ~/.bash_history| tail -10 >>~/.bash_history && history -r ~/.bash_history"
--
grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep $1'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep"
--
grep '
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep inet6'
--
grep --color=auto'
--
grep '
--
grep LISTEN'
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -P'
--
grep='grep --color=auto'
--
grep='grep --color=always'
--
grep -sl"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80''
--
grep'
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
grep'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
grep -v grep|grep "$@"'
--
grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
--
grep).
--
grep --color=always -sn ${case} "$1" 2>&- | more
--
grep
--
grep ^"$2" |sort -u ;
grep -o -e "--[^[
--
grep -E '^-?include' $makef |
--
grep "^$cur"' ; else gcmd=cat ; fi
--
grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
--
grep).
--
grep --color=always -sn ${case} "$1" 2>&- | more
--
grep
--
grep ^"$2" |sort -u ;
grep -o -e "--[^[
--
grep -E '^-?include' $makef |
--
grep "^$cur"' ; else gcmd=cat ; fi
--
grep "HCI Ver" | awk '{print$3}'`
--
grep sixad-bin > /dev/null
--
grep bluetoothd > /dev/null
--
GREP_COLOR="1;32" grep --color "[^ ]"
--
grepped one
grep [p]rocess-name
--
grep -oP '^[^|,]*')
--
grep "
--
grep '
--
grep -o '[[
--
grep ESTABLISHED | awk '{print $5}' | awk -F
--
grep -i -H "search pharse" {} \;
--
grep ^Dirty /proc/meminfo
--
grep in less
grep --color=always | less -R
--
grep -RnisI <pattern> *
--
grep "ca fe"
--
grep and save output to new file
grep . filename > newfilename
--
grep '^X-(F|B|L)' | cut -d \- -f 2
--
grep "|"|awk "{print \$3}"|sort|uniq -c|sort -nr
--
GREP a PDF file.
grep 'YourPattern'
--
grep -rl oldstring . |xargs sed -i -e 's/oldstring/newstring/'
--
grep address|egrep 'city|state|country'|awk '{print $3,$4,$5,$6,$7,$8}'|sed 's\ip address flag \\'|sed 's\My\\'
--
grep -v '[a-z]' | sort | uniq -c
--
grep -a -B 25 -A 100 'some string in the file' /dev/sda1 > results.txt
--
grep -Po '(?<=")http
--
grep . *
--
grep -Po '(?<=<li>)[^<]+'|nl|perl -MHTML
--
grep LISTEN
--
grep Path | awk -F= '{print $2}'`/formhistory.sqlite "select * from moz_formhistory" && cd - > /dev/null
--
grep -Fx -f file1 file2
--
grep -lir "some text" *
--
grep open
--
grep -i "listen"
--
grep -o "[[
--
grep ESTABLISHED |awk '{print $5}' | awk -F
--
grep 
--
grep "
--
grep -d , foo)
--
grep eth0 | tr -s ' ' | cut -d' ' -f "3 11"`; echo $NEW $OLD | awk '{printf("\rin
--
grep -v with multiple patterns.
grep 'test' somefile | grep -vE '(error|critical|warning)'
--
grep "eb 52 90 4e 54 46 53" | cut -c 1-8) image.vdi /mnt/vdi-ntfs
--
grep -v -e "\/$" | xargs svn blame | awk '{print $2}' | sort | uniq -c | sort -r
--
grep foo
--
grep -v "^$" | awk '{ print $1 }' | sort -nr | uniq -c
--
grep -rinE "$*" . ; }
--
grep "192.168.1.[0-9]* *ether"
--
grep -v "^$|^[[
--
grep Serial\ Number | head -n1
--
grep -v ^"No stack."$
--
grep 'from'; done
grep \<strong\> | sed "s;^.*<i>\(.*\)</i>.*$;\1;"
--
grep 'soundUrl' | head -n 1 | sed 's|.*soundUrl=\([^&]*\)&.*|\1|' | sed 's/%3A/
--
Grep by paragraph instead of by line.
grepp() { [ $# -eq 1 ] && perl -00ne "print if /$1/i" || perl -00ne "print if /$1/i" < "$2";}
--
grep deinstall | awk '{print $1}'`
--
grep ESTABLISHED"
--
grep '\?' |awk '{print $2}'| xargs svn add
--
grep Product
--
grep -v nothing | less
--
Grep for word in directory (recursive)
grep --color=auto -iRnH "$search_word" $directory
--
grep 'tcp\|udp' | awk '{print $5}' | sed s/
grep
--
grep processes list avoiding the grep itself
grep [a]pache2
--
grep "Time to live exceeded"
--
grep -Eo "<original>(.)*</original>" | grep -Eo "http
--
grep ii" | awk '{print $2}'`
--
grep -i "^[0-9a-f]{4,} .*$*" $(locate CharName.pm) | while read h d; do /usr/bin/printf "\U$(printf "%08x" 0x$h)\tU+%s\t%s\n" $h "$d"; done
--
grep -xvFf /tmp/listin; rm /tmp/listin
grep -u `id -u` firefox-bin || find ~/.mozilla/firefox -name '*.sqlite'|(while read -e f; do echo 'vacuum;'|sqlite3 "$f" ; done)
--
Grep colorized
grep -i --color=auto
--
grep '
--
Grep without having it show its own process in the results
grep "[s]ome_text"
--
grep $(echo "$l" | head -n1) | wc -l) ]; then tar xf $1; else mkdir ${1%.tar.gz} && tar xf $1 -C ${1%.tar.gz}; fi ;}
--
grep -Eio '([[
--
grep -o '.'
--
grepped one
grep command_name
--
grep -o "http\S*.com/dl/\?f=\w*"`;do aria2c "${u}";done;done;done
--
grep tab chars
grep "^V<TAB>" your_file
--
grep "00
--
grep -l -m1 "$S" FF|xargs -P5 -iFF sed -i -e "s%${S}%${R}%g" FF'
--
grep certain file types recursively
grep -r --include="*.[ch]" pattern .
--
grep '^ssh ' .bash_history | sort -u | sed 's/^ssh //'))" ssh
--
grep -or string path/ | wc -l
--
grep -E "WARNING|ERROR"
--
grep RX\ bytes|awk '{ print $2 }'|cut -d 
--
grep tab (\t)
grep $'\t' sample.txt
--
grep "Invalid user" | awk '{print $8;}' | sort | uniq -c | less
--
grep FlashXX|awk '{ print "/proc/" $2 "/fd/" substr($4, 1, length($4)-1) }'|while read f;do newname=$(exiftool -FileModifyDate -FileType -t -d %Y%m%d%H%M%S $f|cut -f2|tr '\n' '.'|sed 's/\.$//');echo "$f -> $newname";cp $f ~/Vids/$newname;done
--
grep 00
--
grep "^ |" | cut -c11-60 | sed -e 's/ //g' | xxd -r -p
--
grep
grep -r --exclude-dir=.svn PATTERN PATH
--
grep -Fxv -f file1 file2
--
Grep Recursively Through Single File Extension
grep --include=*.py -lir "delete" .
--
grep ' ; alias addpi='echo "cd `pwd`" >> ~/.pi'
--
grep Server
--
grep -h -m1 -B1 $i *; done)|grep -v '^--' > clf.sh;rm -r $QQ
--
grep -Eo "^.+\.
--
grep from your grepped output of ps (alias included in description)
grep [h]ttpd
--
grep "^\?" | awk "{print \$2}" | xargs svn add $1
--
grep '^ii  linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`)
--
grep -o "http
grep 'dimensions
--
grep -Eo ',"votes"
--
grep -hIr 
--
grep Z | grep -v PID | awk '{print $2}'`
--
grep sshd | grep Failed | sed 's/invalid//' | sed 's/user//' | awk '{print $11}' | sort | uniq -c | sort -n
--
grep colorize its output
grep=\'grep --color=auto\' >> ~/.bashrc ; . ~/.bashrc
--
grep width
--
grep "title>"|sed -e '/^\// d' -e 's/title>/---------- /g' -e '1,3d'|tr '\n' ' ')";for i in $(eval echo {0..${#n}});do echo -ne "\e[s\e[0;0H${n
--
grep <searchTerm>
--
Grep Options
GREP_OPTIONS='-D skip --binary-files=without-match --ignore-case'
--
grep foo.txt
--
grep dev | xargs tune2fs -l | grep create
grep "Failed password" /var/log/auth.log* | awk '{print $9}' | sort | uniq -c | sort -nr | less
--
grep -v nothing; done | more
--
grep \<strong\>|sed "s;^.*<i>\(.*\)</i>.*$;\1;"|cowsay -f tux
--
grep . filename
--
grep -Eo '<li>[^<]+'|sed 's/^<li>//g'|nl|/usr/bin/perl -MHTML
--
grep ESTABLISHED | awk '\''{print $5}'\'' | awk -F
--
grep "\^" | tr -d ' ')
--
grep -e `date +%Y-%m-%d` /var/log/dpkg.log | awk '/install / {print $4}' | uniq | xargs apt-get -y remove
--
grep -i stab | awk -F/ '{print $2}' | sort | uniq
--
grep --line-buffered "StreamTitle='.*S" -o | grep --line-buffered "'.*'" -o > mus & tail -n0 -f mus | while read line; do notify-send "Music Change" "$line";done
--
grep
--
grep & wc) without using temporary files
grep xxx |wc >xxx.count) >(grep yyy |wc >yyy.count) |grep zzz |wc >zzz.count
--
grep 'created'
--
grep -c httpd
--
grep '^r[0-9]' |cut -d\| -f2|sort|uniq -c
--
grep "^Proto|
--
grep -oe 'http
--
Grep syslog today last hour
grep -i "$(date +%b\ %d\ %H)" syslog
--
Grep log between range of minutes
grep -i "$(date +%b" "%d )13
--
grep - ipranges.txt | while read line; do ipcalc $line ; done  | grep -v deag
grep -A7 -B7 --color=auto $(date +%d)
--
grep thorugh directory for string in file.
grep -r -i "phrase" directory/
--
grep "ca fe"
--
grep "Info
grep -o '\b[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\b' access.log | sort -u
--
grep "start=" | head -n $PARTITION | tail -n1 | sed 's/.*start=[ ]*//' | sed 's/,.*//'` * 512 ]
--
grep [h]ttpd | awk '{ TOTAL += $1 } END { print TOTAL }'`; PROC_PCT=`echo "scale=4; ( $PROC_RSS/$TOTAL_RAM ) * 100" | bc`; echo "RAM Used by HTTP
--
grep -v "
--
grep Mod
--
grepped one
grep c\\ommand
--
grep foo
grep "230">/dev/null;[ "$?" -eq "0" ]&& echo "pass
grep -2 -iIr "err\|warn\|fail\|crit" /var/log/*
--
grep '<img [^>]*/><br/>' | sed -r 's|<img src="(.*)" title="(.*)" alt="(.*)" /><br/>|\1\t\2\t\3|' > /tmp/a; curl -s $(cat /tmp/a | cut -f1) | convert - -gravity south -draw "text 0,0 \"$(cat /tmp/a | cut -f2)\"" pdf
--
grep -Po '(?<=")http
grep 'DEL.*lib' | cut -f 1 -d ' ' | sort -u; }
--
grep '/'|grep -B1 `basename $PWD`|head -n 1)"
grep match
--
grep httpd | awk '{print $2}'`; do lsof -n -p $i | grep ESTABLISHED; done;
--
grep [d]efunct"
--
grep -E "Link|Speed" ; done
--
grep -i prod
--
grep
grep "$@"; fi; }
--
grep -io $w temp.txt; fi; done
--
grep ssh
--
grep -l XXX {} \;|tee /tmp/fileschanged|xargs perl -pi.bak -e 's/XXX/YYY/g'
grep --color '\\.'
--
grep --color 'pattern|$'
--
grep ".mozilla" | sort -rn
--
GREP_COLOR="1;32" grep --color "[^ ]"
--
grep ^[0-9]|awk 'BEGIN {print "Seconds, PID, State, IP, Domain, TYPE, URL\n--"} $4 !~ /[GCRK_.]/ {print $6, $2, $4, $11, $12, $13 " " $14|"sort -n"}'
--
grep "Bender|Fry" | sed "s/X-//"
--
grep dd)
--
grep -Eq '.*'||echo -e "OK");}
--
grep ID_LENGTH  | sed 's/.*=\([0-9]*\)/\1/' | xargs echo | sed 's/ /+/g' | bc | awk 'S=$1; {printf "%dh
--
grep '^http'|head -n1)|grep "Level(3) \#2"|perl -wpi -e 's/^.*(http
--
grep '^r[0-9]' |cut -d\| -f2|sort|uniq -c
--
grep ^Location; }
--
grep -F "\C"
--
grep o) >(grep f)
--
grep cc1
--
grep php.ini
--
grep -oE "<p class=\"quote\">.*</p>.*</p>"|grep -oE "<p class=\"qt.*?</p>"|sed -e 's/<\/p>/\n/g' -e 's/<p class=\"qt\">//g' -e 's/<p class=\"qt\">//g'|perl -ne 'use HTML
--
grep 'dimensions
--
grep binary (hexadecimal) patterns
grep -P "\x05\x00\xc0" mybinaryfile
--
grep the latest file in a directory of timestamped files
--
grep 'https?
--
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
--
grep --color=always -i'
--
grep "$N" | awk '{print $2}')/fd ; ls -l $P | sed -rn "/$N/s/.*([0-9]+) ->.*/\1/p" | xargs -I_ cat $P/_ > "$N"
--
grep ESTABLISHED
--
grep foo | sed 's|^|-p |g')
--
grep "grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}'"
--
grep -ci ^[aoeuidhtns-]+$ /usr/share/dict/words
--
grep -Po 'nd"
--
grep 'defunct' | grep -v 'grep' | grep -v 'watch'"
--
grep -E "\.log$" | awk '{print $NF}'
--
grep -e '^M' | awk '{print $2}' | xargs svn revert
--
grep -lr -e '<oldword>' * | xargs sed -i 's/<oldword>/<newword>/g'
--
grep -o -E '([[
--
grep 'return au' | sed -r "s|.*return au\('([^']*)', '([^'])[^']*'\).*|http
--
grep '^[0-9,]*[MG]' | sort -rn
--
grep -ri "i can haz|pwn|l33t|w00|zomg" * | cut -d'/' -f 3 | sort | uniq | xargs -I {} echo "Note to self
--
grepping the resulting list
--
grep "Query time" | cut -f 4 -d " "`; done && echo "scale=3;($x/${queries})" | bc
--
grep ^127 >> /etc/hosts
grep "NO_PUBKEY" /tmp/keymissing |sed "s/.*NO_PUBKEY //"); do echo -e "\nProcessing key
--
grep httpd | grep -v grep | grep -v defunct | awk '{sum=sum+$6}; END {print sum/1024}'
--
grep pcm
--
grep/ {next} /ssh -N -R 4444/ {i++} END {print i}') ]] || nohup ssh -N -R 4444
--
grep /path/to/drive"
--
grep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' file.txt
--
grep [a]pache2 | nl
--
grep
grep -e "total\|
--
grep '^[^#]' some_file
--
grep unreachable | cut -f1 -d' '
--
grep and show x# of lines above and below
grep -C <# of lines to show above and below> <text>
--
grep --color=auto 'usb|' /var/log/messages
--
grep --line-buffered '1' > one.txt) |tee >(grep --line-buffered '2' > two.txt)
--
grep -i "current speed"
--
grep -rl $'\xEF\xBB\xBF'
--
grep "ipinfo.html"|awk -F"ip=" {'print $2'}|awk -F"\"" {'print $1'}|xargs -n1 sudo iptables -A OUTPUT -j DROP -d > 2&>1
--
grep 'text' | cut -d' ' -f1 | sed -e's/
--
grep "PID|process_to_look_at"
--
grep image_link | sed -e 's/<image_link>/[IMG]/g' -e 's/<\/image_link>/[\/IMG]/g'; done; }
--
grep -r . /sys/class/net/eth0/statistics
grep call"
--
grep -i estab
GREP_COLOR='1;32'; cat /dev/urandom | hexdump -C | grep --color=auto "ca fe"
grep -Eo 'http
--
grep "install " /var/log/dpkg.log | awk '{print $4}' | xargs apt-get -y remove --purge
--
grep '^MemFree
--
grep "^STAT|^D|^R"
--
grep -Eo "watch\?v=[^[
--
grep -v "0     0"'
--
grep "http
--
grep "processor" /proc/cpuinfo | wc -l
--
grep "\(Image
--
grep MHz; cat /proc/acpi/processor/*/throttling"
--
grep util | tail -1); wget $mirror/$latest
--
grep test *)
--
grep -v "nothing appropriate"
--
grep 'geometry' | awk '{print $2;}') -r 10 -i 
--
grep -r -Z -l "<text>" . | xargs -0 echo rm
--
grep -Eio '([[
--
grep "Terminal - All commands" |perl -pe 's/.+(\d+),(\d+).+/$1$2/'|head -n1)`; do curl "http
--
grep DocumentRoot $3}; $root =~ s/^\s+//; print "\t$root\n" };'
--
grep apache access.log and list IP's by hits and date - sorted
grep Mar/2009 /var/log/apache2/access.log |  awk '{ print $1 }' | sort -n | uniq -c | sort -rn | head
--
grep LISTEN
--
grep mp3$  | xargs`
--
grep -Eo "\.[^/]+$" | sort | uniq
--
grep -c ^processor /proc/cpuinfo)" | bc) -eq 1 ]; do sleep 10; done; my-command > output.txt ) & )
--
grep '}
--
grep /somemount/| awk '{print $2}'|xargs kill
--
grep GMT | awk '{print $3}'
--
grep " lm " &> /dev/null; then echo "Got 64bit" ; fi
--
grepped one
--
grep -Eo '[0-9\.]+'
--
grep -i establ | awk -F/ '{print $2}' | sort | uniq
--
grep '('
--
grep -i mpeg | awk '{print $1}' | sed s/.$//; done
--
grep "   [RAMD] \/" | sed s/^.....//
--
grep -v '^#' | grep -v '^$' | less
--
grep "Thu 05 Mar"
--
grep -Ff- <(wget -qqO- http
grep ID_LENGTH | awk -F "=" '{sum += $2} END {print sum/60/60; print "hours"}'
--
grep -o --color "\w\+
--
grep -PL "\t" -r . |  grep -v ".svn" | xargs sed -i 's/\t/    /g'
--
grep kind=\"file\"|wc -l
--
grep -v ELAPSED | sed 's/\s*//g' | sed "s/\(.*\)-\(.*\)
--
grep 
--
grep /media/cdrom
--
grep '\.sw.' -A 5 | grep 'still running' -B 5
--
grep .flv$ | sed 's/[[
--
grep -v "i A" | cut -d " " -f 4
--
grep 
grep "0xffffffff" | awk '{ print $2 }' | xargs -n 1 ifconfig em0 delete
grep -v with multiple patterns.
--
grep M|sort -n
--
grep [f]elix.jar | egrep -o -e '^ *[0-9]+'`
--
grep -vE "^root " | kill `awk '{print $7}'`
--
grep -Eo '[0-9\.]+'
--
grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"
--
grep Mem
--
grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2'
--
grep (or anything else) many files with multiprocessor power
grep -i foobar
--
grep "$1" /var/log/asterisk/cdr-csv/Master.csv | cut -d',' -f 2,3,11,12 --output-delimiter=" " | sed 's/"//g' | cut -d' ' -f 1,2,3,4,6 | column -t; }
grep 
--
grep "<link>|<title>" recenttracks.rss | awk 'ORS=NR%2?" "
--
grep -v .jpg |xargs rm
--
grep -v [89]`; do    chmod $N /tmp/$$;    P=`ls -l /tmp/$$ | awk '{print $1}'`; echo $N $P; done;rm /tmp/$$
--
grep -o "url='$y/watch?v=[^']*'");do d=$(echo $i|sed "s|url\='$y/watch?v=\(.*\)&.*'|\1|");wget -O $d.flv "$y/get_video.php?video_id=$d&t=$(curl -s "$y/watch?v=$d"|sed -n 's/.* "t"
--
grep -rl oldstring . | parallel sed -i -e 's/oldstring/newstring/'
--
grep \*
grep "inet addr" | sed 's/.*inet addr
--
grep Ether | awk '{ VAR=$1; split(VAR,ARR,"."); count[ARR[1]]++; LINE=$0; split(LINE,LINEARR,"
grep -c -e '^cpu[0-9]\+' /proc/stat
--
grep -d, COMMAND)}/cwd
--
grep Set-Cookie;done
--
grep ^d
--
grep -o 'http\
--
grep -o -E '([[
--
grep -o 'http\
--
grep -i "version
--
grep . | wc -l
--
grep linux-image
--
grep { /\d+/ } split /[^\d\-\.]+/; print "$sum\n"'
--
grep -E "Invalid user|PAM" | grep -o -E "from .+" | awk '{print $2}' | sort | uniq >> /etc/hosts.deny
--
grep $USERNAME | awk {'print $2'} | xargs kill [-9]
--
grep '<title>' | sed -e 's/<[^>]*>//g'
--
grep -Eo "<original>(.)*</original>" | grep -Eo "http
--
grep for tabs without using Ctrl-V trick
grep -P '\t' filename
--
grep Expiration ; done | sed 's
--
grep -r '^[0-9]' | sed -r 's/^([0-9]+).*/\1/' | sort -R | head | xargs -L 1 xmms2 addid
--
grep "model name" /proc/cpuinfo
grep Pages | sed -e "s/Pages
--
grep '/'|grep -A1 `basename $PWD`|tail -n 1)"
--
grep -e "\(HTTP\|Location\)"'
--
grep -ci "tcp.*established"
--
grep iPhone | cut -d ' ' -f 4 | sed 's/
--
grep sbin/apache | awk '{print"-p " $2}' | xargs strace
grep ^DROP | mysql -u $USER --password=$PASSWORD "$DATABASE"
--
grep certain file types recursively
grep "TODO"
--
grep Mem`; sleep 60; } done &
--
grep -d ' -p ' foo)
--
grep pts | gawk '{ split($1, x, "."); print x[1] }' | while read i; do gnome-terminal -e screen\ -dx\ $i; done
--
grep "Running
--
grep -v "\["`;)" ssh
--
grep -ioE "(url\(|src=)['\"]?[^)'\"]*" a.html | grep -ioE "[^\"'(]*.(jpg|png|gif)" | while read l ; do sed -i "s>$l>data
grep 'Size' | awk '{ print $4$5; }') <(pacman -Q | awk '{print $1; }') | sort -n | column -t
--
grep ^[^#] /etc/file.conf
--
grep "Foo.class"; done
--
grep -i -A 1 charac
--
grep -ao '^[[
--
GREPable
--
grep -Go 'entries
--
grep Word docs
grep -C4 search_term;
--
grep astronomy| awk -F\" '{print $2 "\n" $4;}'
grep vm.swappiness
--
grep
grep -Hrli 'foo' * | xargs vim
grep -c [c]at
grep -m1 -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
--
grep SYN_ | awk '{print $5;}' | cut -d
--
grep -c 'text/plain'
grep -Pom1 'image/\d+/.*\.\w+');}
grep 
--
grep -i '\.m4a$|\.mp3$') <(cd /path-2; find . f -print | egrep -i '\.m4a$|\.mp3$')
--
grep ESTABLISHED | grep -c -v ^#
grep -u username`; if [ $process ]; then x=0; fi;  done; strace -vvtf -s 256  -p $process
--
grep -ie "<*HREF=(.*?)>" index.html | cut -d "\"" -f 2 | grep 
grep -i listen | awk '{print $1,$2,$7,$8,$9}'
--
grep -i 'listen' | awk '{print \$3, \$1, \$9}' | sed 's/ [a-z0-9\.\*]*
--
grep ESTA|awk '{print $5}'|cut -d
--
grep for.
--
grep '^rc\b' | awk '{ print $2 }' | xargs sudo dpkg -P
--
grep "?" | awk '{print $2}'); do svn add $i; done;
--
grep dd)
--
grep "^ABC"  | tr "~" "\n"
grep 'Bender|Fry'|sed 's/X-//'
--
grep -n ""  | sed 's,.*,0000&,' | sed 's,0*\(...\)
--
grep across a git repo and open matching files in gedit
grep -l "your grep string" | xargs gedit
--
grep -o '\..\+$' | sort | uniq -c | sort -rn
--
grep Playing
--
grep inet | cut -d
--
grep testing | awk '{print $2}' | xargs rm -r
--
grep httpd | wc -l"
--
grep -o -e "http
--
grep --color "SearchTerm"
--
grep  -Eo  \([0-9]\{1,3\}[\.]\)\{3\}[0-9] file | sort | uniq
--
grep ip | sed 's/ip//'| sort | uniq
--
grep using sed and specifying open/close tags
--
grep ^l
--
grep 'inet addr' | cut -d '
--
grep -v with multiple patterns.
grep test somefile | grep -v -e error -e critical -e warning
--
grep \|) <(TZ=UTC svn log -q $URL | grep \| | sort -k3 -t \|)
--
grep "inet " | cut -d '
--
grep -o 'No match for')" ];  then echo -ne "Not "; fi; echo "Available for register"; done
--
grep -q "$b" <<<$a; then echo "'$b' was found in '$a'"; fi
grep
--
grep [0-9]) ]; then echo "NON NUMERIC"; fi
--
grep -v with multiple patterns.
--
grep -o "googleplayer.swf?videoUrl\\\x3d\(.\+\)\\\x26thumbnailUrl\\\x3dhttp" | grep -o "http.\+" | sed -e's/%\([0-9A-F][0-9A-F]\)/\\\\\x\1/g' | xargs echo -e | sed 's/.\{22\}$//g' | xargs wget -O OUPUT_FILE
--
grep
grep
--
grep .
--
grep 'geometry' | awk '{print $2;}') -i 
grep thorugh directory for string in file.
grep -rni string dir
--
grep
grep="find . \( ! -name .svn -o -prune \) -type f -print0 | xargs -0 grep"
--
grep -ZB1 ' 0$'
--
grep -o '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | sort | uniq)
--
grep -v "^\($\|#\)" <filenames>
--
grep . | wc -l
--
grep <pattern> -R . --exclude-dir='.svn'
--
grep -e "9.%" -e "100%"
--
grep with pretty colors... requires ruby and gems (run
--
grep 'M|G'
grep "findtext"
--
grep -P '^(\+|\-)' | sed 's/\s/\n/g' | grep -Pv '^ ?$'
--
grep http|grep -v grep | grep -v watch|wc -l && netstat -ntup|grep 
--
grep -v "(" | sort -k 4 | gawk '$NF==prv{ct++;next} {printf("%d %s\n",ct,$0);ct=1;prv=$NF}' | uniq | sort -nr
grep 'Connected to' > /dev/null; then echo -en "\n\nport $port/tcp is open\n\n";fi;done | grep open
--
grep \* | cut -d' ' -f4
--
grep "Location" | sed "s/Location
--
grep lines containing two consecutive hyphens
grep -- -- file
--
grep -iA2 '<title>' | grep '-') | sed 's/^- //'
--
grep -i "File<a href" | awk -F '<a href="' '{print $4}' | awk -F '" ' '{print $1}' | xargs wget }
grep kind=\"file\"|wc -l
--
grep ssh | grep -v grep | awk {'print $2'}` ; do kill $i; done
--
grep -v Tables_in | grep -v "+" | gawk '{print "optimize table " $1 ";"}' | mysql -u uname dbname
--
grep "^\?" | awk '{print $2}' | xargs svn add
--
grep "$@") ); [[ ${x[@]} ]] || return 1; strace -vf ${x[@]/#/-p }; }
--
grep -v \.gz | xargs gzip
--
grep $1
--
grep 
--
grep url | awk -F"," '{ print $1 }'| sed -e "s/url
--
grep -A1 "language=0.*FullName" | tail -1 | rev | cut -f1 | rev); g=${g##+( )}; mv -i "$f" "$g".ttf; done
--
grep -oe 'http
grep '^r[0-9]' | cut -f2 -d "|" | sort | uniq -c | sort -nr
--
grep inet\ addr | awk '{print $2}' | cut -d
--
grep .
--
grep -i '
--
grep -h -o '<[^/!?][^ >]*' * | sort -u | cut -c2-
--
grep (or anything else) many files with multiprocessor power
grep -i foobar
--
grep Depends | cut -d
--
grep -i "200 OK" 2>/dev/null >/dev/null;[ $? -eq "0" ] && echo "Found ${i}" && break;echo "$i";sleep 1;done
--
grep `route -n | awk '/^0.0.0.0/ {print $2}'`| awk '{print $3}')
--
grep '^r[0-9]+' | cut -d "|" -f2 | sort | uniq -c
--
grep -Po '"\K/dyn/str_strip(/0+){4}/.*strip.[^\.]*\.gif')
--
grep -oP "^\w+\(\)\ *{.*}"
--
grep -oE '[0-9]*$'; seq 32768 61000) | sort -n | uniq -u | head -n 1
--
grep 'id="user_' | grep -o '[0-9]*'
--
grep "^IP.*$1" | html2text; }
--
grep -Fvf file1 file2 > file-new
--
grep -Ri searchterm  ~/.purple/logs/*  | sed -e 's/<.*?>//g'
--
GREP_COLOR="1;32" grep --color "[^ ]")
--
grep "Maximum Capacity"; dmidecode -t 17 | grep Size
--
grep "^\?" | awk "{print \$2}" | xargs rm -rf
grep 'http'
--
grep "[0-9A-Fa-f]\{16\}" | wc -l` == 1 ]; then echo "$libquery is a 64 bit library"; else echo "$libquery is a 32 bit library"; fi;
--
grep -n "^" <filename>
grep '[0-9a-f]
--
grep deleted | awk '{print $3}' | xargs git rm
--
grep '!' | sed 's/!/ /' | xargs svn del --force
--
grep -e "address" -e "coordinates" | sed -e 's/^ *//' -e 's/"//g' -e 's/address/Full Address/';}
--
grep debtiv.gif | sed -e 's/.*ALT=\"//' -e 's/\".*//' -e 's/ //g'"
--
grep Auth | sed 's/Auth=\(.*\)/\1/'
--
grep '*$'
--
grep /presentation/[0-9]*/ | cut -d"\"" -f2 ); do f=$(curl -s $b$p | grep "/static/slides/" | cut -d"\"" -f4); if [ -n "$f" ]; then echo $b$f; curl -O $b$f; fi done
--
grep certain file types recursively
grep "TODO" {} +
grep ID_LENGTH | cut -d= -f2)" ""$i" ;done | sort -k1 -r -n | sed 's/^\([^\ ]*\)\ \(.*\)$/\2
--
grep current_state= /var/log/nagios/status.dat|sort|uniq -c|sed -e "s/[\t ]*\([0-9]*\).*current_state=\([0-9]*\)/\2
grep --color=auto -E "( |^)$(date +%e)|$"'
--
grep -ao -HP "http
--
grep of all c++ source under the current directory
grep -H "string"
--
grep -i http
--
grep 'ServerAlias|ServerName' | tr -s ' ' | sed 's/^\s//' | cut -d ' ' -f 2 | sed 's/www.//' | sort | uniq
--
grep "^COMMAND|deleted"
--
grep Revision | cut -f 2 -d ' '` && t=`date +%F_%T` && f=${t}rev${r} && svn diff>.undo/$f && svn stat>.undo/stat_$f; else echo Missing .undo directory; fi }
--
grep ^/path/to/element | cut -f2- -d=
--
grep -B 4 "open"
--
grep --color -i "unix"
grep -w 80 | awk '{print $7}' | cut -d/ -f1
--
grep -i locally
--
grep -E 'delete
--
grep -q "o newer" || printf "Sites web page appears to have updated.\n\nSuggest you check it out.\n\n"|mail -s "Sites page updated." david@email.com
--
grep " " | awk '{printf("mv \"%s\" ",$0); gsub(/ /,"_",$0); printf("%s\n",$0)}' | sh # rename filenames
grep -o '"[^"]*"';}
--
Grep for regular expression globally, list files and positions.
grep -Hirn "declareObject.*Common_Down" {} \;
--
grep "^([A-Z]|   [A-Z])"
grep -Rl <what to find> /<dir>/*`
--
grep Auth | sed 's/Auth=\(.*\)/\1/')" http
--
grep -E "(3r|4w).*REG"
--
grep 'Window id' | awk '{print $4}'`
--
grep price | sed "s/.*<p id='price'><strong>&euro; \([0-9]*[,.][0-9]*\).*/\1/g"; done
--
grep -v "\ *#\|^$" /etc/path/to.config
--
grep -il searchphrase
--
grep -rHi searchphrase *.php
--
grep '^\s\+\[' | wc -l
--
grep '^file|^desc|^dep' | sed -e'/^dep/s/$/\n/g'
--
grep bytes'
--
grep -m1 -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
grep -i <pattern>
--
grep -c ^processor /proc/cpuinfo
--
grep -r <pattern> * .[!.]*
--
grep -e "^r[0-9]\{1,\}$"|awk {'sub(/^r/,"",$1);print "svn cat fileName@"$1" > /tmp/fileName.r"$1'}|sh
--
grep http
grep -h "" `ls -tr access.log*`
grep ^rc | awk '{print $2}' | xargs dpkg -P
--
grep Load_Cycle_Count ; sudo smartctl -a /dev/sda | grep Temp'
--
grep Date
--
grep() { string=$1; file=$2; awk -v String=${string} '$0 ~ String' ${file}; }
grep -q 'STRING' {} \; -print
grep "3PARdata,VV"|awk '{print $1}') ; do parted -a optimal /dev/mapper/$i --script -- mklabel gpt mkpart primary 1 -1 set 1 lvm on ; done
--
grep '^[1234]' | sed 's/
GREP_COLOR='1;32';while [ true ]; do head -n 100 /dev/urandom; sleep .1; done | hexdump -C | grep --color=auto "ca fe"
--
grep 's="1"' | sed 's/^.*;\([^\t]*\).*$/\1/'; }
--
grep "_raid|_resync|jbd2"`)
--
grep xx.xx.xx.xx
--
grep '("Fin.*and"|<div class="command">.*</div>)'|sed 's/<[^<]*>//g'|ruby -rubygems -pe 'require "cgi"; $_=sprintf("\n\n%-100s\n\t#%-20s",CGI.unescapeHTML($_).chomp.strip, gets.lstrip) if $.%2'
--
grep CONFIG $(which mysqlbug)
--
grep Power_On_Hours
--
grep -i 'MAIL FROM\|RCPT TO'
--
grep -o "(" | wc -l); COUNT_CLOSING=$(echo $1 | grep -o ")" | wc -l); echo Opening
--
grep -i $@ | awk '{print $1}'; }
--
grep '
--
grep and save output to new file
grep -v "^$" filename > newfilename
--
grep your-string
--
grep wget || sudo shutdown -P now; do sleep 1m; done
grep "Nmap scan report for"| cut -d' ' -f 5  > ips.txt
--
grep '^inetnum
--
grep -oE "ssid=\".*\"" /etc/wpa_supplicant.conf | cut -c6- | sed s/\"//g | zenity --list --title="Choose Access Point" --column="SSID"
--
grep "POST /scripts/blog-post.php" | grep -v 192.168. | awk '{print $1}' | xargs -I{}  iptables -I DDOS -s {} -j DROP
--
grep -cu ioggstream
grep -m1 PROCESS | awk '{print $1}'
--
grep default | awk '{print $3}'
grep $WIRELESSINTERFACE | awk '{print $3}' | tr -d "."); done
--
grep -A 5 -e podcast-feed rhythmdb.xml | grep -e "<location>" | sed 's
--
Grep recursively for a pattern and open all files that match, in order, in Vim, landing on 1st match
grep -lr "$X" *`
--
grep '<title>'|sed -n '2s/ *<\/\?title>//gp'
--
grep "Cookie" | sed "s/^  Set-//g" > cookie.txt;  wget --auth-no-challenge --server-response --http-user="user" --http-password="pw" --header="$(cat cookie.txt)" -O- $url
--
grep -R usepackage * | cut -d']' -f2 | cut -s -d'{' -f 2 | sed s/"}"/.sty"}"/g | cut -d'}' -f1 | sort | uniq | xargs dpkg -S | cut -d'
--
grep 
--
grep http
grep wget`" ]; do sleep 2 ;done; [ -e "/tmp/nosleep"] || echo  mem >/sys/power/state
--
grep "libwrap" &>/dev/null && return 0 || return 1; }
--
grep -v "<"|sort|uniq -c|grep -v " +[0-9] "
--
grep { -f -B } <*>'
--
grep -rlZ oldstring . | xargs -0 sed -i -e 's/oldstring/newstring/'
--
grep -v "^[0-9]$"
grep -ioEm1 "<title[^>]*>[^<]*</title" | cut -f2 -d\> | cut -f1 -d\<
--
grep " dd " |grep -v grep |awk '{print $2}' |while read pid; do kill -USR1 $pid; done
--
grep string|cut -f2 -d%|cut -c2-100`; do umount -l -f $i;done
grep -v "^#" |xargs -i cp {} target
--
grep -v root|awk {'print $6'}|kill  `awk {'print $0'}`
--
grep enclosure | tr '\r' '\n' | tr \' \" | sed -n 's/.*url="\([^"]*\)".*/\1/p'|head -n1; done <netcast.txt)
--
grep "^/usr/bin/X "); while [ x"$1" != x"-auth" ]; do shift; done; sudo x11vnc -display 
--
grep -v "eviljaymz\|\-" | sort | uniq -c | awk -F\  '{ if($1>500) print $1,$2;}' | sort -n
--
grep -i SERVER_CONFIG_FILE | cut -f2 -d'"' | xargs grep -i '^DocumentRoot' | cut -f2 -d'"'
grep <cmd>) && <new_cmd> && kill $c
--
grep -v Type | awk '{ print $2 }') ; echo "${FSTYPE}"
--
grep "*.exe|*exe]" | awk '{ print $1 }' | xargs kill
--
grep -v "^$"
--
grep -oe 'http
--
grep -n pattern1 | grep pattern2
--
grep -v "^$|^#" file
--
grep -iregex '.*?\.(ogg|mp3)' | sort > ~/mylist.m3u
--
grep exec | grep end_log_pos | cut -d' ' -f2- | cut -d
--
grep -v 'Connected to' >/dev/null; then echo -en "FTP $host KO\n"; fi done
grep mp3$ | sed 's/^.* //' | xargs mplayer }
--
grep using sed and specifying open/close tags
--
grep \=
--
grep for string and format output for vi(m)
grep --exclude=cscope* --color=always -rni $1 . |perl -pi -e 's/
--
grep mp3| sed s/[^\/]*//`; cp "$FILEPATH" "$1"; }
--
grep -l "$(echo "\r")" {} \;
--
grep 'w.+REG' | awk '{print $9}' | sort | uniq
grep by default
grep 'gnu grep -i --color=auto'
grep "Latest Forum Build"|cut -d"\"" -f2) && wget $(cat topic.php*|grep "Linux x86
--
grep "Exception\|LGPL\|CODE1"
--
grep -v "0.0"
--
grep -cH "// | /\*" {} \; | awk -F'
--
grep differ | awk '{ print "vimdiff " $2 " " $4 }'
--
grep -v -u root);do kill -9 $i;done
--
grepping the resulting list
--
grep -RL "$*" * }
--
grep $@ | kill -SIGSTOP `awk '{print $1}'`; }
--
grep ' pthread_create$'
--
grep . | awk '{print $2}' | grep -E -v '^\.$'`
--
grep '^URL
--
grep "data\" 
--
grep ESTABLISHED
--
grep -s '.' * | awk -F"
--
grep [f]oo | awk '{print $2}' | xargs kill -9
--
grep -i '$1' | head -n 1 | tail -n 1 | sed -re 's@.+\[(.+)/.+\] (.+)@\1@'`; }
--
grep -P -o "(?<=File
--
grep GPTE_
--
grep -v "^#" file.txt | more
--
grep '^?' | awk '{ print $2; }' | xargs svn add
--
grep -E '(psw|password)'
grep 8321
--
grep for "criteria"
grep "criteria"
grep cifs /etc/fstab | grep -v ^# |awk ' { print $2 } ') 1>/dev/null
--
grep "\.js"
--
grep thorugh directory for string in file.
grep -ni phrase {} +
--
grep -q '\<lm\>' /proc/cpuinfo && echo 64 bits || echo 32 bits
--
grep '^<span class="dct-tt">.*</span>$' | sed 's!<span class="dct-tt">\(.*\)</span>!\1, !'); }
--
grep -A5 "^ *\-$2"; }
--
grep HWaddr | awk '{print $1,$5}'
--
grep -vE "^root " | kill `awk '{print $6}'`
--
grep " lm " > /dev/null && echo 64 bits || echo 32 bits
--
grep fetch | sed 's/\(.*github.com\)[
--
grep <something> logfile | cut -c2-18 | uniq -c
--
grep '<description>' |cut -d '>' -f 2 |cut -d '<' -f 1 > .twitt.tmp && for word in $WRDS;do grep --color=auto -i $word .twtt.tmp;done;sleep 300;done
grep addr
--
grep -o  "mms.*wmv" | uniq)
--
grep -Eo 'src [0-9.]+'|grep -Eo '[0-9.]+'
--
grep -v "(^List|^Name|\-\-\-\-\-|^\()"`; do pg_dump -C $x | gzip > /backups/$x-back.gz
grep -v "(^List|^Name|\-\-\-\-\-|^\()"`; do pg_dump -C $x | gzip > /var/lib/pgsql/backups/$x-nightly.dmp.gz; done
--
Grep auth log and print ip of attackers
grep 'Failed password for invalid' /var/log/secure | awk '{print $13}' | uniq
--
grep to extract file name
--
grep '(M|G)\s'
--
grep Genre|cut -f 3 -d 
--
grep png`
--
grep /boxeefeed/message/object/url | cut -d "=" -f 2,3); do get_flash_videos $i; done
--
grep -v "^$|^#" ${*} ; }
--
grep down | wc -l
--
grep '^ *[0-9]* *cd ' ~/.bash_history| tail -10 >>~/.bash_history && history -r ~/.bash_history"
grep -q javax.servlet; then echo $f; fi; done
--
grep 'model\|MHz' /proc/cpuinfo  |tail -n 2
--
grep \<strong\> | sed "s;^.*<i>\(.*\)</i>.*$;\1;" | while read FUNFACT; do notify-send -t $((1000+300*`echo -n $FUNFACT | wc -w`)) -i gtk-dialog-info "RandomFunFact" "$FUNFACT"; done
--
grep -o '[a-zA-Z0-9_-]*\ *[0-9a-zA-Z]*$'); bash"
--
grep -c down
--
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
--
grep(/^$port$/, @ports)) { print $port; last } }'
--
grep 'DEL.*lib' | sort -k1,1 -u
--
grep --color -i '(considering|older|newer|remake)'
--
grep ^Core|while read x; do printf '% .23s\n' "$x"; done; sleep 1 && clear; done;
--
grep 'link/ether' | awk '{print $2}'
--
grep -v deinstall /var/mobile/Library/Preferences/aptbackup_dpkg-packages.txt | cut --fields=1`; do apt-get -y --force-yes install $p; done
--
grep -ic "Connected successfully to port $2"` -gt 0 ]] && return 0 || return 1; }
--
grep 'compat|glibc|gcc|libst|binu'|sort
--
grep sbin/apache | awk '{print"-p " $2}' | xargs strace -f
--
grep 'device size with M'
--
grep "$1" | less -RgIKNs -P "H >>> "}
--
grep UG | tr -s " " | cut -d" " -f2
grep Processing | awk '{ print $4 }' | sed -e 's/\// /g' | awk '{ print $1 }' |uniq -c |sort -n
--
grep util-vserver | tail -n 1 | sed 's|</a>.*||;s/.*>//'`; wget URL$UTILVSERVER;
--
grep -l "$PATH_REGEX" {} \; | cut -d'/' -f2
--
grep -v '/cur$|/tmp$|/new$' | xargs
--
grep -w $(readlink -f "$(which $1)")$; }
--
grep -vE "#" | xargs -i{} crontab -u {} -l
--
grep delete
--
grep -oP 'inet (add?r
grep "</td></tr><tr><td class=" -m 2 | grep -v "Service Tag" | sed 's/>//g' | sed 's/<\/td<\/tr<tr<td class=//g'
--
grep '^ii'
grep -vP "^ *\d+\t$" | cut -f 1 | sed -e "s/\([0-9]\+\)/\1=;\1p;/" | xargs)" | tr -c "[
--
grep ^? | awk '{print $2}' | xargs rm -rf
--
grep "HTTP/1.1\" 404" access_log | awk '{print $7 } ' | sort | uniq -c | sort -n
--
grep USE | cut -d '"' -f 2 | sed 's/ /\n/g' | sed '/[(,)]/d' | sed s/'*'//g | sort | uniq > use && grep ^- use | sed s/^-// | sed '
grep SOME_STRING $i; done
--
grep -ie "[a-f0-9]{32}"
--
grep 'text I am searching for'
--
grep load; tput rc; sleep 10; done &
grep -v '^[[
--
grep -o '\.[^./]*$' | sort | uniq
--
grep -i mp3 | sort -R | sed -e 's/.*/"&"/' | xargs mpg123
grep -o 'http
--
grep DURATION | cut -d "=" -f 2 ; done | sort -t
--
grep $PPID) && s=$(dcop $d konsole currentSession) && dcop $d $s renameSession'
--
grep "<div class=\"command\">" | sed 's/<[^>]*>//g; s/^[ \t]*//; s/&quot;/"/g; s/&lt;/</g; s/&gt;/>/g; s/&amp;/\&/g'
--
grep -iE "[\[]|<filename>"
--
grep ^Host | sed 's/.appears to be up.//g' | sed 's/Host //g') auth.hosts | sed 's/[0-9][a-z,A-Z][0-9]$//' | sed 's/</UNAUTHORIZED IP -/g'
--
grep [0-9]$i | sort -nr -k 1; done | less
grep -A1 'div class="large"'|tr '\n' ' '|sed 's/^.*"large" >\(..\)/\1/;s/&d.* <br \/>/ - /;s/<br \/>//;s/<\/div.*$//'
grep -e "address" -e "coordinates" | sed -e 's/^ *//' -e 's/"//g' -e 's/address/Full Address/';}
grep '^?' | sed -e 's/^? */svn add "/g' -e 's/$/"/g'|sh ; svn status | grep '^!' | sed -e 's/^! */svn delete "/g' -e 's/$/"/g'|sh
--
Grep inside Vim and navigate results
grep pattern %
--
grep ^-|awk 'NR>5 { print $8 }'|xargs -r rm
--
grep ? | cut -c9-80`
--
grep(1)
GREP_OPTIONS='--color=auto'
--
grep "^\?" | awk '{print $2}' | xargs svn add
grep -o -h -rE '".*"' * | ispell -l -p ~/mydict | sort -u
--
grep '*' | sed 's/\s*\([0-9x]*\).*/\1/'`; echo $RES
--
grep of all c++ source under the current directory
grep -H "string" {} \;
grep '^tcp.*<IP>
--
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
--
grep -e Width -e Height -e Absolute | grep -oE "[[
--
grep -Eo "\..+" | sort -u
--
grep ^Inst | cut -d ' ' -f2
grep -lir "sometext" * > sometext_found_in.log
--
grep -i "^$i" |wc | awk 'BEGIN { OFS = "
grep -E -v '^(r[0-9]|---|$)' | sed 's/^/* /g'
--
grep -oP '"url"
--
grep -L "string" filename*
--
grep
grep pattern
--
grep \"(call|channel)\""
--
grep configure
--
grep "(hiring)" | sed -re 's/<([^>]+)>//g;s/^([ \t]*)//g'
grep oldname | perl -p -e 's/^(.*)(oldname)(.*$)/mv $1$2$3 $1newname$3/' | sh
--
grep running
--
grep ^python$
--
grep -c ^processor /proc/cpuinfo
--
grep -o . | sort | tr -d '\n'; echo
--
grep "Length (seconds)
--
grep ^d
grep -c cat
--
grep "Core 1" | [[ `sed -e 's/^.*+\([0-9]\{2,3\}\).*(.*/\1/'` -gt 50 ]] && notify-send "Core 1 temperature exceeds 50 degrees"
--
grep -2riP '\b(fuck|shit|bitch|tits|ass\b)' /usr/src/linux/
--
grep VGA
--
grep Version | cut -f 1 -d '-' | sed 's/[^.,0-9]//g'
--
grep MAILER-DAEMON | awk '{print $1}' | tr -d '*' | postsuper -d -
--
grep -rF --include='*.txt' stringYouLookFor *
--
grep -w Z
grep -v $(uname -r) | xargs yum erase -y
--
grep with header
grep "$1|PID" | grep -v grep }
--
grep -q '[a-zA-Z0-9/.
--
grep -q [internal file name] && echo $file; done
--
grep result, going directly to the first match in the first file
grep -l $1 $rest`
--
grep -e "Connected|Charge remaining|Full charge capacity|Condition" | sed -e 's/^[ \t]*//'
--
grep "([0-9]+\%).*" -o --colour=auto | cut -f1 -d';'
grep -m1 -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
--
grep -Ec '^tcp.+ESTABLISHED$'
--
grep M | cut -d " " -f8 | xargs svn revert
--
grep -v deinstall | cut -f 1
--
grep ^d | head -1 |  cut -b 51- )'
--
grep -i <pattern> \;
--
grep jsp | parallel 'curl TARGET_SERVER{} 2>&1 /dev/null'
--
grep Z | grep -v PID | awk '{print $2}'`
--
grep ether | awk '{print $2}'
--
grep -i nickleback && mpc next); sleep 5; done
--
grep "^Pages
--
grep "sockname|port"
--
grep "/var/spool/mail/"
--
grep -l $'\r' "{}" \;
grep $i .hashes.tmp; echo; done;
--
grep -o 'WORD_OR_STRING' | wc -w
--
grep ff
--
grep "<td"  | grep ipa  | sed -e 's#html">#\n#g'  | cut -f 1 -d\<  | grep -v "^\ \ *$"
--
grep '<td>.* </td>' | sed 's|\t<td>\(.*\) </td>\r|\1|' | tr '\n' ';' | sed 's/\([^;]*\);\([^;]*\);/\2\t\1\n/g'
grep ^lease /var/lib/dhcp/dhcpd.leases | cut -d ' ' -f 2 | sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n | uniq
--
grep $*  | awk 'BEGIN{printf "top "}{printf "-p" $2  " " }'` }
--
grep 'deleted'| grep "\/proc.*\file-name-part"
grep -E '([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})' -o tmp
--
grep -i "pattern" pattern.bz2
--
grep reply ;    done ; fi
--
grep -hIr name $i| cut -f4 -d '"'| sort);u="https
--
Grep across a directory and open matching files in vim (one tab per file)
grep -r PATTERN TARGET_DIR | cut -f1 -d
--
grep .mp3 >list.txt; while read line; do newname=`echo $line|sed 's/\ /-/g'|sort`; newname=`echo $newname|tr -s '-' `; echo $newname; echo $newname>> tracklist.txt;mv "$line" "$newname"; done <list.txt; rm list.txt
--
grep -q ^0\$ && continue; done; kill %1; done &>/dev/null
--
grep -o '\.[^[
--
grep -f flash)/fd/* |grep Flash | cut -d" " -f8)
--
grep -E sda[0-9]+ | sed s/*// |  awk '{printf ("%s %f ",$1,$2/512); if($2%512){ print "BAD" }else {print "Good"} }' | column -t
grep --color=always -ni -C2'
--
grep will give lot of warnings. So better use it along with find command so that softlinks are excluded. "Hn" operator will take care that both line number and filename is shown in grep output
grep -Hn "pattern" {} \;
--
grep oracle |grep pmon |awk '{print $2}' |xargs -I {} ps eww {} |grep pmon |grep -v grep |awk '{print $5 " " $6 " " $0}' |sed 's/\(S*\) \(S*\) .*ORACLE_HOME/\1 \2/g' |cut -f1,2,3 -d" "
--
grep -v $STY | grep tached | awk '{print $1;}' | perl -nle '$_ =~ /^(\d+)/; print $1;'`; do screen -x $pid; done
grep -v "/usr/share/ca-certificates/"); do  ls -la $crt; done
--
grep for a list of values and list matching values NOT matching lines each time they match
--
grep Host
--
grep /boxeefeed/message/description | awk -F= '{print $2}'
--
grep -qF "$HEX" file; then eval echo $HEX \\x${i}${j}; fi; done; done 2> /dev/null | less
--
grep "(There were undefined references|Rerun to get (cross-references|the bars) right)" texfile.log
--
grep -v PID|head -10|awk '{print $1}');do diff -yw <(pidstat -p $i|grep -v Linux) <(ps -o euser,pri,psr,pmem,stat -p $i|tail);done
grep and pkill
grep $1 |sed '/grep.'"$1"'/d' |while read a;do printf ${a%% *}' ';printf "${a#* }" >&2;printf '\n';done;}
--
grep -i "$1"
grep +5V|cut -d "(" -f1|tr -d 'n'>> datemp.log && sensors |grep Temp |cut -d "(" -f1|tr -d 'n'>>datemp.log
--
grep "remote software version"
grep [h]ttpd | cat -n
--
grep -v "<current directory>"
--
grep [j]ava | awk -F ' '  ' { print $1,"    ",$2,"\t",$(NF-2),"\t",$(NF-1),"\t",$NF } '  | sort -k4
--
grep -v ^# /etc/somefile.conf | grep .
--
grep -i -h 'account.journal.cashbox.line' *.py
--
grep -v "^$" file
--
grep ^d  | sed 's
--
grep/pkill
grep $1 |sed '/grep.'"$1"'/d' |while read a;do printf ${a%% *}' ';printf "${a#* }" >&2;printf '\n';done;}
--
grep -o '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' > results.txt ; for IP in {1..254} ; do echo "<subnet>.${IP}" ; done >> results.txt ; cat results.txt | sort -n -t . -k 1,1 -k 2,2 -k 3,3 -k 4,4 | uniq -u
--
grep -v default); do ipcalc $net | grep Broadcast | cut -d\  -f 2; done
grep "^$MOUNTPOINT" | sort -r | xargs umount
--
grep -o 'http
--
grep
--
grep ^$i.* | wc -l) $i; done | sort -n -r
--
grep EXPORT | cut -c 56-63
--
grep "^###\|you-string" |less
--
grep -E '^Server'
--
grep modified | awk '{print $3}'`
--
grep '^(M|A)' | sed -r 's/\+\s+//' | awk '{ print $2 }'` ; do if [ ! -d $i ] ; then php -l $i ; fi ; done
--
grep -vh '^[[
--
grep ^d
--
grep locked 2>/dev/null) ; if [[ ! -z ${STATUS} ]] ; then echo "Account ${UU} is locked." ; fi ; done
grep -v '^#\|^$' /etc/hdparm.conf
--
Greps Them
grep "stuff"
--
grep -nH "text" -r . --include *name.xml
--
grep -q '!' <<< "$b" && echo "$a LOCKED" || echo "$a not locked"; done
--
grep 'Session ID'
--
grep -o "[[
--
grep 'Name\|Size\|Description' | cut -d
--
grep '^[^
grep 'inet addr
--
grep S_IFREG|awk '{print $5}'|awk -F"
--
grep " ()"
--
grep -q ' lm ' /proc/cpuinfo; [ $? -eq 0 ] && echo '64bit supported'
--
grep pidgin`
grep -vE '^$|^[\s]*[;#]'
grep -q "."; do find $foo -type d -empty -print0 | xargs -0 rmdir; done; done
--
grep -R Subject /var/spool/exim/input/ | sed s/^.*Subject
grep -io '\.[^.]*$' | sort | uniq -c | sort -rn
--
grep oldname@example.com -rl .`
grep sysrq ; echo "$OUTPUT" | grep sysctl ; echo "$OUTPUT" | less
--
grep energy -A 4"
--
grep -v HEADERIMMUTABLE | sort | while read tag ; do rpm -q --queryformat "$tag
--
grep 'inet addr
--
grep -i "aborted login" /var/log/maillog | awk 'BEGIN{FS="="}{print substr($4,8)}' | cut -d"," -f1
--
grep \"icmp\" &" ; done; done
--
grep -v '\"n\"
--
grep 'ServerAlias|ServerName' /etc/apache2/sites-enabled/*.conf | awk '{printf "%s\t%s\n",$2,$3}' | sed 's/www.//' | sort | uniq
--
grep 'inet\b' |awk '{print $2}' |sed  -r -e 's/\/.*?//g'
--
grep -vE "\-bash|sshd|ps|grep|PPID" > .tmpkill; if (( $(cat .tmpkill | wc -l) > 0 )); then echo "# KILL EM ALL"; cat .tmpkill; cat .tmpkill | awk '{print $4}' | xargs kill -9; else echo "# NOTHING TO KILL"; fi; cat .tmpkill; rm .tmpkill;
--
grep "(){" | sed -e 's/(){//g' | less; }
--
grep Modify
--
grep -o "\b[A-F0-9]{8}\b$")].${file#*.}"; done
--
grep -o '(TCP|UDP).*$' | sort -u
--
grep ^Location; }
--
grep -v Field
--
grep -A 3 U | sed 1D
grep -Po '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'
--
grep ^rc | awk '{print $2}' | sudo xargs dpkg -P
--
grep "\->"
--
grep 'mysql'
--
grep -H -n "pattern" *
--
grep '.*(("STATUS)|("HEAD)).*' http_access.2012.07.18.log | awk '{sum+=$11; ++n} END {print "Tot="sum"("n")";print "Avg="sum/n}'
--
grep 'bin'
--
grep "^\?" | awk '{ print "svn add " $2 }' | bash
grep compressed log files without extracting
grep -a -i "string"
--
grep -l foo | xargs sed -i 's/foo/bar/g'
--
grep "bash" | cut -d
--
grep from your grepped output of ps (alias included in description)
grep -fl [h]ttpd
--
grep -v "noshell|false|nologin" | cut -d
--
grep '^#define EX_.*' /usr/include/sysexits.h  | sed -e 's/#define/declare -r/g' | sed 's/\//#/g' | sed -e 's/\s\{1,\}/ /g' | sed -e 's/ \([0-9]\)/\=\1/'g )
--
grep from your grepped output of ps (alias included in description)
grep -fl [h]ttpd
--
grep '^?' | sed -e 's/\?[[
--
grep $Q | wc -l
--
grep -v "^master$" | while read line; do git branch -d $line; done | grep 'Deleted branch' | awk '{print $3;}' | while read line; do git push <target_remote> 
--
grep for finding typos
grep -2 differentially README.txt
--
grep CtlRSSI; sleep 0.5; done
--
grep in less
--
grep $USER /etc/shadow | cut -d
--
grep -C7 --color=auto $(date +%d)
grep lines containing two consecutive hyphens
grep "\-\-" file
--
Grep on Solaris or AIX Systems without GNU egrep -r funcionality
--
grep -vw CVS); do grep -Hn PATTERN $f; done
--
grep -v wtmp
--
grep -- '->' | awk ' { print $(NF-2) " " $(NF-1) " " $NF; }'
--
grep -v Username | cut -d 
grep FAILED$ | cut -f1 -d'
--
grep total
--
grep command)
--
grep Accepted | while read l ; do kdialog --title "SSH monitor" --passivepopup "$l" 3; done
--
grep 'id="num-votes-' | sed 's;.*id="num-votes-[0-9]*">\([0-9\-]*\)</div>;\1;' >> votes; sleep 10; done
--
grep exec | grep end_log_pos | grep -v exec_time=0 | sed 's/^\(.*exec_time=\([0-9]\+\).*\)/\2 - \1 /' | sort -n
--
grep .svn) ]] ; then svn rm --force "${I}"; fi ; done
--
grep  ogg | tac ) > directory/test.ogg
--
grep DrWEB | awk {'print $1'} | sed s/*//g | postsuper -d -
--
grep --color 'U \|P \|A \|R \|M \|C \|? '
--
grep "unable to stat" /var/log/syslog | cut -d "/" -f 3 | sort | uniq`; do find /var/qmail/queue -name $i -type f -exec rm -v {} \; ; done
--
grep -P '\s{3}(\d+x\d+).*\+$'|tr -s ' ' '\t'|cut -f2|sort -n|tail -n1|tr 'x' ','`; set logscale y; set style data hist; set xtic rot by -90; plot '<(stat -c \"%n %s\" *)' u 2
--
grep main && urxvt -name screen -e screen -x main || urxvt -name screen -e screen -R -S main
grep -E "WARNING|ERROR" | cut -d " " -f 1 | xargs -I '{}' find /mnt/sourcerep -name {} -type f -print0 | xargs -0 -I '{}' cp -f {} ./ ; done
--
grep map
--
grep java | awk '{ print $2 }'`;do ls /proc/$x/fd|wc -l;done
--
grep -in bar
--
grep -Eho '<[a-ZA-Z_][a-zA-Z0-9_-
--
grep regex
grep_escape() {  echo "$1" |sed -re 's/([\\.*+?(|)^$[])/\\\1/g' -e 's/\{/[{]/g';  }
--
grep output to end of line
grep -n log4j MainPm.java  | sed -e 's/^\([^
grep -o mplayer`/fd/3";while [ -e "`$r`" ];do if [ "$f" = "`$r`" ];then sleep 1;else f="`$r`";notify-send " $f";fi;done
--
grep Name | awk '{ print $4" "$5 }')"
--
grep cast | cut -d'
--
grep -s pattern
grep -s pattern
--
grep -E "[0-9]+K" | sed 's/^[0-9\.]\+K[\t ]\+//' | tr "\n" "\0" | xargs -0 rm -rf
--
grep -w $(which $1)$; }
--
grep -w "<text>(.*)</text>" | sed -E "s/<\/?text>//g" | say
--
grep -v .svn ); do svn propset svn
grep -ils stringtofind {} +
grep -ils stringtofind {} +
--
grep -Fh -f /tmp/allpath /var/lib/dpkg/info/*.list|grep -vxh -f /tmp/allpath >/tmp/installedinpath ; find ${PATH//
--
grep -w $(which $1)$ | awk -F
--
grep -e '//'|cut -d ' ' -f3| xargs -I {} umount {}
--
grep -s pattern
grep -s pattern
--
grep selectively
grep -nH whatever {} \;
--
grep Temperature | awk -F
--
grep -q ELF || continue; readelf -d $i | grep -q RPATH || echo $i; done
--
grep "([_a-zA-Z][_a-zA-Z0-9]*) *= *\1 *[*/+-] *[0-9]+ *;"
--
grep ^d
grep ^d
--
grep mysql
--
grep -oP "\b(([\w-]+
grep -Eo '"entries"
--
grep -l <string-to-match> * | xargs grep -c <string-not-to-match> | grep '\
--
grep -ZlRr -e BAD_SCRIPT_LINE * |xargs -0 sed -i 's/BAD_SCRIPT_LINE//g'
--
grep 'Content-Encoding
--
Grep & Xargs to clean folders
grep -Ze ".*rar" | xargs -d '\n' -I {} mv {} backup-folder
--
grep -Ilr "<?php" .
--
grep
grep -o '<a .*href=.*>' | sed -e 's/<a /\n<a /g' | sed -e 's/<a .*href=['"'"'"]//' -e 's/["'"'"'].*$//' -e '/^$/ d'
grep ^proc /proc/cpuinfo | wc -l`; FIRST=`cat /proc/stat | awk '/^cpu / {print $5}'`; sleep 1; SECOND=`cat /proc/stat | awk '/^cpu / {print $5}'`; USED=`echo 2 k 100 $SECOND $FIRST - $NUMCPUS / - p | dc`; echo ${USED}% CPU Usage
--
grep process_name_here | wc -l
grep stat.h
--
grep -E '^(cn|mail)
--
grep -c malformed`;"
--
grep <somenewlib.so>
--
grep -o "inet [^ ]*" | cut -d
--
grep "^https{0,1}"
--
grep -P -o "(?<=File
--
grep ${2} | more; }
--
grep host 192.168.1.6 -O $(date +%Y%m%d_%H%M%S).pcap > $(date +%Y%m%d_%H%M%S).txt
--
grep \/release\/ | head -2 | tail -1 | sed -e 's/^<div>.*>\(.*\)<\/a><\/div>/\1/'
--
grep active|awk '{ print $1}'`;do brightbox-servers destroy $server;done
--
grep unmapped|awk '{ print $1}'`;do brightbox-cloudips destroy $ip;done
--
grep ^myip.opendns.com | tr '\t' 
grep xterm
--
grep "token" -o | wc -l
--
grep -nm 1 match file|cut -f1 -d
--
grep -f libflashplayer.so |head -n 1)/fd/*; do ;if  $(file ${f} |grep -q "broken symbolic link to \`/tmp/FlashXX"); then echo  ${f};fi;done)
--
grep -A3 -B4 "Kind
--
grep Timeout | cut -d '
--
grep with pcregrep
grep --color -M -N CRLF "owa_pattern\.\w+\W*\([^\)]*\)" source.sql
grep
grep -r --exclude_dir='.svn' --include='.*jsp$'  -A 2 -B 2 --color   "pHtmlHome" .
--
grep -e "^FF" | grep -e Timeout | wc -l )' | bash
grep -o "[0-9]" | while read j; do kill %$j; done
--
grepping (avoiding UTF overhead)
grep string longBigFile.log
--
grep '^.U' | wc -l
--
grep Query ; }|sponge &) done ; } | sort -n -k5 ; }
--
grep -E "^   M|^   G|^   A|^   D|^   C|^   U" | awk '{print $2}' | sort | uniq
--
grep -ao '[[
--
grep -vE '^Filesystem|tmpfs|cdrom|none' | awk '{ print $5 " " $1 }'
--
grep users | head -2 | tail -1 | sed 's/.*<strong>//g' | sed 's/<\/strong>.*//g'
grep HWaddr
--
grep -v '\*|,'      echo $( grep '^ssh ' .bash_history | sort -u | sed 's/^ssh //' )      while IFS=' ,' read host t; do echo $host; done < ~/.ssh/known_hosts ;} )" ssh
--
grep -P -o "(?<=File
--
grep or
grep 'string1|string2' file
--
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
--
grep ~ | fgrep -v "= -1" | cut -d'"' -f2
--
grep ^\! | awk '{print $2}' | xargs svn del
grep `hostname` | grep -o ">[^
--
grep ^\?|cut -c2-)
--
grep "andy" > ~/mylist
grep fc | sed 's/^\(.*\)-[0-9.]*-.*$/\1/' | sort | uniq  | xargs yum -y install
--
grep -q 'executable|ELF' && chmod +x "$file"; done 3< <(find . -type f -print0)
grep "Mounted"
--
grep HW | cut -d " " -f 11
--
grep httpd | grep -v grep | awk '{mem = $6; tot = $6 + tot; total++} END{printf("Total procs
--
grep diggs
--
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep [ProcessName] -n) | gawk '/total/ { a=strtonum($2); b=int(a/1024); printf b};'
--
grep --color "IP Address
--
grep -o '(http|https)
grep 0x | awk '{printf( "-Q %s ", $1 )}' | xargs ipcrm
--
grep -A1 '5.2.15 (tar.bz2)'|awk '/md5
grep -i "pam_unix(sshd
--
grep -i /dev/null "search pharse" {} \;
--
grep "no match" &>/dev/null` ; then echo $i.no "available" ; fi ; sleep 1 ;done }
--
grep "cpu " /proc/stat | awk -F ' ' '{total = $2 + $3 + $4 + $5} END {print "idle \t used\n" $5*100/total "% " $2*100/total "%"}'
grep chrome | cut -d"?" -f1 | grep -v chrome); do kill -9 $i ; done
--
grepping
--
grep -E -o "http[^ ]+?jpg" | grep -v "_m" | uniq | grep -v 'buddy'  `; do FILE=`echo $URL | grep -E -o "[0-9a-z_]+\.jpg"`; curl $URL > $FILE; done;
--
grep .}
--
grep "
--
grep title|sed -ne 's/<\/*title>//gp' |festival --tts
grep -v "\.\.\.\.\.\.\.T"
--
grep [0-9][0-9][0-9][0-9][0-9][0-9]*)
grep server /tmp/error.log | awk '{print $3}'`; do \ t=`date "+%d-%m-%H%M%S"` ; ssh -q -t admin@$x.domain.com 'pstree -auln' > ~/snapshots/$x-$t.out \ done
--
grep -E "(\||\\|\?|\*|<|\"|
--
grep "$msg" ; done ; }
--
grep -E "(\||\\|\?|\*|<|\"|
grep -H linux.iso {} \;  |cut -d 
--
grep) plus 'n' number of lines above and below it.
grep -C <no_of_lines> <string>
--
grep 'DEL.*lib' | cut -f 1 -d ' ' | sort -u
--
grep $USER
--
grep -r '(render_message|multipart).*('`find app/views -name '*.erb' | grep mailer | sed -e 's/\..*//' -e 's/.*\///' | uniq | xargs | sed 's/ /|/g'`')' app/models
--
grep -v ? | awk '{print $2}' > file.svn.txt && svn ci --targets file.svn.txt -m "[your commit message here]"
grep images|xargs wget
--
grep shell | awk -F'
grep inet
--
grep "$TTYTEST$" |awk '{print $1}'`;echo $REALUSERID
--
grep i386`
--
grep -vE '^(#|$)' file1) <(grep -vE '^(#|$)' file2)
--
grep '/$'"
--
grep 'Device / Media Name'
--
grep -vE '^(BEGIN|COMMIT|CREATE|DELETE)|"sqlite_sequence"' | sed -r 's/"([^"]+)"/`\1`/' | tee mydb.sql | mysql -p mydb
--
grep "core "
--
grep postfix /var/log/messages | audit2allow -M mypolicy
--
grepped one
grep -fl myprog
--
grep x2vnc && env LC_ALL=C xmessage -button "Kill it
--
grep itself from ps
grep [a]pache
--
grep -l a {} \;) && perl -p -i -e 's/old/new/g;' $files
--
grep -vE "^$|^#"'
--
grep -v  '(\t)?#.*|^$' /etc/apache2/sites-available/default
--
grep "global eth0$"|awk '{print $2}'|cut -d '/' -f 1
--
grep -e '^ [0-9]|^[0-9]' | tr '\n' ' ' | awk '{print $NF}'
--
grep "from=popular" | sed -n 's/.*<img src="\([^"]*\)".*/\1/p' | sed s/"3.jpg"/"4.jpg"/ | sed s/"?t".*$//`; do wget -O $RANDOM.jpg --quiet "$line"; done
grep -B 4 XXX | grep RET| sed "s/.\+EPS/EPS/" |xargs -I '{}' cp '{}' out/'{}';done;
grep PROCESS | grep -v grep | awk '{print $2}' | xargs kill -9
grep PROCESS | grep -v grep | awk '{print $2}' | xargs kill -9
--
grep -P "^\S*G"
--
grep LISTEN
--
grep -m1 '\.tar\.gz' | sed 's/.*perl-//; s/\.tar\.gz.*//'
--
grep -i "irc client"
grep -P "^(\ Header|\-|\+)"
grep -v "^\s*(#|$)" myfile.cfg
grep <process name> | awk '{print $2}' | xargs adb shell kill
--
grep -lir 'aMethodName' * | grep -v 'target'
--
grep "Disk /"|cut -d' ' -f5` /dev/zero >/dev/sdX
--
grep -i "$1"; }; fd() { find -maxdepth 4 -type d | grep -i "$1"; }
grep ^rc | awk '{ print $2}' | xargs apt-get -y remove --purge
--
grep \| | awk  '{ print $1 }'
--
grep '"ip"' | cut -f2 -d ">" | egrep -o '[0-9.]+'
--
grep "$TTY " | awk '{print $6}' | tr -d '()'
--
grep -o "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}" | sort -n | uniq -c | sort -n
--
grep "
--
grep of text files
grep -Ir foo *
--
grep Location
--
grep
grep -Hn -E "043[eE]|70[Dd]7" \{\} \;
--
grep
grep $proc | grep -v grep |awk '{print $2}'
--
grep '^\?' | awk '{print $2}' | xargs svn add; svn st | grep '^\!' | awk '{print $2}' | xargs svn rm
grep 
--
grep ii | cut -d" " -f3 | sed '
--
grep "eth1" | cut -d " " -f1`; do arp -d $arptable; done
--
grep "Terminal - All commands" |perl -pe 's/.+(\d+),(\d+).+/$1$2/'|head -n1\` 25`; do curl "http
--
grep 'wallpaper/' | awk -F'"' '{print $2}' | head -n1) | grep -A4 bigwall | grep img | awk -F'"' '{print $2}'); feh --bg-center $(ls -1t | head -n1)
--
grep -i "$*" /usr/lib/perl5/Unicode/CharName.pm | while read a b; do /usr/bin/printf "\u$a\tU+%s\t%s\n"  "$b"; done
--
grep --color=always 'get install' /var/log/apt/history.log*
grep '<strong>' | head -3 | tail -1 | cut -d'>' -f3 | cut -d'<' -f1
--
grep deleted | awk '{print $3}'`; do git rm $x; done
--
grep "LV Name" | awk '{ print $3 };'); do; lvextend -m 1 $i /dev/disk/<here-goes-the-disk>; done
grep '^http' |clive
--
grep "^M" | while read entry; do file=`echo $entry | awk '{print $2}'`; echo $file; svn revert $file; done
--
grep
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep "Only in" | sed -e 's/^.*\
grep '^-' | wc -l` ; echo "$num $dir" ; done | sort -rnk1 | head
--
grep -i "M " | sed s/"M "//
--
grep expr1\|expr2 file
--
grep current|cut -f6 -d\"`);do wget http
--
grep 'inet addr
--
grep inet | grep broadcast | awk '{print $2}'`' && uname -n"
grep . "$f" | head -n1
--
grep -l "foo"
grep "active" | cut -d' ' -f1
grep -e ".$@"|head -n 10; }
--
grep 'Block size'
--
grep -v pacman | cut -d' ' -f1 > packages.txt && pacman -Sy `cat packages.txt` --noconfirm
--
grep Stainless | awk -F ' ' '{ x = x + $2 } END { print x/(1024) " MB."}'
grep document.title | sed "s;^.*document.title = '\(.*\)'.*$;\1;"; };
--
grep ${PORT} > /dev/null 2>&1; if [ x"$?" == "x0" ]; then ps -ef | grep $x | grep -v grep; fi; done 2> /dev/null
--
grep "Last Changed Rev\|Path" | sed "s/Last Changed Rev
--
grep "^[^']\{3,5\}$" /usr/share/dict/words|shuf -n4)
--
grep timestamp | awk '{ print $4 " " $5 ".jpg"}' | tr "
--
grep 'device size with M'
--
grep {!$x{$_}} 32768..61000)[0] . "\n" )}'
grep "^[^']\{3,5\}$" |head -n4
grep "Num" | cut -d"
--
grep keyword`
grep -l 'flags.*\<lm\>' /proc/cpuinfo && (getconf LONG_BIT | grep '64') && java -version
grep "(^[^t])|(^tcp.*LISTEN)"
grep -v "^\W$" <filename>
--
grep '\/.a\/' | grep '\-pi' | head -n 1 | awk '{print $2}') -O geekandpoke.jpg
--
grep " lm " /proc/cpuinfo > /dev/null && echo "64-bit" || echo "32-bit"
--
grep <<username>>| grep <<Locked>>| awk {'print $2'}` do mysqladmin -h x.x.x.x --user=root -pXXX kill $i; done;
--
grep -v "\."; }
--
grep Product
--
grep ttl
--
grep ID_LENGTH |cut -d = -f 2|awk '{SUM += $1} END { printf "%d
grep PATTERN | awk {'print $2'} | xargs kill -9
--
grep -E '^File' | cut -d= -f2 > di_$1.m3u")'
--
grep MAILER-DAEMON | awk ?{print $1}? | tr -d ?*? | postsuper -d -
--
grep (package name)
--
grep 'CONFIGURE_LINE='
--
grep "Cpu(s)
grep "link/ether" | awk '{print $2}'
--
grep file | cut -d/ -f3- | cut -d',' -f1
grep '<lipsum>' -A$(((p-1))) | perl -p -i -e 's/\n/\n\n/g' | sed -n '/<lipsum>/,/<\/lipsum>/p' | sed -e 's/<[^>]*>//g'
--
grep "<span id=\"dgLookup__ctl2_lblICountry\">" | sed 's/<[^>]*>//g; s/^[\t]*//; s/&quot;/"/g; s/</</g; s/>/>/g; s/&amp;/\&/g'; }
--
grep "^https{0,1}"
--
grep -o "Size
--
grep "^https{0,1}"
grep 
--
grep '\bpython\b'
--
grep -A 1 "\"c" |tail -1 |sed  's/<p>//'); git commit -m "$gitRan"; }
grep -e "[sh]d[a-l][0-9]\?" /proc/partitions | awk '{print $4}'
--
grep -P 
--
grep 
grep 'inet addr
--
grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'
grep '^[[
--
grep process_name | grep -v grep | head -n 1 | awk '{print $1}'`; cat /proc/$PID/smaps | grep heap -A 2
--
grep "^-" | awk 'BEGIN {START=2002} (START <= $9){ print $10 ;START=$9 }' | tail -1
--
grep HWaddr
--
grep -o <process_name>`; grep -A 2 heap /proc/$PID/smaps
--
grep -E "sa[0-9][0-9]"`;do echo -ne "$i -- ";sar -r -f /var/log/sa/$i|awk '{ printf "%3.2f\n",($4-$6-$7)*100/(3+$4)}'|grep -Eiv "average|linux|^ --|0.00|^-" |awk '{sum+=$1 }END{printf "Average = %3.2f%%\n",sum/NR}';done
--
grep all class definitions from all files in current directory
grep -RE 'class\s+(\w+)' --color *
grep processor /proc/cpuinfo | wc -l`; for file in $*; do pv -s `stat -c%s $file` < $file | pxz -q -T $THREADS > $file.xz ; done; }
--
grep -o -P "<a.*href.*>" | grep -o "http.*.pdf" |  xargs -d"\n" -n1  wget -c
--
grep -v PID);do echo ""; echo -n "==$i== ";awk '/^read|^write/{ORS=" "; print}' /proc/$i/io 2>/dev/null; echo -n " ==$i=="; done|sort -nrk5|awk '{printf "%s\n%s %s\n%s %s\n%s\n\n",$1,$2,$3,$4,$5,$6}'
grep ".*
--
grep ']' | awk -F\] '{ print $2 }' | sed '/^\[/d' | egrep -v ^[A-Z]
--
grep
grep -c "^$" filename
--
grep "searh string" -sl
--
grep -oP "ip=\K(\d+)(\.\d+){3}"
grep ^LNX
--
grep wallpaper/|grep -oe 'http
--
grep "^0\.0\.0\.0" | awk '{ print $2 }'
--
grep -Eo 'http
--
grep <process> | grep -v grep | awk '{print $2}' | xargs -i -t kill -9 {}
--
grep '<p>' | cut -c4-
--
grep 5300-07_AIX_ML | grep "
--
grep Host | tr "(" ")" | cut -d\) -f2
--
grep -Eo "\.[^/]+$" | uniq
--
grep 8080
--
grep PID | grep -v 'grep' | awk '{ print $1 }'
--
grep -o -i 'File
grep on IP range from maillog
grep '183\.([0-9]|(1[0-6]|2[0-3]))' -J /var/log/maillog*
--
grep Duration);echo $(( h * 360 + m * 60 + s )); }
--
grep "Playback.*%" |head -n1 |awk '{print $7}'); amixer sset Master ${!now}
--
Grep the process excluding the grep itself.
grep [t]clsh
--
grep ^? | xargs svn add 2> /dev/null
--
grep onomatopoeia
--
grep -o 'ht.*m/pictures/.*\.jpg\|ht.*m/gifs/.*\.gif' | grep "_......_" | uniq | xargs wget
--
Grep through the text of djvu files and format results
grep -c Berlekamp`; chomp @s; print $s[0]; print " $ARGV[0]\n"' '{}' \;|sort -n
--
grep -v ^none | ( read header ; echo "$header" ; sort -rn -k 5)
--
grep -v "Interface|Routing"|awk '{print $5}'`;do ifconfig $i;done
grep -m1 "call" | cut -d' ' -f1
--
grep defunct -B 1 | grep -Eo "[0-9]{3,}" | xargs kill -9
--
grep for ip4 addresses
grep -E "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
--
grep . filename >filename1
grep -v -E 'REGEX_B'`
grep PlayTime | cut -d
--
grep "address|coordinates" | sed -e 's/^ *//' -e 's/"//g' -e 's/address/Full Address/';}
--
grep -Hn --color=tty -d skip "main" {} \;
--
grep ^d | head -1)'
grep 'REJECT' | awk '{print $1}');/sbin/iptables -I RH-Firewall-1-INPUT $REJECT_RULE_NO -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT -m comment --comment "Permit HTTP Service"
--
grep '}
--
grep -w "[0-9]*G"
--
grep -i -f password_tokens sslstrip.log | awk ' BEGIN { RS="&" } { print $1 }' | grep -i -f tokens_file
--
grep -E --color "\b`date +%e`\b|$"
--
grep -i executable
--
grep -lZ $pattern | xargs -0 sed -i.bak -e "/$pattern/d"
grep 'ServerAlias|ServerName' | tr -s " " | sed 's/^[ ]//g' | uniq | cut -d ' ' -f 2 | sed 's/www.//g' | sort | uniq
--
grep  '^[A-Z0-9]*$'
--
grep CONFIG_MAGIC_SYSRQ /proc/config.gz
--
grep .80 | grep -v 127.0.0.1 | grep EST | awk '{print $6}' | cut -d "." -f1,2,3,4 | sort | uniq
--
grep -v "not owned"
--
grep "TOTAL PPs"|awk -F"(" '{print$2}'|sed -e "s/)//g" -e "s/megabytes/+/g"|xargs|sed -e "s/^/(/g" -e "s/+$/)\/1000/g"|bc ) GB"
--
grep user | awk '{print $2}' | while read pid; do echo $pid ; pfiles $pid| grep portnum; done
--
grep -o -E '([[
grep [h]ttpd | awk '{ TOTAL += $1 } END { print TOTAL }'`; PROC_PCT=`echo "scale=4; ( $PROC_RSS/$TOTAL_RAM ) * 100" | bc`; echo "RAM Used by HTTP
grep "$1" urls.txt | awk '{print "curl --write-out "$0"=http-%{http_code}\"\n\" --silent --output /dev/null "$0'} | sh >> responses.txt
--
grep voltage /proc/acpi/battery/BAT0/state | awk '{print $2" "$3" "$4}'`;for i in `seq 1 5`;do sleep 1;echo -n .;done;done
--
grep $(whoami) | head -n1 | awk '{print $2 " " $3}'
--
grep '^(M|A)' | egrep -o '[^MA\ ].*$'
grep -i address | awk -F" " '{print $2}' | awk -F# '{print $1}' | tail -n 1  ); R=3$((RANDOM%6 + 1)); PS1="\n\[\033[1;37m\]\u@\[\033[1;$R""m\]\h^$IP
--
grep -Pzao '
--
GREP a PDF file.
grep -i '[^script$]' 1.txt
--
grep my.app.packagename | awk '{print $2}' | xargs -I ? sh -c "adb logcat -v time | grep ?"
--
grep application | grep processtobekilled | gawk '{print $2}' | grep -v grep | xargs kill -9
--
grep -v "^[[
--
grep "
--
grep of all c++ source under the current directory
grep -R --include=*.cpp --include=*.h --exclude=*.inl.h "string" .
--
grep mp4 | awk '{print $0}' | sed -e 's/\.mp4//'); do (ffmpeg -i $track.mp4 -vn -ar 44100 -ac 2 -ab 320 -f mp3 $track.mp3); done; rm -f *.mp4}
--
grep [f]lash | awk '{print $2}'`/fd/ | xargs file -L | grep Video |  awk '{sub(/
--
grep '^<h3' | grep -v '^\d' | perl -pe 's/^.*(?<=(\d\d\d)) (.*)<\/h3>$/$1 
grep -E href='(.+\.zip)' | sed -r "s/.*href='(.+\.zip)'.*/\1/" | uniq | while read line; do `wget $line`; done
--
grep xwininfo|cut -c 22-26`
--
grep -f 'libgcflash|libflashplayer')/fd/ -printf '%p %l\n' |grep FlashXX | cut -d\  -f1)"
grep -Ev '^( *$|#)' < conf.file
--
grep -P '^((25[0-4]|2[0-4]\d|[01]?[\d]?[1-9])\.){3}(25[0-4]|2[0-4]\d|[01]?[\d]?[1-9])$'
--
grep '^d' | awk '{print $9}') | sort -nr
--
grep "^lease" /var/lib/dhcp/db/dhcpd.leases |awk '{ print $2 }'
--
grep Mod
--
grep -Po '^sub (\w+)' file.pm | cut -d' ' -f2
--
grep ${SUBNET}. | awk '{print $5}' | sort -t"." -k4 -n) <(for i in $(seq 1 254); do echo ${SUBNET}.$i; done)
--
grep -i memory
--
grep -v "'"|shuf -n4)
--
grep '^ssh ' .bash_history | sort -u | sed 's/^ssh /\"/' | sed 's/$/\"/'))" ssh
--
grep -o .|sort -R|tr -d "\n ")
--
grep -E "Link|Speed" ; done
--
grep -iR '^!'|sed 's/!/ /g'|xargs -i svn rm '{}'
--
grep "^$1
--
grep -il 'searchstring' '{}' +
--
grep -n "name" -r {}
--
grep ".*\/$"` ]; then pv "$1" > "$2""$1"; else pv "$1" > "$2"/"$1"; fi; }
grep -l foo $(grep -l error *.log)
--
grep 'Name\|Size'| cut -d
--
grep "Swap
--
grep 'Author
--
grep name"|tr -s '  ' ' '|awk '{print $1" - "$5}'|sed 's/.$//'
--
grep Daily | sed -e 's/<[^>]*>//g' -e 's/^ *//' -e 's/\&[^;]*;/ /'
--
grep ^d
grep) function if you don't have pgrep or don't know how to use it
greparg="$1"; else psargs="$1"; greparg="$2"; fi; ps $psargs | grep -i "$(echo $greparg | sed -e 's/^\(.\)/[\1]/')\|^$(ps $psargs | head -1)" ; }
--
grep -l foo *cl*.log | xargs grep -lL bar
--
grep "Host\
--
grep "mystring"
--
grep '^processor|^model name' "; free ; df -h ;done
grep -e '^/' |awk '{print $1}'|sed -e "s|/dev/||g"
--
grep -Eo "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"|uniq|xclip -selection clipboard
--
grep PACKAGENAME | xargs rpm -q --filesbypkg
--
grep ^rc|awk '{ print $2 }')
--
grep heap /proc/$S/maps|cut -f1 -d' '|awk -F- '{print "0x" $1 " 0x" $2}'|xargs echo "du me t ">l;gdb -batch -p $S -x l>/dev/null 2>&1;strings t|grep \(smirk|head -n1
grep rsync)" ]; do echo; done; echo "rsync done" | mailx user@example.com) > /dev/null &
--
grep '^.\/|^URL'
--
grep -oE '[0-9]{1,}.[0-9]{1,}.[0-9]{1,}.[0-9]{1,}' | sort | uniq -c | sort -n
--
grep NumberOfPages | awk '{s+=$2} END {print s}'
--
grep --color=always KEYWORD
grep xxxx messages | cut -d ' ' -f 1,2,3
--
grep eth0 | tr -s ' ' | cut -d' ' -f "3 11"`; echo $NEW $OLD | awk '{printf("\rin
--
grep -H voluntary_ctxt /proc/*/status |gawk '{ split($1,proc,"/"); if ( $2 > 10000000 ) { printf $2 " - Process 
--
grep
--
grep ^rc | cut -d' ' -f3 | xargs dpkg -P
--
grep '^file|^desc|^dep' | sed -e'/^dep/s/$/\n/g'
--
grep -E '(Es ist jetzt|ago)'  | sed 's/<[^>]*>//g;s/[^[
--
grep '<a rel="nofollow"'|grep http|sed 's|.*<a rel="nofollow" class="[^"]\+" href="[^"]*https\?
--
grep "<li>" | awk -F"title=" '{ print $2 }' | awk -F\" '{ print $2 }'
--
grep "[[
--
grep "^$1" | awk '{print $2}') }
--
grep "application/msword"
--
grep -i ProcessName| kill -9 `awk '/FileName.Ext/ {print $1}'`
--
grep 80 | wc -l
--
grep ^r | grep dude | cut -d' ' -f1 | cut -dr -f2`; do svn ps svn
--
Grep recursively your Python project with color highlighting the result and line numbers
grep --color=always -nr 'setLevel' --include=*py | less -SRqg
--
grep -l 'string' {} \;
--
grep -c '^$' /proc/cpuinfo
grep -f 'process.*argument.*'
--
grep "
--
grep usr/sbin/sshd|sed 's,usr,/usr,'|md5sum -c
--
grep -o "http
--
grep "62]#" | sed 's/\[62\]//g'
--
grep quote_main | cut -d \> -f 2- | fmt -w $(tput cols)
--
grep -E '[Cc]ountry') echo -n "IP=$line Pais=$pais" && echo done <listaip
--
grep ? | grep .php); do svn add $FILE; done
grep "inet" | grep "broadcast" | awk '{print $2}'
--
grep directory and sub-directories
grep -r <searchterm> .
--
grep "inet" | tail -1 | awk '{print $2}'
grep ^Cpu | sed 's/[[
grep [REGULAR_EXPRESSION] -R * | cut -d"
--
grep '^URL
--
grep '^>' | awk '{print $3}' | xargs sudo apt-get remove -y --purge
--
Grep all your PDFs in a row
grep -i "my search text"
--
grep directory and sub-directories
grep -r <searchterm> .
--
grep "FOUND" /var/log/squidclamav.log | awk '{print $5"-"$2"-"$3","$4","$11}' | sed -e 's/\,http.*url=/\,/g' | sed -e 's/&/\,/g' | sed -e 's/source=//g' |sed -e 's/user=//g' | sed -e 's/virus=//g' | sed -e 's/stream\
--
grep "'cd "; }
--
grep '\/\/g33kinfo.com\/'
--
grep directory and sub-directories
grep <searchterm> *
--
grep --color 'City
--
grep
grep -ir 'foo' * | awk '{print $1}' | sed -e 's/
--
grep differ | awk '{ print $2, $4 }' | xargs -n 2 gvim --nofork -d
--
grep "*\.exe"|grep -v 'egrep'|awk '{print $1 }'`;do kill -9 $i;done
grep 192.168.10.10 | awk "{print $2}" |xargs kill
--
grep -IHn STRING {} \;
grep yi| sed s."yiaddr = "."en0
grep
grep -ir 'foo' * | awk -F '{print $1}' | xargs vim
--
grep Build-Depends | perl -p -e 's/(?
--
grep ".*
grep "^$1 " | cut -c '3-' }
grep -v "$1" | xargs rm -r ; }
--
grep LOCKED -d RWrite | grep RWrite
--
grep ^-
--
grep -u $USER|wc -l))
--
grep media
--
grep -A1 "Md5 encrypted state" | tail -n1  | cut -d '"' -f3 | sed 's/>//g; s/<\/b//g'
--
grep -Hn <pattern> {} \;
--
grep Global | sed 's/   \|Global\|\,//g' >> /var/log/alexa-stats.txt ; sleep 5h ; done &
--
grep [[
--
grep 'fullcount' | grep -o '[0-9]\+')";tput rc; done &
grep -A1 "Decrypted text"  | tail -n1 | cut -d '"' -f3 | sed 's/>//g; s/<\/b//g'
--
grep -l pattern {} \; | xargs vi +/pattern
--
grep "\!" | cut -c 8-`
grep '\<110/' /etc/services; grep '\b110/' /etc/services
--
grep -q '^[-]\+$'&&break; [ -z "$m" ] && m=$l; done; echo "$h % $m" | sed 's#\(.*\) | \(.*\) | \([-0-9 
--
grep -v '\"n\"
--
grep 'text/plain' | wc -l
--
grep '(View file
--
grep "#include.*\.c.*" 2>&1 | tee source_inside_source_list.txt
grep -v '\"n\"
--
grep processor|awk '{print $3}'`;do cpufreq-set -g ondemand $i;done
--
grep -v '\"n\"
Grep through zip files
grep --color=always "PATTERN"`;         if [[ $found ]]; then echo -e "${file}\n${found}\n"; fi done
grep '^\?' | sed -e 's/^\?//g' | xargs svn add
--
grep EMC | cut -f 1 -d " " ); do  if lsattr -a reserve_lock -El $i | grep -q "reserve_lock yes"; then chdev -a reserve_lock=no -l $i; fi; done
grep -c cat
--
grep '^./.*\.' |sed -e "s/\(^.*\.\)\(.*$\)/\2/" |sort |uniq
grep -H HACKED {} \; > hacklog.txt
--
grep video | cut -d
--
grep video | cut -d
--
grep "^[^'A-Z]\{3,7\}$" /usr/share/dict/words|shuf -n4)
--
grep -o EFI[0-9].  && system_profiler SPSoftwareDataType |grep 64
--
grep -i Num
--
grep ^\? | awk '{print $2}' | xargs svn add
--
grep -v "ip6|status|icmp|igmp|\?"` ; do echo $i `ndd -get /dev/ip $i` ; done | grep -v \?
--
grep -UIlr "^M" *
--
grep -Eo "<original>(.)*</original>" | grep -Eo "http
--
grep -E "
--
grep -o -e '[0-9]+' | head -n 1)'
--
grep -q ^0\$ && continue; done; kill %1; done
--
grep '/sda$' | grep -o 'ata[^ ]*'
--
grep -v '^#' | sed '/^$/d'
grep "=> /" | awk '{print $3}' | xargs -I '{}' cp -v '{}' /destination
--
grep -i -H "search pharse" {} \;
--
grep udp && echo && sudo netstat|head -n2|tail -n1 && sudo netstat -a|grep tcp
--
grep all in once
grep -P -v "(class)|(zip)|(png)|(gz)|(gif)|(jpeg)|(jpg)" | xargs -I @ grep -H $1 @
--
grep " has address "|cut -d" " -f4
--
grep -hIr -m 1 
--
grep "inet addr" |cut -d "
grep "/channels"|awk '{print $2}'|sort -u|while read links; do lynx --dump "$links"|awk '/view/ {print $2}'|sort -u; done
--
grep \-H "new filter_" {} \;
--
grep -v 'dir1|dir2|file1'`
grep --color -i -E 'listen|listening'
--
grep ELF | cut -d"
--
grep -o "[0-9A-Z]{16}"
--
grep "is a member" | cut -d " " -f 1; };
grep play|sed -ne '/<title>/s/^.*\(http.*\)<\/title/\1/gp'|awk '{print $1}')
grep IODisplayEDID | sed "/[^<]*</s///" | xxd -p -r | strings -6
--
grep NEEDED | cut -f2 -d[ | cut -f1 -d]`; do [ -e /usr/lib/$lib ] && j=/usr/lib/$lib || j=`locate -l 1 $lib`; readlink -f $j ; done
--
grep -c 'httpd|apache2'
--
grep -n -H -E "^(import|from) math" {} \;
grep "initrd " /boot/grub/grub.conf|grep -v ^#|cut -f 2- -d-|sed -e 's/\.img//g'); do mkinitrd -v -f /boot/initrd-$kern.img $kern; done
--
grep -i " connected|card detect|primary dev" /var/log/Xorg.0.log
--
grep 8080
grep -m1 PROCESS | tr 'a-z-' ' ' | awk '{print $1}'
--
grep \-H "search term" {} \;
--
grep ^d|head -1|sed 's
--
grep -A 1 subjectCell | sed -e 's#<[^>]*>##g' | head -n2 | tail -n1 | sed 's/^[[
grep "remotes/origin" | grep -v master | awk -F / '{print $3}' | xargs -I % git clone -b % git
--
grep -o '^[/a-z0-9]*'
--
grep "4
--
grep 'png' | grep '<img src="http
--
grep -v '^$'
--
grep -v "unknown"
--
grep -v '\.svn' | xargs wc -l
grep -v 'active\|The' | xargs sudo port uninstall
--
grep "file desc"
--
grep -w /media/KINGSTON /proc/mounts | cut -d " " -f
--
grep i386 | awk '{ print "apt-get -y  remove --purge "$2 }' | sh
grep -vi pattern
--
grep "search for something" $(git log -g --pretty=format
--
grep -v \/ | tail -n 1
--
grep java)|sed 's/ /,/')}/fd/")|grep log|sed 's/[^/]* //g'|xargs -r tail -f
--
grep "
--
grep -F "`for o in \`pkg_info -qao\` ; \ do echo "|/usr/ports/${o}|" ; done`" `make -V INDEXFILE` | \ grep -i \|ports@freebsd.org\| | cut -f 2 -d \|
--
grep -v -m4 ^\{1,10\}$ | tr [
grep --color -M -N CRLF -e "SQLEngine\.\w+\W*\([^\)]*\)" -r --include='\.java$'
--
grep Focal | awk '{print $5}' | sort -n | uniq -c
--
grep "^[0-9\.]+$i" | sort -rn; done'
--
grep contador | cut -f2 -d">" | cut -f1 -d"<"` dias para el proximo feriado
--
grep '__NR_' /usr/include/asm/unistd_`getconf -a | awk '$1~/^WORD/{print $2}'`.h | sed -e 's/^#define __NR_//' | column -t
--
grep -o '\.[^.]*$'|sort -f|uniq -i
--
grep -i 'Current IP Address
--
grep \/release\/ foobar | head -2 | tail -1 | sed -e 's/^<div>.*>\(.*\)<\/a><\/div>/\1/' ; rm foobar
--
grep $r $s;then sed "s/$r yes/$r no/" $s.old > $s; else echo $r no >> $s;fi
--
grep [h]ttpd | awk '{print $2}')
--
grep Platform | cut -d' ' -f4-
--
grep -o '([[
--
grep -E '<DT><A|<DT><H3' bookmarks.html | sed 's/<DT>//' | sed '/Bookmarks bar/d' | sed 's/ ADD_DATE=\".*\"//g' | sed 's/^[ \t]*//' | tr '<A HREF' '<a href'
--
grep 'users registered' | sed 's/.*\<font size=7\>//g' | tr '\>' ' ' | sed 's/<br.*//g' | tr ' ' '\0'
--
grep -v "/.*/" | sort -n
grep "mount point"
--
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
--
grep -oP '(-)?\d{1,3}\xB0[FC]'
--
grep -C 1000 ERROR
--
grep -lqi -p -W none ^get\|^post tcp dst port 80 -d eth0 | egrep '(flv|mp4|m4v|mov|mp3|wmv)'
--
grep "somepattern"
--
grep -i pci
grep -i pci
--
grep $foo {} \; -print
grep -Eo "watch\?v=[^[
--
grep -v Tables_in | grep -v "+" | gawk '{print "drop table " $1 ";"}' | mysql -u uname dbname
grep -c '^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$'
--
grep D
--
grep to look for more than one search term
grep -i '<searchTerm>\|<someOtherSearchTerm>' <someFileName>
grep -q hexianmao _ && iconv -f gb2312 -t utf8 -o _ -c _ '
--
grep to extract file name
grep -o "[^/]*$"; }
grep r[0-9] | awk '{print $1}' | sed "s/r//" | sort -n | head -1
--
grep -vE "(gvfs|procbususb|rootfs)"
--
grep -E 'new .+Form\('
--
grep -Pv "^.$" | sort -rn --field-separator="-" | sed -n '3,$p' | xargs rm -rf
--
grep `lynx --dump http
--
grep -o '([[
grep filename | find . -inum `awk '{print $1}'` -exec rm {} \;
grep -m1 '\.tar\.gz' | sed 's/.*perl-//; s/\.tar\.gz.*//'
grep -v "[REGULAR EXPRESSION]" | xargs rm -v
grep -v '
--
grep -e [MA] | egrep -ve '.project|.classpath|.properties|.sh|.number'   | awk -F' ' '{ print $2}' | xargs svn ci -m "message"
--
grep -i "${*}" |sed "s@^@$L/@" ; done ; }
--
grep
grep book
--
grep "^  LV Name" | while read A B LVDEV; do echo $LVDEV; done
--
grep c#t|awk '$2 > 0 {print $NF}')
grep message/rfc822 | sed -s 's,^.*\('$MAILDIR'[^]]*\)\].*$,\"\1\",' | xargs ln -sft $MAILDIR/bingo/cur/
--
grep "^(MR|MS)" $f | wc -l`; echo $f
--
grep "inet addr
--
grep
grep -Po '\b\w+(?<!s)\b'
--
grep -i need; }
--
grep inet | awk 'NR==1 {print $2}' | cut -c 6-
--
grep  "^0\." | awk '{print "Gateway to the World
--
grep -C3 "^[[
--
grep -v "(^\+[a-z]|^\-[a-z])"| sort > outputfile.sorted
--
grep /
--
grep -rnA 10 TODO *
--
Grep for a TAB
grep $'\t' file.txt
--
grep inet | cut -f 2 -d "
--
grep -E "hello\$"
grep -iz '\.(avi|mpg|mov|flv|wmv|asf|mpeg|m4v|divx|mp4|mkv)$' | sort -z | xargs -0 ls -1
grep inet | cut -f 2 -d "
--
grep "^[0-9]+$"
--
grep -ie "<*HREF=(.*?)>" index.html | awk -F\" '{print $2}' | grep 
--
grep -w ^"Block size
--
grep -cv "SHOW PROCESSLIST"
--
grep -v "unit-test|android"
--
grep -i '<title>.*</title>'` && curl $url > /tmp/u && mail -s "$title" your-private-instapaper-address@instapaper.com < /tmp/u ; done
grep A520 |rev |cut --complement -d " " -f1-40 |rev |xargs -I {} cp --parents {} /where
--
grep -v 44.1 | sed 's/
--
grep -n . datafile ;
--
grep LISTEN
--
grep "^\?" | awk '{print $2}' | xargs svn add
--
grep "$LOGNAME" | grep `date '+%Y-%m-%d'`
--
grep -i '^DocumentRoot' /etc/httpd/conf/httpd.conf | cut -f2 -d'"'
--
grep the command-line-fu archive
grep keyword
--
grep -v EUID
grep -i inet | awk -F
--
grep status >> nicinfo.txt; ifconfig | grep inet >> nicinfo.txt; ifconfig | grep ether >> nicinfo.txt; hostinfo | grep type >> nicinfo.txt;
--
grep 'vmx$' | sort ); do printf "% 40s %s M\n" $(echo "$( echo -n ${file}
--
grep -e '^(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-4])\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-4])$'
--
grep ata-.*`hdparm -i /dev/sda | grep SerialNo | sed 's/.*SerialNo=//' | tr -d "\n"`.*sda$ | sed -e 's/.*ata-/ata-/' -e 's|[ ].*||' | tr -d "\n"
grep -il 'searchString' {} \;
--
grep datadir | tr '=' ' ' | gawk '{print $2;}'` && ( cd $DD ; find . -mindepth 2 | grep -v db\.opt | sed 's/\.\///g; s/\....$//g; s/\//./;' | sort | uniq | tr '/' '.' | gawk '{print "CHECK TABLE","`"$1"`",";";}' )
--
grep -Eo ^[A-Z\.]+\  |sed 's/TYPE//'); do echo -n "$dnsREC " && dig +short $dnsREC IANA.ORG; done
--
grep -v '\.\/\.'
grep -l bar *.log | xargs grep -l foo
--
grep real;sleep 1;done
grep -l foo ./*)
--
grep -v '\.\/\.'
--
grep -rl foo ./*)
--
grep /`
--
grep -i establ | awk -F/ '{print $2}' | uniq | sort
--
grep  ' / ' /etc/mtab |cut -d " " -f1`) / 1024
--
grep -i -o '[a-z0-9]*[-|_]*[0-9a-z]*\.ko$' |xargs -I {} echo '# {}' >>/etc/modules.autoload.d/kernel-2.6
--
grep LANG=
--
grep -regex ".*/[A-Z]{3}_201009[0-9]{2}.*" -printf "%f %s\n" | awk '{ SUM += $2;COUNT++ } END { print SUM/1024 " kb in " COUNT " files" }'
--
grep entry-content | sed -e 
--
grep -E ^[0-9]+$ | tr '\n' '+' | sed 's/\(.*\)+/\1\n/' | bc
--
grep "hijacked" | sed s/\@\@.*// | xargs`
grep secs| awk '{print; exit}' | osd_cat -i 40 -d 30 -l 2
--
grep "\.(ade|adp|bat|chm|cmd|com|cpl|dll|exe|hta|ins|isp|jse|lib|mde|msc|msp|mst|pif|scr|sct|shb|sys|vb|vbe|vbs|vxd|wsc|wsf|wsh)$"
--
grep -l "$S" {} \; | xargs sed -i -e "s/$S/$R/g"
--
grep -v 'abc|\s' )
--
grep -rl string_to_find  public_html/css/ | xargs -I '{}' vim +/string_to_find  {} -c "
--
grep -i x86_64 |nl |tail -1 |cut -f1 -f3 && file /System/Library/Extensions/*.kext/Contents/MacOS/* |grep -v x86_64 |nl |tail -1 |cut -f1 -f3
--
grep -oe '^[0-9.]\+' | perl -ne 'system("geoiplookup $_")' | grep -v found | grep -oe ', [A-Za-z ]\+$' | sort | uniq -c | sort -n
grep -e '^[Zz]' | awk '{print $2}'`
--
grep
grep foobar /dev/null {} \; | awk -F
--
grep -il searchphrase {} \;
--
grep
grep -qi 'foo' {} \; -print0 | xargs -0 vim
--
grep Vers
grep -w Screen
grep "Pages
--
grep -r -l xxxxx . | xargs perl -i -pe "s/xxxxx/yyyyy/g"
--
grep -v svn
--
grep "_NET_ACTIVE_WINDOW(WINDOW)"| awk '{print $5}' xdotool windowfocus $WID xdotool key ctrl+shift+t wmctrl -i -a $WID
--
grep png`; eog xkcd_$(date +%y-%m-%d).png
--
grep -v unreachable | awk '{print $1}'
--
grep "test" '{}' /dev/null \; -print
--
grep module | awk '{print $1;}' | xargs sudo apt-get install -y
--
grep -l "some string" {} \;
--
grep -v "No syntax errors"
--
grep "\w\{8\}-" | tr -d ' '; }
--
grep ssh
--
grep Revision | awk '{print $2}'
--
grep -o "\(new \(\w\+\)\|\w\+
--
grep -w '/media/mountpoint' | cut -d " " -f 1
grep '(\[error\])+.*(PHP)+' /var/log/apache2/error.log
grep -w '/media/armadillo' | cut -d " " -f 1
--
grep q= | awk '{print $11}' | awk -F 'q=' '{print $2}' | sed 's/+/ /g;s/%22/"/g;s/q=//' | cut -d "&" -f 1 | mail youremail@isp.com -s "[your-site] search strings for `date`"
--
grep -i "search phrase"
grep -v grep |  grep catalina | awk '{print $1}'
--
grep 'inet6 addr
--
grep 'HWaddr' | awk '{print $5}'
--
grep -i listen
--
grep -v "^# commandlinefu" }
--
grep -r 'keyword keyword2' your/path/ | grep -v svn
grep 
--
grep -i firefox | sort -k 2 -r | sed 1d | awk ' { print $2 } ' `
--
grep -H -n $2 '{}' ';'
--
grep lm /proc/cpuinfo
--
grep EST | awk '{print $5}' | sort
--
grep -hIr -m 1 em
--
grep -i max
--
grep ip
--
grep -P ^[a-z].* | grep -v "'s$" | grep -Pv ^.\{1,15\}$ | shuf -n4 | tr '\n' ' ' | sed 's/$/\n/'
--
grep -a -o -E "Host\
--
grep "
--
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep --exclude-dir=vendor --exclude-dir=tmp --exclude-dir=log "(binding.pry)|(console.log\(.+\))|(alert\(.+\))" -inR *
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep inet6'
--
grep -r "zw52.ru" * | awk '{print $1}' | cut -f1 -d\
--
grep $1'
--
grep -iC2 --color=always $2 | less
--
grep --color=auto'
--
grep '
--
grep -n ^[A-Z0-9]
--
grep LISTEN'
--
grep $1 | grep -v grep | awk '{print $2}'`; 
--
grep='grep -Rin --color=always --exclude-dir=.svn --exclude-dir=cache'
--
grep -v \"^#|^$\""
--
grep -c "^>"'
grep '
--
grep usage
--
grep -i ${@
--
grep() { grep $1 -o '.\{0,20\}'$2'.\{0,20\}' $3; }
--
grep --color=always $2 | parallel -k echo "[$f]"; done
--
grep -v grep|grep "$@"'
--
grep php'
--
grep -d ${1} -t '^(GET|POST) ' 'tcp and port 80'; }
--
grep -P'
--
grep='grep --color=auto'
--
grepit(){
grep -nir "${1}"
--
grep='grep --color=always'
--
grep -sl"
--
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
--
grep'
--
grep ${tstmp}
--
grep ^d' #Only list directories
grep ^d' #Only list directories, including hidden ones
--
grep -v -e "^$" -e"^ *#"'
--
grep "
--
grep -il "$1" {} \;
--
grep"
--
grep zsh
grep zsh | head
grep zsh)
grep zsh)" >> ../zdotfiles/1/head_cmd.sh
--
grep sixad
--
grep sixad
--
grep -Ri profile
--
grep -Ri falkTX ~
grep -Ri sixaxis ~
--
grep sixad
grep sixad
grep sixad
--
grep key
grep KDE
--
grep git
--
grep zsh)" >> ../zdotfiles/1/find_zsh_files.sh
--
grep al
grep al
--
grep
--
grep -R spf13 .
--
grep '\*history\*'
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep -v '\*|,'      echo $( grep '^ssh ' .bash_history | sort -u | sed 's/^ssh //' )      while IFS=' ,' read host t; do echo $host; done < ~/.ssh/known_hosts ;} )" ssh
--
grep ^/path/to/element | cut -f2- -d=
--
grep -v '\"n\"
grep -v '\"n\"
grep -v '\"n\"
grep -H voluntary_ctxt /proc/*/status |gawk '{ split($1,proc,"/"); if ( $2 > 10000000 ) { printf $2 " - Process 
--
grep application | grep processtobekilled | gawk '{print $2}' | grep -v grep | xargs kill -9
--
grep -v '\"n\"
--
grep -v '\"n\"
--
grep -v '\"n\"
--
grep -v '\"n\"
grep [ProcessName] -n) | gawk '/total/ { a=strtonum($2); b=int(a/1024); printf b};'
grep -v '\"n\"
--
grep", "awk", "time", "case", "menu", "curl", "rename", "xclip", "keymaps"]
--
grep", "awk", "time", "case", "menu", "curl", "rename", "xclip", "keymaps"]
--
grep "^M" | while read entry; do file=`echo $entry | awk '{print $2}'`; echo $file; svn revert $file; done
--
grep "Disk /"|cut -d' ' -f5` /dev/zero >/dev/sdX
--
grep --color -i '(considering|older|newer|remake)'
--
grep -A1 "language=0.*FullName" | tail -1 | rev | cut -f1 | rev); g=${g##+( )}; mv -i "$f" "$g".ttf; done
--
grep . filename
--
grep rsync
grep -A 3 -i "example" demo_text
grep Chrome | perl -ne 'print "$1\n" if / (\d+)$/' | ( x=0;while read line; do (( x += $line )); done; echo $((x/1024)) );
grep '@href' | cut -d\= -f 2- | sort | uniq | linkchecker -r0 --stdin --complete -v -t 50 -F blacklist
grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
grep {command}
grep "^ " |cut -f2); do echo -n '\x'$i; done;echo
grep 2 words existing on the same line
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
grep "
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
grep [process] | awk '{print $2}' | xargs -I % ls /proc/%/fd | wc -l
grep ESTABLISHED
grep ESTABLISHED |awk '{printf \"%15.15s \\t%s\\n\", \$1, \$9}'"
grep "^@" | sort -u; done > followlst.txt
grep -qIm1 . $file
grep Date | awk '{print " 
grep -Fvxf $(file1) $(file2) | wc -l
grep i386 | awk '{ print "apt-get -y  remove --purge "$2 }' | sh
grep -q "\"reason\"
grep -q "Sorry, that page does"; then echo "Dont Exist"; else echo "Exist"; fi
grep -i "$1"
grep --color -i -E 'listen|listening'
grep -i 'MAIL FROM\|RCPT TO'
--
grep '<title>' | sed -e 's#<[^>]*>##g' | tail -n10); do echo $i; echo $i | sed 's/^/Did you hear about /g' | say; sleep 30; done
--
grep -e Width -e Height -e Absolute | grep -oE "[[
--
grep -f 'libgcflash|libflashplayer')/fd/ -printf '%p %l\n' |grep FlashXX | cut -d\  -f1)"
grep ID_LENGTH |cut -d = -f 2|awk '{SUM += $1} END { printf "%d
--
grep -lqi -p -W none ^get\|^post tcp dst port 80 -d eth0 | egrep '(flv|mp4|m4v|mov|mp3|wmv)'
--
grep 'dimensions
--
grep -lqi -p -W none ^get\|^post tcp dst port 80 -d eth0 | egrep '(flv|mp4|m4v|mov|mp3|wmv)'
--
grep "Length (seconds)
--
grep -v 44.1 | sed 's/
--
grep -w "<text>(.*)</text>" | sed -E "s/<\/?text>//g" | say
--
grep -o mplayer`/fd/3";while [ -e "`$r`" ];do if [ "$f" = "`$r`" ];then sleep 1;else f="`$r`";notify-send " $f";fi;done
--
grep -f 'libgcflash|libflashplayer')/fd/ -printf '%p %l\n' |grep FlashXX | cut -d\  -f1)"
--
grep ID_LENGTH |cut -d = -f 2|awk '{SUM += $1} END { printf "%d
--
grep '@href' | cut -d\= -f 2- | sort | uniq | linkchecker -r0 --stdin --complete -v -t 50 -F blacklist
--
grep -o '\..\+$' | sort | uniq -c | sort -rn
--
grep -I '
--
grep
grep -e "total\|
--
Grep recursively your Python project with color highlighting the result and line numbers
grep --color=always -nr 'setLevel' --include=*py | less -SRqg
grep NumberOfPages | awk '{s+=$2} END {print s}'
--
grep "62]#" | sed 's/\[62\]//g'
grep usr/sbin/sshd|sed 's,usr,/usr,'|md5sum -c
--
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
--
grep -l '<string of text>' {} \; | xargs sed -i -e 's%<string of text>%<new text string>%g'
--
grep -l foo | xargs sed -i 's/foo/bar/g'
--
grep ata-.*`hdparm -i /dev/sda | grep SerialNo | sed 's/.*SerialNo=//' | tr -d "\n"`.*sda$ | sed -e 's/.*ata-/ata-/' -e 's|[ ].*||' | tr -d "\n"
--
grep '(ESSID|Signal|Address)'| \sed -e 's/Cell  - Address
grep -v -e "\/$" | tr '\n' '\0' | xargs -0 svn blame | awk '{print $2}' | sort | uniq -c | sort -nr
grep 2 words existing on the same line
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -v "(^#|^\b*$)"
grep "\ $DATE\
grep -I '
grep '(M|G)\s'
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep 'M|G'
grep "^([A-Z]|   [A-Z])"
grep ata-.*`hdparm -i /dev/sda | grep SerialNo | sed 's/.*SerialNo=//' | tr -d "\n"`.*sda$ | sed -e 's/.*ata-/ata-/' -e 's|[ ].*||' | tr -d "\n"
grep '^
grep -v  '(\t)?#.*|^$' /etc/apache2/sites-available/default
grep '^./.*\.' |sed -e "s/\(^.*\.\)\(.*$\)/\2/" |sort |uniq
grep '"ip"' | cut -f2 -d ">" | egrep -o '[0-9.]+'
grep '^#define EX_.*' /usr/include/sysexits.h  | sed -e 's/#define/declare -r/g' | sed 's/\//#/g' | sed -e 's/\s\{1,\}/ /g' | sed -e 's/ \([0-9]\)/\=\1/'g )
grep '^file|^desc|^dep' | sed -e'/^dep/s/$/\n/g'
grep \"(call|channel)\""
grep -o '(http|https)
grep `hostname` | grep -o ">[^
grep regex
grep_escape() {  echo "$1" |sed -re 's/([\\.*+?(|)^$[])/\\\1/g' -e 's/\{/[{]/g';  }
grep '.*(("STATUS)|("HEAD)).*' http_access.2012.07.18.log | awk '{sum+=$11; ++n} END {print "Tot="sum"("n")";print "Avg="sum/n}'
grep 'ServerAlias|ServerName' /etc/apache2/sites-enabled/*.conf | awk '{printf "%s\t%s\n",$2,$3}' | sed 's/www.//' | sort | uniq
grep
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep
grep -Hn -E "043[eE]|70[Dd]7" \{\} \;
--
grep -c malformed`;"
--
grep 8080
--
grep -A1 "language=0.*FullName" | tail -1 | rev | cut -f1 | rev); g=${g##+( )}; mv -i "$f" "$g".ttf; done
--
Grep recursively your Python project with color highlighting the result and line numbers
grep --color=always -nr 'setLevel' --include=*py | less -SRqg
--
grep -v .svn ); do svn propset svn
--
grep fetch | sed 's/\(.*github.com\)[
grep "^$1
--
Grep with one result at a time
grep "$search" * -R --exclude-dir=.svn -B2 -A2);for((i=$(echo "$data" | wc -l);$i>0;i=$(($i-6)) )); do clear;echo "$data"| tail -n $i | head -n 5; read;done
--
grep rsync
--
grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
--
grep {command}
--
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
--
grep ESTABLISHED
--
grep '@href' | cut -d\= -f 2- | sort | uniq | linkchecker -r0 --stdin --complete -v -t 50 -F blacklist
grep -o -i 'File
grep
grep -o '<a .*href=.*>' | sed -e 's/<a /\n<a /g' | sed -e 's/<a .*href=['"'"'"]//' -e 's/["'"'"'].*$//' -e '/^$/ d'
--
grep '<a rel="nofollow"'|grep http|sed 's|.*<a rel="nofollow" class="[^"]\+" href="[^"]*https\?
grep -o -P "<a.*href.*>" | grep -o "http.*.pdf" |  xargs -d"\n" -n1  wget -c
grep -E '<DT><A|<DT><H3' bookmarks.html | sed 's/<DT>//' | sed '/Bookmarks bar/d' | sed 's/ ADD_DATE=\".*\"//g' | sed 's/^[ \t]*//' | tr '<A HREF' '<a href'
--
grep -ie "<*HREF=(.*?)>" index.html | cut -d "\"" -f 2 | grep 
--
grep '(View file
grep -E href='(.+\.zip)' | sed -r "s/.*href='(.+\.zip)'.*/\1/" | uniq | while read line; do `wget $line`; done
grep images|xargs wget
grep -i "File<a href" | awk -F '<a href="' '{print $4}' | awk -F '" ' '{print $1}' | xargs wget }
--
grep '^http' |clive
--
grep "<link>|<title>" recenttracks.rss | awk 'ORS=NR%2?" "
--
grep "(){" | sed -e 's/(){//g' | less; }
--
grep -E '([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})' -o tmp
grep -Po '^sub (\w+)' file.pm | cut -d' ' -f2
--
grep "Only in" | sed -e 's/^.*\
grep ii | cut -d" " -f3 | sed '
--
grep
grep -o '<a .*href=.*>' | sed -e 's/<a /\n<a /g' | sed -e 's/<a .*href=['"'"'"]//' -e 's/["'"'"'].*$//' -e '/^$/ d'
--
grep '^<h3' | grep -v '^\d' | perl -pe 's/^.*(?<=(\d\d\d)) (.*)<\/h3>$/$1 
grep -Pzao '
--
grep -s pattern
grep -s pattern
--
grep '"ip"' | cut -f2 -d ">" | egrep -o '[0-9.]+'
--
grep {command}
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
grep "^@" | sort -u; done > followlst.txt
grep -I '
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
--
grep -l foo | xargs sed -i 's/foo/bar/g'
--
grep S_IFREG|awk '{print $5}'|awk -F"
grep -i -h 'account.journal.cashbox.line' *.py
--
Grep inside Vim and navigate results
grep pattern %
--
grep -i /dev/null "search pharse" {} \;
--
grep -nH "text" -r . --include *name.xml
--
grep -v -e "\/$" | tr '\n' '\0' | xargs -0 svn blame | awk '{print $2}' | sort | uniq -c | sort -nr
--
grep [process] | awk '{print $2}' | xargs -I % ls /proc/%/fd | wc -l
--
grep -io MODULENAME| xargs modinfo | grep -iw version
grep -I '
grep '^rc\b' | awk '{ print $2 }' | xargs sudo dpkg -P
grep -o '/'|perl -ne '$x.="./.";print`readlink -f $x`'|xargs -tn1 chmod 755
--
grep -n "name" -r {}
--
grep <process> | grep -v grep | awk '{print $2}' | xargs -i -t kill -9 {}
grep sbin/apache | awk '{print"-p " $2}' | xargs strace -f
grep ^rc | awk '{ print $2}' | xargs apt-get -y remove --purge
grep -B 4 XXX | grep RET| sed "s/.\+EPS/EPS/" |xargs -I '{}' cp '{}' out/'{}';done;
--
grep -l '<string of text>' {} \; | xargs sed -i -e 's%<string of text>%<new text string>%g'
grep FAILED$ | cut -f1 -d'
grep -l foo | xargs sed -i 's/foo/bar/g'
--
grep \"(call|channel)\""
--
grep current|cut -f6 -d\"`);do wget http
--
grep -vE '^$|^[\s]*[;#]'
grep -v '
--
grep jsp | parallel 'curl TARGET_SERVER{} 2>&1 /dev/null'
--
grep -o "googleplayer.swf?videoUrl\\\x3d\(.\+\)\\\x26thumbnailUrl\\\x3dhttp" | grep -o "http.\+" | sed -e's/%\([0-9A-F][0-9A-F]\)/\\\\\x\1/g' | xargs echo -e | sed 's/.\{22\}$//g' | xargs wget -O OUPUT_FILE
--
grep ata-.*`hdparm -i /dev/sda | grep SerialNo | sed 's/.*SerialNo=//' | tr -d "\n"`.*sda$ | sed -e 's/.*ata-/ata-/' -e 's|[ ].*||' | tr -d "\n"
--
grep "initrd " /boot/grub/grub.conf|grep -v ^#|cut -f 2- -d-|sed -e 's/\.img//g'); do mkinitrd -v -f /boot/initrd-$kern.img $kern; done
--
grep M|sort -n
--
grep LANG=
GREP_COLOR="1;32" grep --color "[^ ]"
grep Revision | awk '{print $2}'
--
grep ^$i.* | wc -l) $i; done | sort -n -r
--
grep -c malformed`;"
--
grep $LOGNAME'
--
grep $1"
--
grep -Pzao '
--
grep '^
--
grep
grep $proc | grep -v grep |awk '{print $2}'
--
grep
--
grep '(ESSID|Signal|Address)'| \sed -e 's/Cell  - Address
grep -v -e "\/$" | tr '\n' '\0' | xargs -0 svn blame | awk '{print $2}' | sort | uniq -c | sort -nr
grep 2 words existing on the same line
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -v "(^#|^\b*$)"
grep "\ $DATE\
grep -I '
grep '(M|G)\s'
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep 'M|G'
grep "^([A-Z]|   [A-Z])"
grep ata-.*`hdparm -i /dev/sda | grep SerialNo | sed 's/.*SerialNo=//' | tr -d "\n"`.*sda$ | sed -e 's/.*ata-/ata-/' -e 's|[ ].*||' | tr -d "\n"
grep '^
grep -v  '(\t)?#.*|^$' /etc/apache2/sites-available/default
grep '^./.*\.' |sed -e "s/\(^.*\.\)\(.*$\)/\2/" |sort |uniq
grep '"ip"' | cut -f2 -d ">" | egrep -o '[0-9.]+'
grep '^#define EX_.*' /usr/include/sysexits.h  | sed -e 's/#define/declare -r/g' | sed 's/\//#/g' | sed -e 's/\s\{1,\}/ /g' | sed -e 's/ \([0-9]\)/\=\1/'g )
grep '^file|^desc|^dep' | sed -e'/^dep/s/$/\n/g'
grep \"(call|channel)\""
grep -o '(http|https)
grep `hostname` | grep -o ">[^
grep regex
grep_escape() {  echo "$1" |sed -re 's/([\\.*+?(|)^$[])/\\\1/g' -e 's/\{/[{]/g';  }
grep '.*(("STATUS)|("HEAD)).*' http_access.2012.07.18.log | awk '{sum+=$11; ++n} END {print "Tot="sum"("n")";print "Avg="sum/n}'
grep 'ServerAlias|ServerName' /etc/apache2/sites-enabled/*.conf | awk '{printf "%s\t%s\n",$2,$3}' | sed 's/www.//' | sort | uniq
grep
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep
grep -Hn -E "043[eE]|70[Dd]7" \{\} \;
--
grep '(ESSID|Signal|Address)'| \sed -e 's/Cell  - Address
grep -v -e "\/$" | tr '\n' '\0' | xargs -0 svn blame | awk '{print $2}' | sort | uniq -c | sort -nr
grep 2 words existing on the same line
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -v "(^#|^\b*$)"
grep "\ $DATE\
grep -I '
grep '(M|G)\s'
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep 'M|G'
grep "^([A-Z]|   [A-Z])"
grep ata-.*`hdparm -i /dev/sda | grep SerialNo | sed 's/.*SerialNo=//' | tr -d "\n"`.*sda$ | sed -e 's/.*ata-/ata-/' -e 's|[ ].*||' | tr -d "\n"
grep '^
grep -v  '(\t)?#.*|^$' /etc/apache2/sites-available/default
grep '^./.*\.' |sed -e "s/\(^.*\.\)\(.*$\)/\2/" |sort |uniq
grep '"ip"' | cut -f2 -d ">" | egrep -o '[0-9.]+'
grep '^#define EX_.*' /usr/include/sysexits.h  | sed -e 's/#define/declare -r/g' | sed 's/\//#/g' | sed -e 's/\s\{1,\}/ /g' | sed -e 's/ \([0-9]\)/\=\1/'g )
grep '^file|^desc|^dep' | sed -e'/^dep/s/$/\n/g'
grep \"(call|channel)\""
grep -o '(http|https)
grep `hostname` | grep -o ">[^
grep regex
grep_escape() {  echo "$1" |sed -re 's/([\\.*+?(|)^$[])/\\\1/g' -e 's/\{/[{]/g';  }
grep '.*(("STATUS)|("HEAD)).*' http_access.2012.07.18.log | awk '{sum+=$11; ++n} END {print "Tot="sum"("n")";print "Avg="sum/n}'
grep 'ServerAlias|ServerName' /etc/apache2/sites-enabled/*.conf | awk '{printf "%s\t%s\n",$2,$3}' | sed 's/www.//' | sort | uniq
grep
grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass
grep
grep -Hn -E "043[eE]|70[Dd]7" \{\} \;
--
grep -E '^File' | cut -d= -f2 > di_$1.m3u")'
grep -vE '^Filesystem|tmpfs|cdrom|none' | awk '{ print $5 " " $1 }'
--
grep -v .svn ); do svn propset svn
--
grep '(M|G)\s'
--
grep
grep -e "total\|
--
grep [0-9]$i | sort -nr -k 1; done | less
--
grep total
grep '^[[
--
GREP_OPTIONS GREP_COLOR) >/dev/null 2>&1 && unset GREP_OPTIONS GREP_COLOR
--
grep -sn -i "THE_REQUEST" | sed "s/THE_REQUEST/${SMSO}\0$RMSO}/gI"
--
grep --color=always '^[0-9\.]*[GMK]'; }
--
grepp - Function that searches current directory for match
grepp()
GREP_COLOR=`echo -en "\e[1;3$(( $RANDOM % 7 + 1 ))"`
grep -i --color=always "$@" -r .
--
grepc - Function shortcut for grep with color
grepc()
GREP_COLOR=`echo -en "\e[1;3$(( $RANDOM % 7 + 1 ))"`
grep --color=always "$@"
--
grep -v ^$|sed -e '/[^ \t]\{1,\}/!d'; }
--
GREP_COLOR=`echo -en "\e[1;3$(( $RANDOM % 7 + 1 ))"`
--
grep ^Rev|sed -e 's/Revision
--
grep ${USER
grep dhapache |awk '{print $2 }'| xargs -t -ipid find /proc/pid -type f 2>$N6 | xargs -iRR cat RR
--
grep ${USER
grep -u ${U}) ); PL=$((${#PPS[@]} - 1));
--
grep -h "$@" $HISTFILEMASTER_C
--
grep -h -i "$@" $HISTFILEMASTER_C
--
GREP_COLOR=`echo -en "\e[1;3$(( $RANDOM % 7 + 1 ))"`
grep --color=always -h "$@" $HISTFILEMASTER_C
--
grep -h -i "$@" $HISTFILEMASTER
--
grep --color=always -h -i "$@" $HISTFILEMASTER
--
grep -v "^Must" |grep -v "built\|libavutil\|libavcodec\|configuration\|FFmpeg\|libavformat";
grep "shell\|executable"|sed -e 's/
--
grep/grep-2.5.4.tar.gz
--
grep -P -o "(?<=File
--
grep ^Core|while read x; do printf '% .23s\n' "$x"; done; sleep 1 && clear; done;
--
grep 2 words existing on the same line
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep
grep -e "total\|
--
grep -i /dev/null "search pharse" {} \;
--
grep -Ff- <(wget -qqO- http
--
grep -e Width -e Height -e Absolute | grep -oE "[[
--
grep 'dimensions
--
grep "^/usr/bin/X "); while [ x"$1" != x"-auth" ]; do shift; done; sudo x11vnc -display 
grep 'geometry' | awk '{print $2;}') -i 
--
grep 'geometry' | awk '{print $2;}') -r 10 -i 
--
grep 'dimensions
--
grep for process(es) by keyword" >&2
grep -i --color=auto "[${1[1]}]${1[2,-1]}"
--
grep 'inet ' | sed -e 's/
grep 'inet ' | sed -e 's/
grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en0 (IPv6)
grep 'inet ' | sed -e 's/
grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en1 (IPv6)
--
grep -i --color=auto -E "$query"
--
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep
GREP_OPTIONS='--color=auto'
GREP_COLOR='3;33'
--
grep for process(es) by keyword" >&2
grep -i --color=auto "[${1[1]}]${1[2,-1]}"
--
grep 'inet ' | sed -e 's/
grep 'inet ' | sed -e 's/
grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en0 (IPv6)
grep 'inet ' | sed -e 's/
grep 'inet6 ' | sed -e 's/ / /' | awk '{print "en1 (IPv6)
--
grep -i --color=auto -E "$query"
--
grep'
--
grep "^\."'
grep "^\."'
--
grep'
--
grep linux-image'
grep '^\.'"
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
grep -v "^#|^$"'
--
grep_logs(){
grep "$1" */logs/*.log
--
grep_1'='grep -GRh $1 ~ | sort | uniq -c | sort -nr >> $2 && tail  $2'
grep'
grep'
--
grep $1 $HOME/.zsh_history | sed 's/^.*;//g'
--
grep "
--
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
--
grep'='grep -vE "^$|^[\s]*[;#]"'
--
grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
--
grep vim'
grep zsh'
--
grep-Sony'='lsusb| grep Sony'
grep sony'
--
grep "$1" | sort -u'
--
grep'
--
grep -u murmur murmurd | head`; chomp $pid; `logger -p info -t "murmurd[$pid]" \\"$2\\"`;' &
--
grep -A 3 -i "example" demo_text
grep Chrome | perl -ne 'print "$1\n" if / (\d+)$/' | ( x=0;while read line; do (( x += $line )); done; echo $((x/1024)) );
--
grep -v -e "\/$" | tr '\n' '\0' | xargs -0 svn blame | awk '{print $2}' | sort | uniq -c | sort -nr
--
grep 2 words existing on the same line
grep -E/egrep 'word1.*word2|word2.*word1' "$@"
grep -v "(^#|^\b*$)"
grep -Fvxf $(file1) $(file2) | wc -l
--
grep -o '/'|perl -ne '$x.="./.";print`readlink -f $x`'|xargs -tn1 chmod 755
--
grep {command}
--
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
--
grep ESTABLISHED
--
grep {command}
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
grep -HRnDskip "\(passthru\|shell_exec\|system\|phpinfo\|base64_decode\|chmod\|mkdir\|fopen\|fclose\|readfile\) *(" {} \;
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
grep "^@" | sort -u; done > followlst.txt
grep -I '
grep "\-dev" | sort -n | awk '{ sum+=$1} END {print sum/1024 "MB"}'
--
grep -l foo | xargs sed -i 's/foo/bar/g'
--
grep S_IFREG|awk '{print $5}'|awk -F"
grep -i -h 'account.journal.cashbox.line' *.py
--
Grep inside Vim and navigate results {{{2
grep pattern %
--
grep -i /dev/null "search pharse" {} \;
--
grep -nH "text" -r . --include *name.xml
grep will give lot of warnings. So better use it along with find command so that softlinks are excluded. "Hn" operator will take care that both line number and filename is shown in grep output {{{2
grep -Hn "pattern" {} \;
--
grep -o '/'|perl -ne '$x.="./.";print`readlink -f $x`'|xargs -tn1 chmod 755
--
grep -i executable
--
grep -Eo "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"|uniq|xclip -selection clipboard
--
grep "\^" | tr -d ' ')
--
grep M|sort -n
--
grep TouchpadOff | awk '{print $3}') = "2" ]; then synclient TouchpadOff=1; elif [ $(synclient -l | grep TouchpadOff | awk '{print $3}') == "1" ]; then synclient TouchpadOff=2; else synclient TouchpadOff=2; fi
--
grep LANG=
--
grep "from=popular" | sed -n 's/.*<img src="\([^"]*\)".*/\1/p' | sed s/"3.jpg"/"4.jpg"/ | sed s/"?t".*$//`; do wget -O $RANDOM.jpg --quiet "$line"; done
grep .}
--
grep '<lipsum>' -A$(((p-1))) | perl -p -i -e 's/\n/\n\n/g' | sed -n '/<lipsum>/,/<\/lipsum>/p' | sed -e 's/<[^>]*>//g'
--
grep "_NET_ACTIVE_WINDOW(WINDOW)"| awk '{print $5}' xdotool windowfocus $WID xdotool key ctrl+shift+t wmctrl -i -a $WID
--
grep")
--
grep -v")
--
grep -A1 -B1")
grep for AAA and BBB and CCC (in any order)
grep for AAA and BBB and CCC (in that order)
grep for AAA or BBB or CCC (emulates "egrep")
--
grep '.' ")
--
grep
--
Grep
--
grep with sed
--
grep -v '^$' | wc -l
Grep was used to filter out (delete) empty lines. Wc counts the number of lines left. Sed has more commands that make grep unnecessary. And grep -c can replace wc -l. I'll discuss how you can duplicate some of grep's functionality later.
--
grep -v '^$' | wc -l
--
grep
--
grep
grep, combine the -n (noprint) option with the /p print flag
--
grep is
--
grep.sed
grep, you could type
grep '[A-Z][A-Z]' <file
grep command.
--
grep and substitute. That is, the substitute command is treating each line by itself, without caring about nearby lines. What would be useful is the ability to restrict the operation to certain lines. Some useful restrictions might be
--
grep by combining the print operator to function on all lines that match a regular expression
--
grep match
--
grep command. The "-v" option to grep prints all lines that don't contain the pattern. Sed can do this with
--
grep, 
grep 'PATTERN' | awk '{print $1}'
--
Grep
grep as it shows you the lines that match a pattern. In addition, it shows you the line before and after the pattern. That is, if line 8 contains the pattern, this utility would print lines 7, 8 and 9.
--
grep3 - prints out three lines around pattern
--
grep3.sh
--
grep3 vt100 </etc/termcap
--
grep3 version b - another version using the hold commands
--
grep3a.sh
--
grep_previous.sh
grep. In this example, the program prints out the two lines before the pattern, instead of a single line. The method to limit this to two lines is to use the "s" command to keep one new line, and deleting extra lines. I call it grep4
--
grep4
--
grep4.sh
--
grep3" command. It works just like the previous one, but is implemented differently. This illustrates that sed has more than one way to solve many problems. What is important is you understand your problem, and document your solution
--
grep3 version c
--
grep3c.sh
--
grep_paragraph.sh
--
grep4 script I described earlier, but without the comments or error checking and with semicolons between commands
--
grep4a.sh
--
grep - GNU grep, egrep and fgrep
--
grep - text search tool with support for approximate patterns
grep - grep-like program specifically for large source trees
grep - Bazaar plugin to grep files and history
grep - search in OCaml compiled interface files
--
grep - Tool to help recover deleted files on ext3 filesystems
grep
grepcidr - Filter IP addresses matching IPv4 CIDR/network specification
grepmail - search mailboxes for mail matching an expression
--
grep-ocaml - Wu-Manber algorithm for string searching with errors
grep-ocaml-dev - Wu-Manber algorithm for string searching with errors
--
grep - Grep through mailboxes
--
grep - grep for network traffic
--
grep - grep utility that uses perl 5 compatible regexes.
grep - search in pdf files for strings matching a regular expression
--
grep
grep tools
grep - tool to search a file for structured pattern
grepper - search and match tags of audio files against regular expressions
grep - approximate grep utility based on the tre library
--
grep - A grep-like utility for XML files
--
grep")
--
grep -v")
--
grep -A1 -B1")
grep for AAA and BBB and CCC (in any order)
grep for AAA and BBB and CCC (in that order)
grep for AAA or BBB or CCC (emulates "egrep")
--
grep '.' ")
--
grep "_raid|_resync|jbd2"`)
--
grep.txt
--
grep sed
--
grep.txt
--
grep_all_alias
--
grep and GNU awk). For your
--
grep -o "http\S*.com/dl/\?f=\w*"`;do aria2c "${u}";done;done;done
--
grep "title>"|sed -e '/^\// d' -e 's/title>/---------- /g' -e '1,3d'|tr '\n' ' ')";for i in $(eval echo {0..${#n}});do echo -ne "\e[s\e[0;0H${n
Grep Options
--
grep "\^" | tr -d ' ')
--
grep "http
--
grep mp3$  | xargs`
--
grep -c ^processor /proc/cpuinfo)" | bc) -eq 1 ]; do sleep 10; done; my-command > output.txt ) & )
--
grep -o 'http\
--
grep -v "\["`;)" ssh
--
grep "^ABC"  | tr "~" "\n"
--
grep ip | sed 's/ip//'| sort | uniq
--
grep . | wc -l
--
grep -Pv '^ ?$'
--
grep url | awk -F"," '{ print $1 }'| sed -e "s/url
--
grep 'http'
grep "[0-9A-Fa-f]\{16\}" | wc -l` == 1 ]; then echo "$libquery is a 64 bit library"; else echo "$libquery is a 32 bit library"; fi;
--
grep -i http
--
grep 's="1"' | sed 's/^.*;\([^\t]*\).*$/\1/'; }
grep "_raid|_resync|jbd2"`)
--
grep ^- use | sed s/^-// | sed '
--
grep '^!' | sed -e 's/^! */svn delete "/g' -e 's/$/"/g'|sh
--
grep -E -v '^(r[0-9]|---|$)' | sed 's/^/* /g'
--
grep -q '[a-zA-Z0-9/.
--
grep -v "^\ \ *$"
--
grep.'"$1"'/d' |while read a;do printf ${a%% *}' ';printf "${a#* }" >&2;printf '\n';done;}
--
grep -v "<current directory>"
--
grep.'"$1"'/d' |while read a;do printf ${a%% *}' ';printf "${a#* }" >&2;printf '\n';done;}
--
grep oldname@example.com -rl .`
--
grep
--
grep -nm 1 match file|cut -f1 -d
--
grep "$msg" ; done ; }
--
grep images|xargs wget
--
grep \| | awk  '{ print $1 }'
--
grep '^http' |clive
--
grep -v ^[A-Z]
--
grep -o -E '([[
--
grep '^.\/|^URL'
--
grep media
--
grep -v '^$'
--
grep log|sed 's/[^/]* //g'|xargs -r tail -f
--
grep -o '\.[^.]*$'|sort -f|uniq -i
--
grep -i "${*}" |sed "s@^@$L/@" ; done ; }
--
grep datadir | tr '=' ' ' | gawk '{print $2;}'` && ( cd $DD ; find . -mindepth 2 | grep -v db\.opt | sed 's/\.\///g; s/\....$//g; s/\//./;' | sort | uniq | tr '/' '.' | gawk '{print "CHECK TABLE","`"$1"`",";";}' )
--
grep", "awk", "time", "case", "menu", "curl", "rename", "xclip", "keymaps"]
grep", "awk", "time", "case", "menu", "curl", "rename", "xclip", "keymaps"]
--
grep
--
grep images|xargs wget
--
grep '^http' |clive
--
grep
--
grep --color=always '^[0-9\.]*[GMK]'; }
--
--
grep "\^" | tr -d ' ')
--
grep
--
grep with sed
--
grep -v '^$' | wc -l
Grep was used to filter out (delete) empty lines. Wc counts the number of lines left. Sed has more commands that make grep unnecessary. And grep -c can replace wc -l. I'll discuss how you can duplicate some of grep's functionality later.
grep -v '^$' | wc -l
--
grep
--
grep is
--
grep.sed
grep, you could type
grep '[A-Z][A-Z]' <file
grep command.
--
grep and substitute. That is, the substitute command is treating each line by itself, without caring about nearby lines. What would be useful is the ability to restrict the operation to certain lines. Some useful restrictions might be
--
grep by combining the print operator to function on all lines that match a regular expression
--
grep4 script I described earlier, but without the comments or error checking and with semicolons between commands
--
grep.txt +alias zz='vim $HOME/.oh-my-zsh/lib/aliases.zsh &amp;&amp; source $HOME/.oh-my-zsh/lib/aliases.zsh' + +alias zzzz=' vim $HOME/.zshrc' +alias zzzzz='source $HOME/.zshrc' + + +function walw { +#USB storage +rsync -avz --progress /home/bani/.oh-my-zsh/lib/aliases.zsh /media/Transcend/tools/w/vimrc.local +rsync -avz --progress /home/bani/.oh-my-zsh/lib/aliases.zsh /media/Transcend/tools/w/aliases.zsh +#repo +rsync -avz --progress /home/bani/.vimrc.local $HOME/zdotfiles/Tools/2/vimrc.local +rsync -avz --progress /home/bani/.oh-my-zsh/lib/aliases.zsh $HOME/zdotfiles/Tools/1/aliases.zsh +cd $HOME/zdotfiles &amp;&amp; aa +alw; +} +alias lh='ls -a | egrep &quot;^\.&quot;' +alias lhd='ls -A | egrep &quot;^\.&quot;' +# +##################################### +alias 'wWcll'='clear;pwd;ls;date -R;echo $PWD' + +################################# +# rsync +# + +#rsync mobile +alias wzi='rsync -e ssh -r --progress root@zphone.local
--
grep media
--
grep -E "due\([0]*($THISMO|$NEXTMO|$LASTMO)+.+\)" "$line" | while read -r match; do
grep -o '[0-9]\{1,2\}-[0-9]\{1,2\}-[0-9]\{2\}')
--
grep -E "due\([0]*($THISMO|$NEXTMO|$LASTMO)+.+\)" | while read -r match; do
grep -o '[0-9]\{1,2\}-[0-9]\{1,2\}-[0-9]\{2\}')
--
grep -E '(^[^0-9][0-9]+|^[0-9]{1}|^1[0-4]+) days'
--
grep(items,function(item){return that.matcher(item)}),items=this.sorter(items),items.length?this.render(items.slice(0,this.options.items)).show()
--
grep(xaxes.concat(yaxes), function (a) { return a; });
--
grep(all, function (a) {
--
grep(all, function (a) {
--
grep(axes, function (axis) { return axis.reserveSpace; });
--
grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML))
--
grep(items,function(item){return that.matcher(item)}),items=this.sorter(items),items.length?this.render(items.slice(0,this.options.items)).show()
--
grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML))
--
grep(items,function(item){return that.matcher(item)}),items=this.sorter(items),items.length?this.render(items.slice(0,this.options.items)).show()
--
grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML))
--
grep -f $prog | tail -1`
--
grep -f $prog | grep -v $$`"
--
grep -f $prog | head -1`"
--
grep -af $prog
--
grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
--
grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
--
grep '^Signed-off-by
--
grep $prog | tail -1`
--
grep $prog | grep -v $$` 2>/dev/null
grep $prog | head -1`
--
grep "$2" | sort -n | uniq*/
--
grep "web2py.*-R" | grep -v grep | sed "s/^ *//;s/  */ /g" | cut -d\  -f1)
--
grep "^ .*" | tr '\n' ' ' > 
grep "^ .*" | tr '\n' ' ' > 
grep "^ .*" | tr '\n' ' ' 
grep "^ .*" | tr '\n' ' ' > 
--
grep "^ .*" | tr '\n' ' ' > 
--
grep "^ .*" | tr 
--
grep'
grep'
--
grep "^\."'
grep "^\."'
grep "^\."'
--
grep'
--
grep linux-image'
grep '^\.'"
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
--
grep -v "^#|^$"'
--
grep'
grep'
--
grep "^\."'
grep "^\."'
grep "^\."'
--
grep'
--
grep linux-image'
grep '^\.'"
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
--
grep -v "^#|^$"'
--
grep'
grep'
grep.txt
--
grep "^\."'
grep "^\."'
--
grep'
--
grep linux-image'
grep '^\.'"
grep "^\.\(.*\)n$"'
--
grep -v -e "^$" -e"^ *#"'
--
grep='grep --color=always'
--
grep'
--
grep='grep --color=auto'
--
grep php'
--
grep --color=auto'
--
grep -o '\''inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9
--
grep ^d'
--
grep inet6'
--
grep ^d'
--
grep LISTEN'
grep -c "^>"'
--
grep -v grep|grep "$@"'
grep '
--
grep'
--
grep -v "^#|^$"'
--
grep "^ .*" | tr '\n' ' ' > ~/backed_up_package_list
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
grep -o "inet addr
--
grep "^0.0.0.0" | awk '{print $8}') | awk -F
grep default|awk '{ print $8 }')|grep 'inet addr
--
grep "^0." | awk '{print "Gateway to the Word
grep inet | awk '{print $2}' | cut -d '
--
grep_logs(){
grep "$1" */logs/*.log
--
grep_1'='grep -GRh $1 ~ | sort | uniq -c | sort -nr >> $2 && tail  $2'
grep'
grep'
--
grep $1 $HOME/.zsh_history | sed 's/^.*;//g'
--
grep iPhone | cut -d ' ' -f 4 | sed 's/
--
grep -o "[0-9A-Z]{16}"
grep --color=auto 'usb|' /var/log/messages
--
grep -vE "(gvfs|procbususb|rootfs)"
--
grep sixad
--
grep sixad", 
--
grep Sony", 
--
grep Sony
--
grep Sony", 
--
grep Sony
--
grep Sony.txt
--
grep --color=auto 'usb|' /var/log/messages
--
grep iPhone | cut -d ' ' -f 4 | sed 's/
--
grep -o "[0-9A-Z]{16}"
grep -vE "(gvfs|procbususb|rootfs)"
grep Sony.txt
grep iPhone | cut -d ' ' -f 4 | sed 's/
--
grep -o "[0-9A-Z]{16}"
grep --color=auto 'usb|' /var/log/messages
--
grep -vE "(gvfs|procbususb|rootfs)"
--
grep --color=auto 'usb|' /var/log/messages
--
grep iPhone | cut -d ' ' -f 4 | sed 's/
--
grep -o "[0-9A-Z]{16}"
grep -vE "(gvfs|procbususb|rootfs)"
--
grep -e "PLAYSTATION(R)3 Controller" -e "PLAYSTATION(R)3 Remote" -e "Wireless Keypad" -e "new interface driver btusb" -e "054C
--
grep iPhone | cut -d ' ' -f 4 | sed 's/
--
grep -o "[0-9A-Z]{16}"
grep --color=auto 'usb|' /var/log/messages
--
grep -vE "(gvfs|procbususb|rootfs)"
--
grep %filename .svn/entries 2>&1 >/dev/null ; then
grep %filename CVS/Entries 2>&1 >/dev/null ; then
grep %filename 2>&1 >/dev/null ; then
--
grep %filename CVS/Entries > /dev/null ; then
--
grep "smmsp" 
--
grep %filename CVS/Entries > /dev/null ; then
--
grep MemTotal /proc/meminfo
grep MemFree /proc/meminfo
--
grep on
--
grep 8000
--
grep
--
grep", 
--
grep
--
grep", 
--
grep web2py", 
--
grep web2py
--
grep "^xserver" | tr '\n' ' ')
--
grep")
--
grep -v")
--
grep -A1 -B1")
grep for AAA and BBB and CCC (in any order)
grep for AAA and BBB and CCC (in that order)
grep for AAA or BBB or CCC (emulates "egrep")
--
grep '.' ")
--
grep "^xserver" | tr '\n' ' ')
--
grep sixad
grep -c -l sixad
grep -c -r sixad
grep -c sixad
grep -c sixad<
grep -c sixad<*
grep -l -c sixad
--
grep -R -H sixad
grep -r -P "(sixad|alias)" 
--
grep sixad
--
grep sixad
grep sixad
grep  "sixad"
grep sixad
grep sixad
grep sixad | awk '{print $2 }' 
grep sixad
grep sixad
grep sixad*
--
grep sixad
grep sixad
--
grep sixad-bin > /dev/null
--
grep sixad
grep sixad
--
grep sixad
grep sixad
grep sixad
--
grep sixad-bin
--
grep' +alias al='alias | grep' +#www wbani.unsettings | sed '/youtube/d' +#ag -i $1 ./abobani/clf-ALL.txt | sort -n | uniq --ignore-case &gt;&gt; zwgrep.txt +alias zz='vim $HOME/.oh-my-zsh/lib/aliases.zsh &amp;&amp; source $HOME/.oh-my-zsh/lib/aliases.zsh' + +alias zzzz=' vim $HOME/.zshrc' +alias zzzzz='source $HOME/.zshrc' + + +function walw { +#USB storage +rsync -avz --progress /home/bani/.oh-my-zsh/lib/aliases.zsh /media/Transcend/tools/w/vimrc.local +rsync -avz --progress /home/bani/.oh-my-zsh/lib/aliases.zsh /media/Transcend/tools/w/aliases.zsh +#repo +rsync -avz --progress /home/bani/.vimrc.local $HOME/zdotfiles/Tools/2/vimrc.local +rsync -avz --progress /home/bani/.oh-my-zsh/lib/aliases.zsh $HOME/zdotfiles/Tools/1/aliases.zsh +cd $HOME/zdotfiles &amp;&amp; aa +alw; +} +alias lh='ls -a | egrep &quot;^\.&quot;' +alias lhd='ls -A | egrep &quot;^\.&quot;' +# +##################################### +alias 'wWcll'='clear;pwd;ls;date -R;echo $PWD' + +################################# +# rsync +# + +#rsync mobile +alias wzi='rsync -e ssh -r --progress root@zphone.local
--
grep -e "PLAYSTATION(R)3 Controller" -e "PLAYSTATION(R)3 Remote" -e "Wireless Keypad" -e "new interface driver btusb" -e "054C
--
grep "OUT OF STOCK"`" ]
--
grep "$txt"`" ]; do
--
grep 'fullcount' | grep -o '[0-9]\+')";tput rc; done &
--
grep '@href' | cut -d\= -f 2- | sort | uniq | linkchecker -r0 --stdin --complete -v -t 50 -F blacklist
--
grep -v -e "\/$" | tr '\n' '\0' | xargs -0 svn blame | awk '{print $2}' | sort | uniq -c | sort -nr
--
grep "^@" | sort -u; done > followlst.txt
--
grep -o '\..\+$' | sort | uniq -c | sort -rn
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep">How to edit all the files containing a given word using the built-in grep</a>
--
grep</i>
--
grep -l indentation_level *.c`</b>
grep -l indentation_level *.c</u></tt> 
--
grep">How to edit all the files containing a given word using the built-in grep</a></h2>
--
grep <i>&gt;word&lt;</i> <i>&gt;file-list&lt;</I>
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep searching and cope displaying
--
grep searching and cope displaying
grep after the selected text
grep and put the cursor in the right position
grep // **/*.<left><left><left><left><left><left><left>
greps in the current file
grep // <C-R>%<C-A><right><right><right><right><right><right><right><right><right>
--
grep, display your results in cope by doing
--
grep " . '/'. l
--
grep -I '
--
grep differ | awk '{ print $2, $4 }' | xargs -n 2 gvim --nofork -d
--
grep '\.sw.' -A 5 | grep 'still running' -B 5
--
grep "Only in" | sed -e 's/^.*\
--
grep -Fvf file1 file2 > file-new
--
grep">How to edit all the files containing a given word using the built-in grep</a>
--
grep</i>
--
grep -l indentation_level *.c`</b>
grep -l indentation_level *.c</u></tt> 
--
grep">How to edit all the files containing a given word using the built-in grep</a></h2>
--
grep <i>&gt;word&lt;</i> <i>&gt;file-list&lt;</I>
--
Grep inside Vim and navigate results
grep pattern %
--
grep modified | awk '{print $3}'`
grep [REGULAR_EXPRESSION] -R * | cut -d"
grep -rl string_to_find  public_html/css/ | xargs -I '{}' vim +/string_to_find  {} -c "
--
grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML))
--
grep.                  (metacharacters)  
--
grep.                  (metacharacters)  
--
grep '(ESSID|Signal|Address)'| \sed -e 's/Cell  - Address
--
grep -oP '\/url\?q=.+?&amp' | sed 's|/url?q=||; s|&amp||'); echo -e "${stream//\%/\x}"; }
grep "
grep -oP '\/url\?q=.+?&amp' | sed 's/\/url?q=//;s/&amp//'); echo -e "${stream//\%/\x}"
--
grep media
grep "62]#" | sed 's/\[62\]//g'
grep usr/sbin/sshd|sed 's,usr,/usr,'|md5sum -c
--
grep -E '^File' | cut -d= -f2 > di_$1.m3u")'
--
grep "^ebay" file.txt  
--
grep (win32 or *nix)
grep somestring *.php     
grep
grep with copen                              [N]
grep /keywords/ *.php
--
grep HELP Files use 
grep edit.*director
--
grep
grep some_keyword *.c            
--
grep_cmds.sh
--
grep_cmds.sh
--
grep_dep_packages
--
grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
--
grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
--
grep '^Signed-off-by
--
grep & sed
--
grep & sed
