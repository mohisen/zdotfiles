# commandlinefu.com by David Winterbottom

# Create thumbnails and a HTML page for listing them (with links to sources)
mogrify  -format gif -define jpeg:size=500x180 -auto-orient -thumbnail 250x90 '*.jpg' && (echo "<ul>"; for i in *.gif; do basename=$(echo $i | rev | cut -d. -f2- | rev) ; echo "<li><a href='$basename.jpg'><img src='$basename.gif'></a>"; done) > list.html

# Show sizes and calculate sum of all files found by find
find -name *.bak -print0 | du -hc --files0-from=-

# Display the human-readable sizes of all files and folders in the current directory with 3 decimal places
du -Lsbc * |awk 'function hr(bytes){hum[1024**4]="TiB";hum[1024**3]="GiB";hum[1024**2]="MiB";hum[1024]="kiB";for(x=1024**4;x>=1024;x/=1024){if(bytes>=x){return sprintf("%8.3f %s",bytes/x,hum[x]);}}return sprintf("%4d     B",bytes);}{print hr($1) "\t" $2}'

# Graphically show percent of mount space used
for m in `df -P | awk -F ' ' '{print $NF}' | sed -e "1d"`;do n=`df -P | grep "$m$" | awk -F ' ' '{print $5}' | cut -d% -f1`;i=0;if [[ $n =~ ^-?[0-9]+$ ]];then printf '%-25s' $m;while [ $i -lt $n ];do echo -n '=';let "i=$i+1";done;echo " $n";fi;done

# list each file/directory size in a directory
ls | xargs -I{} du -sh {}

# List your largest installed packages (on Debian/Ubuntu)
dpkg-query --show --showformat='${Package;-50}\t${Installed-Size}\n' `aptitude  --display-format '%p' search '?installed!?automatic'` | sort -k 2 -n | grep -v deinstall | awk '{printf "%.3f MB \t %s\n", $2/(1024), $1}'

# directory size with subdirectories, sorted list
du -m --max-depth=1 [DIR] | sort -nr

# sort and show disk space (largest first) with human readable sizes
du -hs `du -sk * | sort -rn | cut -f2-`

# Summary of disk usage, excluding other filesystems, summarised and sorted by size
du -xks * | sort -n

# List the Sizes of Folders and Directories
du -hs /path/to/folder/*

# purge half of files in backup directory
find . | sort | awk 'NR%2==0' | xargs rm $1

# List the Sizes of Folders and Directories
du -h --max-depth=1 /path/folder/

# Batch resize all images to a width of 'X' pixels while maintaing the aspect ratio
mogrify -resize SIZE_IN_PIXELS *.jpg

# get size of a file
ls -lh file-name | awk '{ print $5}'

# Space used by files listed by ls -lt
ls -lt | awk '{sum+=$5} END {print sum}'

# MEMORY DUMP ACROSS NETWORK 4 CYGWIN
wmr - | pv -s $SIZEOFMEM  | ssh -p 40004 -c arcfour,blowfish-cbc -C root@savelocation.com "cat - > /forensics/T430-8gb-RAM1.dd"

# list the top 15 folders by decreasing size in MB
du -mx [directory] | grep -P '^\d{4}' | sort -rn

# list the top 15 folders by decreasing size in MB
du -xB M --max-depth=2 /var | sort -rn | head -n 15

# Display sorted, human readable list of file and folders sizes in your current working directory
du -had 1 | sort -h

# Convert an SVG to png and crush filesize
svg2png(){ png="${1%.*}.png"; inkscape --export-png="$png" --without-gui "$1" && pngcrush -brute -rem alla -rem text "$png" "$png.new" && mv "$png.new" "$png";}

# List directories sorted by (human readable) size
du -h --time --max-depth=1 | sort -hr

# list all files are greater than 10mb
ls -lahS $(find / -type f -size +10000k)

# If your disk space Used =100% displayed even after deleting the files generated the below command then Just REBOOT the System .
dd if=/dev/zero of=/fs/to/fill/dummy00 bs=8192 count=$(df --block-size=8192 / | awk 'NR!=1 {print $4-100}')

# Scan a document to PDF
scanimage -p --resolution 250 --mode Gray -x 215.9 -y 279.4 | pnmtops -imageheight 11 -imagewidth 8.5 | ps2pdf - output.pdf

# Find files with size over 100MB and output with better lay-out
print -rl **/*(.Lm+100)

