../0/sixaxis/python_sixad.txt:1:sudo apt-get install python-usb python-pyudev python-bluez
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:8:  <meta name="keywords" lang="en" content="sixaxis,ubuntu,debian,linux,ps3,pad,controller,Sony,PlayStation,joystick,bluez,bluez 4,hid,pairing,usb,sixpair">
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:98:Jul 19 19:02:09 jin kernel: [35938.801973] input: Sony PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1.2/1-1.2:1.0/input/input16
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:99:Jul 19 19:02:09 jin kernel: [35938.802939] sony 0003:054C:0268.0005: input,hiddev0,hidraw1: USB HID v1.11 Joystick [Sony PLAYSTATION(R)3 Controller] on usb-0000:00:1a.0-1.2/input0
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:100:Jul 19 19:02:09 jin kernel: [35938.851918] usbcore: registered new interface driver usbhid
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:101:Jul 19 19:02:09 jin kernel: [35938.851926] usbhid: USB HID core driver
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:102:Jul 19 19:02:55 jin kernel: [35984.370375] usb 1-1.2: USB disconnect, device number 4
../0/sixaxis/SIXAXIS pad over Bluetooth on Ubuntu Precise.html:103:Jul 19 19:02:58 jin kernel: [35987.737375] input: PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.3/2-1.3:1.0/bluetooth/hci0/hci0:11/input17
../References/sbackup.sh:4:LOCAL_PATH=/mnt/usb_storage/shared/0_UnderBackup/
../References/sbackup.sh:7:SCRIPT_PATH=/mnt/usb_storage/shared/script/
../References/bp_zsh_history:2663:gcc -o sixpair sixpair.c -lusb
../References/bp_zsh_history:2664:gcc --std=gnu99 -Wall linmctool-20110304.c -lusb -o linmctool 
../References/bp_zsh_history:5534:sudo apt-get install bluez-utils bluez-compat bluez-hcidump checkinstall libusb-dev  libbluetooth-dev joystick
../References/history_bkp:146:: 1368257818:0;sudo apt-get install libusb-dev libusb-0.1-4
../1/01/w_diff:2:diff <(lsusb) <(sleep 3s && lsusb)
../1/01/R_w_functions.zsh:2092:lsusb () {
../1/01/R_w_functions:2092:_lsusb () {
../Tools/3/Kde/Krusaderw.keymap:85:options_show_statusbar=none
../6/qtsixad/qtsixad/lsusb grep Sony.txt:1:lsusb |grep Sony
../6/qtsixad/qtsixad/how to start.txt:10:You can check if the sixaxis is properly connected with 'lsusb', and the bluetooth dongle with 'hcitool dev'.
../6/qtsixad/qtsix_commands:10:then disconnect the sixaxis (usb cable)
../6/ww_xorg:4:        Option          "Device"        "/dev/input/by-id/usb-Sony_PLAYSTATION_R_3_Controller-event-joystick"
../1/01/all_cmds:637:# Find usb device
../1/01/all_cmds:638:diff <(lsusb) <(sleep 3s && lsusb)
../1/01/all_cmds:3694:# Remount a usb disk in Gnome without physically removing and reinserting
../1/01/all_cmds:5829:egrep --color=auto 'usb|' /var/log/messages
../1/01/all_cmds:7512:# Blacklist usb storage
../1/01/all_cmds:7513:blacklist usb_storage >> /etc/modprobe.d/blacklist.conf
../1/01/all_cmds:7659:sudo mount -t vfat -o umask=000,uid=YOUR_UID,gid=users /dev/sdb1 /media/usb
../1/01/all_cmds:8155:lsusb -s :`lsusb | grep iPhone | cut -d ' ' -f 4 | sed 's/://'` -v | grep iSerial | awk '{print $3}'
../1/01/all_cmds:8500:# send a .loc file to a garmin gps over usb
../1/01/all_cmds:8501:gpsbabel -D 0 -i geo -f "/path/to/.loc" -o garmin -F usb:
../1/01/all_cmds:9483:ls -la /dev/disk/by-id/usb-*
../1/01/all_cmds:11291:scanimage -d mustek_usb --resolution 100 --mode Color > image.pnm
../1/01/all_cmds:11363:# Display usb power mode on all devices
../1/01/all_cmds:11364:for i in `find /sys/devices/*/*/usb* -name level` ; do echo -n "$i: " ; cat $i ; done
../1/01/all_cmds:18320:# Remove the boot loader from a usb stick
../1/01/all_cmds:24756:lsusb -v | grep -o "[0-9A-Z]{16}"
../1/01/all_cmds:25638:df -x tmpfs | grep -vE "(gvfs|procbususb|rootfs)"
../6/qtsixad/Install_qtsixad/how to start.txt:10:You can check if the sixaxis is properly connected with 'lsusb', and the bluetooth dongle with 'hcitool dev'.
../6/qtsixad/Install_qtsixad/lsusb grep Sony.txt:1:lsusb |grep Sony
../6/usbCMDs.sh:9:# Blacklist usb storage
../6/usbCMDs.sh:10:blacklist usb_storage >> /etc/modprobe.d/blacklist.conf
../6/usbCMDs.sh:13:lsusb -s :`lsusb | grep iPhone | cut -d ' ' -f 4 | sed 's/://'` -v | grep iSerial | awk '{print $3}'
../6/usbCMDs.sh:15:# Find usb device
../6/usbCMDs.sh:16:diff <(lsusb) <(sleep 3s && lsusb)
../6/usbCMDs.sh:22:sudo mount -t vfat -o umask=000,uid=YOUR_UID,gid=users /dev/sdb1 /media/usb
../6/usbCMDs.sh:28:ls -la /dev/disk/by-id/usb-*
../6/usbCMDs.sh:31:lsusb -v | grep -o "[0-9A-Z]{16}"
../6/usbCMDs.sh:34:egrep --color=auto 'usb|' /var/log/messages
../6/usbCMDs.sh:37:scanimage -d mustek_usb --resolution 100 --mode Color > image.pnm
../6/usbCMDs.sh:39:# send a .loc file to a garmin gps over usb
../6/usbCMDs.sh:40:gpsbabel -D 0 -i geo -f "/path/to/.loc" -o garmin -F usb:
../6/usbCMDs.sh:42:# list connected usb devices
../6/usbCMDs.sh:43:lsusb
../6/usbCMDs.sh:48:# Display usb power mode on all devices
../6/usbCMDs.sh:49:for i in `find /sys/devices/*/*/usb* -name level` ; do echo -n "$i: " ; cat $i ; done
../6/usbCMDs.sh:52:df -x tmpfs | grep -vE "(gvfs|procbususb|rootfs)"
../References/All_cmdsw:637:# Find usb device
../References/All_cmdsw:638:diff <(lsusb) <(sleep 3s && lsusb)
../References/All_cmdsw:3694:# Remount a usb disk in Gnome without physically removing and reinserting
../References/All_cmdsw:5829:egrep --color=auto 'usb|' /var/log/messages
../References/All_cmdsw:7512:# Blacklist usb storage
../References/All_cmdsw:7513:blacklist usb_storage >> /etc/modprobe.d/blacklist.conf
../References/All_cmdsw:7659:sudo mount -t vfat -o umask=000,uid=YOUR_UID,gid=users /dev/sdb1 /media/usb
../References/All_cmdsw:8155:lsusb -s :`lsusb | grep iPhone | cut -d ' ' -f 4 | sed 's/://'` -v | grep iSerial | awk '{print $3}'
../References/All_cmdsw:8500:# send a .loc file to a garmin gps over usb
../References/All_cmdsw:8501:gpsbabel -D 0 -i geo -f "/path/to/.loc" -o garmin -F usb:
../References/All_cmdsw:9483:ls -la /dev/disk/by-id/usb-*
../References/All_cmdsw:11291:scanimage -d mustek_usb --resolution 100 --mode Color > image.pnm
../References/All_cmdsw:11363:# Display usb power mode on all devices
../References/All_cmdsw:11364:for i in `find /sys/devices/*/*/usb* -name level` ; do echo -n "$i: " ; cat $i ; done
../References/All_cmdsw:18320:# Remove the boot loader from a usb stick
../References/All_cmdsw:24756:lsusb -v | grep -o "[0-9A-Z]{16}"
../References/All_cmdsw:25638:df -x tmpfs | grep -vE "(gvfs|procbususb|rootfs)"
../6/AK_tazjel/w/Shell/System infomation....txt:11:lsusb -tv
../6/ls_all_usb_mouse_kbd_by_id:9:usb-062a_0000-event-mouse
../6/ls_all_usb_mouse_kbd_by_id:10:usb-062a_0000-mouse
../6/ls_all_usb_mouse_kbd_by_id:11:usb-Dell_Dell_USB_Entry_Keyboard-event-kbd
../6/ls_all_usb_mouse_kbd_by_id:12:usb-HOLTEK_USB_Keyboard-event-kbd
../6/ls_all_usb_mouse_kbd_by_id:13:usb-HOLTEK_USB_Keyboard-if01-event-mouse
../6/ls_all_usb_mouse_kbd_by_id:14:usb-HOLTEK_USB_Keyboard-if01-mouse
../6/ls_all_usb_mouse_kbd_by_id:15:usb-Logitech_USB_Optical_Mouse-event-mouse
../6/ls_all_usb_mouse_kbd_by_id:16:usb-Logitech_USB_Optical_Mouse-mouse
../6/ls_all_usb_mouse_kbd_by_id:17:usb-Sony_PLAYSTATION_R_3_Controller-event-joystick
../6/ls_all_usb_mouse_kbd_by_id:18:usb-Sony_PLAYSTATION_R_3_Controller-joystick
../6/ls_all_usb_mouse_kbd_by_id:23:pci-0000:00:1a.0-usb-0:1.3:1.0-event-kbd
../6/ls_all_usb_mouse_kbd_by_id:24:pci-0000:00:1a.0-usb-0:1.3:1.1-event-mouse
../6/ls_all_usb_mouse_kbd_by_id:25:pci-0000:00:1a.0-usb-0:1.3:1.1-mouse
../6/ls_all_usb_mouse_kbd_by_id:26:pci-0000:00:1d.0-usb-0:1.2:1.0-event-joystick
../6/ls_all_usb_mouse_kbd_by_id:27:pci-0000:00:1d.0-usb-0:1.2:1.0-joystick
../6/ls_all_usb_mouse_kbd_by_id:28:pci-0000:00:1d.0-usb-0:1.6:1.0-event-mouse
../6/ls_all_usb_mouse_kbd_by_id:29:pci-0000:00:1d.0-usb-0:1.6:1.0-mouse
../6/ls_all_usb_mouse_kbd_by_id:30:pci-0000:00:1d.0-usb-0:1.7:1.0-event-mouse
../6/ls_all_usb_mouse_kbd_by_id:31:pci-0000:00:1d.0-usb-0:1.7:1.0-mouse
../6/ls_all_usb_mouse_kbd_by_id:32:pci-0000:00:1d.0-usb-0:1.8:1.0-event-kbd
../6/6_bash_python_cmds_sixaxis:26:Filter='grep -e "PLAYSTATION(R)3 Controller" -e "PLAYSTATION(R)3 Remote" -e "Wireless Keypad" -e "new interface driver btusb" -e "054C:0268" -e "054C:03A0" -e "054C:0306" -e "0079:0006"'
../6/6_bash_python_cmds_sixaxis:79:	    elif ("new interface driver btusb" in final_dmesg):
../6/dmesg_all:401:[    1.108671] usbcore: registered new interface driver usbfs
../6/dmesg_all:402:[    1.108678] usbcore: registered new interface driver hub
../6/dmesg_all:403:[    1.108690] usbcore: registered new device driver usb
../6/dmesg_all:647:[    1.786600] usbcore: registered new interface driver libusual
../6/dmesg_all:670:[    2.081629] usb 1-1: new high-speed USB device number 2 using ehci_hcd
../6/dmesg_all:675:[    2.324903] usb 2-1: new high-speed USB device number 2 using ehci_hcd
../6/dmesg_all:678:[    2.528483] usb 1-1.3: new low-speed USB device number 3 using ehci_hcd
../6/dmesg_all:679:[    2.703986] usb 1-1.4: new full-speed USB device number 4 using ehci_hcd
../6/dmesg_all:680:[    2.867508] usb 2-1.6: new low-speed USB device number 3 using ehci_hcd
../6/dmesg_all:683:[    3.031172] usb 2-1.7: new low-speed USB device number 4 using ehci_hcd
../6/dmesg_all:718:[    3.198525] usb 2-1.8: new low-speed USB device number 5 using ehci_hcd
../6/dmesg_all:720:[    3.209016] input: HOLTEK USB Keyboard as /devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1.3/1-1.3:1.0/input/input2
../6/dmesg_all:721:[    3.209115] generic-usb 0003:1233:E007.0001: input,hidraw0: USB HID v1.00 Keyboard [HOLTEK USB Keyboard] on usb-0000:00:1a.0-1.3/input0
../6/dmesg_all:722:[    3.227648] input: HOLTEK USB Keyboard as /devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1.3/1-1.3:1.1/input/input3
../6/dmesg_all:723:[    3.227891] generic-usb 0003:1233:E007.0002: input,hidraw1: USB HID v1.00 Mouse [HOLTEK USB Keyboard] on usb-0000:00:1a.0-1.3/input1
../6/dmesg_all:724:[    3.229594] input: HID 062a:0000 as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.6/2-1.6:1.0/input/input4
../6/dmesg_all:725:[    3.229792] generic-usb 0003:062A:0000.0003: input,hidraw2: USB HID v1.10 Mouse [HID 062a:0000] on usb-0000:00:1d.0-1.6/input0
../6/dmesg_all:726:[    3.231945] input: Logitech USB Optical Mouse as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.7/2-1.7:1.0/input/input5
../6/dmesg_all:727:[    3.232171] generic-usb 0003:046D:C05A.0004: input,hidraw3: USB HID v1.11 Mouse [Logitech USB Optical Mouse] on usb-0000:00:1d.0-1.7/input0
../6/dmesg_all:728:[    3.232186] usbcore: registered new interface driver usbhid
../6/dmesg_all:729:[    3.232188] usbhid: USB HID core driver
../6/dmesg_all:730:[    3.305464] input: Dell Dell USB Entry Keyboard as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.8/2-1.8:1.0/input/input6
../6/dmesg_all:731:[    3.305543] generic-usb 0003:413C:2107.0005: input,hidraw4: USB HID v1.10 Keyboard [Dell Dell USB Entry Keyboard] on usb-0000:00:1d.0-1.8/input0
../6/dmesg_all:773:[   14.118893] usbcore: registered new interface driver btusb
../6/dmesg_all:864:[ 5877.235181] usb 2-1.2: new full-speed USB device number 6 using ehci_hcd
../6/dmesg_all:866:[ 5877.448507] input: Sony PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.2/2-1.2:1.0/input/input12
../6/dmesg_all:867:[ 5877.448732] sony 0003:054C:0268.0006: input,hiddev0,hidraw5: USB HID v1.11 Joystick [Sony PLAYSTATION(R)3 Controller] on usb-0000:00:1d.0-1.2/input0
../6/dmesg_all:869:[ 5878.752634] input: Sony PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.2/2-1.2:1.0/input/input13
../6/dmesg_all:870:[ 5878.753186] sony 0003:054C:0268.0007: input,hiddev0,hidraw5: USB HID v1.11 Joystick [Sony PLAYSTATION(R)3 Controller] on usb-0000:00:1d.0-1.2/input0
../6/dmesg_all:871:[ 6098.098479] usb 2-1.2: USB disconnect, device number 6
../6/dmesg_all:872:[ 6099.060871] usb 2-1.2: new full-speed USB device number 7 using ehci_hcd
../6/dmesg_all:874:[ 6099.367544] input: Sony PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.2/2-1.2:1.0/input/input14
../6/dmesg_all:875:[ 6099.367998] sony 0003:054C:0268.0008: input,hiddev0,hidraw5: USB HID v1.11 Joystick [Sony PLAYSTATION(R)3 Controller] on usb-0000:00:1d.0-1.2/input0
../6/dmesg_all:877:[ 6100.901171] input: Sony PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.2/2-1.2:1.0/input/input15
../6/dmesg_all:878:[ 6100.901727] sony 0003:054C:0268.0009: input,hiddev0,hidraw5: USB HID v1.11 Joystick [Sony PLAYSTATION(R)3 Controller] on usb-0000:00:1d.0-1.2/input0
../6/dmesg_all:883:[ 6250.749084] usb 2-1.2: USB disconnect, device number 7
../6/dmesg_all:886:[ 6269.581233] usb 2-1.2: new full-speed USB device number 8 using ehci_hcd
../6/dmesg_all:888:[ 6270.094104] input: Sony PLAYSTATION(R)3 Controller as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.2/2-1.2:1.0/input/input18
../6/dmesg_all:889:[ 6270.094654] sony 0003:054C:0268.000A: input,hiddev0,hidraw5: USB HID v1.11 Joystick [Sony PLAYSTATION(R)3 Controller] on usb-0000:00:1d.0-1.2/input0
../6/R_sixad:592:abobani/Dropbox/R/www/cache.rdf:55:                   NS1:content=" This is the html version of the file http://qtsixa.sourceforge.net/manual.pdf. Google automatically generates html versions of documents as we crawl the web. QtSixA/sixad Manual Page 1 QtSixA/sixad Manual Contents Intro page 2 The Sixaxis in Linux page 2 The sixad driver page 3 Usage page 3 Configure sixad page 4 The sixad configuration file specification page 4 QtSixA – The interface page 7 The sixad utilities page 8 hidraw-dump page 8 sixpair[-kbd] page 8 sixad-jack page 8 sixad-raw Connecting and disconnecting devices page 9 Sixaxis/DualShock3 page 9 Keypad page 9 Remote page 9 QtSixA/sixad Manual 1/9 Page 2 Intro QtSixA is an interface to 'sixad', an application that can connect PS3 hardware (Sixaxis/DualShock3, Keypads and Remotes) to a Linux-compatible machine. &quot;QtSixA&quot; is the GUI (interface), while &quot;sixad&quot; is the backend C++ code. Currently sixad supports: - Sixaxis/DualShock3 (buttons, axis, accelerometers, leds and rumble) - PS3 Keypads - PS3 BD Remotes - PS3 3in1 KeyMote (joystick to mouse/keyboard driver) There's also other small utilities that can be helpful for users: - hidraw-dump Dumps event information from hidraw devices, just like hcidump does for bluetooth - sixpair/sixpair-kbd Pairs the sixaxis (or *-kbd for keypads) to the current machine's bluetooth adapter, or the 1st command-line argument. Note that BD Remotes don't need pairing with sixad. - sixad-jack Makes a sixaxis available as a MIDI keyboard. - sixad-raw Registers a new joystick using a sixaxis hidraw interface, useful to get accelerometers working on USB mode. - sixad-3in1 Allows to use 3in1 KeyMote joystick buttons as mouse/keyboard, like sixad originally does. These tools are more deeply explained later in this file. The Sixaxis in Linux The sixaxis works out-of-the box in Linux; just get yourself an USB cable, connect the sixaxis to the computer, and press the 'PS' button on the sixaxis to activate it. You won't get all sixaxis features this way though – leds will keep blinking, accelerometers and rumble won't work. Note: when connected over USB the sixaxis leds will stop blinking when the internal battery is fully charged. The 3in1 KeyMote also works by default. Just connect the dock over usb, hold the PS button on the keymote. You can use 'sixad-3in1' to get extra functionality. There is already work in progress to make the leds and rumble work by default in Linux, it's just a matter of time now. Same thing applies to bluetooth too (through BlueZ). QtSixA solves this by implementing a custom driver (based on linux uinput) that supports leds, accelerometers and rumble. The default way to handle sixaxis in QtSixA is bluetooth, but it can be used for USBas well (no leds or rumble support though). QtSixA/sixad Manual 2/9 Page 3 The sixad driver &quot;sixad&quot; is a small driver based on good old 'hidd' (back on the bluez 3.xx days...). It currently supports sixaxis, keypads and remotes. The keypad support will actually load the system default driver, so wherever it will work or not depends on each system. Please note that sixad is a bluetooth application, not meant for USB. For USB related tasks, check the 'sixad-raw' utility. Another thing worth knowing is that sixad uses a different bluetooth method than the new BlueZ 4.xx stack (present on many recent distros), so they will probably conflict each other. sixad tries to work around this, but it's not always possible. Check the 'Known issues' section if you find any problems. Usage When ran with no command-line arguments, sixad will print this: usage: sixad &lt;command&gt; command can be: -h, --help Show help (this message) -v, --version Show sixad version -s, --start Start sixad --stop Stop sixad --remote BD Remote mode -r, --restore Restore regular bluetooth --boot-yes Auto-starts sixad at boot time --boot-no Does not auto-start sixad at boot time You can also check: sixad-raw, sixad-notify The 'help' command will simply display this message, while 'version' will display the current sixad version. All other commands will require root access. The 'start' command will start sixad (and stop regular bluetooth if needed). 'hcid' will be used here to keep the regular bluetooth from picking up bluetooth packets, which are needed for sixad. Once you've connected all your sixaxis and keypads, you can use the 'restore' command to restore the regular bluetooth if needed. The 'stop' command will stop sixad and all services (sixad-remote and sixad-sixaxis), disconnecting all sixad-related devices in the process. After stopping sixad, regular bluetooth is restored. The 'remote' command is used to connect PS3 BD Remotes to the computer (note that pairing is not needed here). After running this command, hold Enter+Start buttons on the remote to connect. Only 1 remote can be connected at a time. Please note that, when searching for remotes, the bluetooth device will be very busy; if you have other bluetooth devices currently connected, they will seem slower during this time. When sixad finds a remote, it will stop searching (remember – only 1 remote at a time), so you're good again after that. But, if sixad finds a remote and it somehow disconnects, it will start the search again. Note: You should probably connect the remotes first, then the sixaxis and keypads. Much easier this way... The 'restore' command will restore the regular bluetooth. It's the same as in 'stop', but sixad and connected devices won't be affected. The 'boot-yes' and 'boot-no' will enable sixad to start (or not) during boot. When this method is activated, pressing the PS button will connect any sixaxis or keypad right away, but regular bluetooth won't work. Note: before you can connect over bluetooth, you need to pair your sixaxis or keypad to the current computer. Check the sixad utilities section, sixpair, for that. QtSixA/sixad Manual 3/9 Page 4 Configure sixad The sixad global configuration is stored in '/etc/default/sixad'. It currently has two options – DEBUG and LEGACY. To change them, use something like 'DEBUG=1', where the value can be 0 or 1 (off or on, respectively). When DEBUG is on, sixad will print additional messages when ran. When LEGACY is on, sixad will on longer manage the sixaxis. Instead the default joystick driver will be used (ie, no leds, accelerometers or rumble). System configuration is stored in '/var/lib/sixad/', as follows: /var/lib/sixad/ - Main sixad folder /var/lib/sixad/00:XX:00:XX:00:XX/ - Specific bluetooth adapter settings folder, ignore /var/lib/sixad/profiles/ - Device profiles folder /var/lib/sixad/profiles/default - Default sixad configuration file /var/lib/sixad/profiles/hidraw - Default sixad configuration file for hidraw devices /var/lib/sixad/profiles/00:XX:00:XX:00:XX - Specific device configuration file If some of these files don't exist yet, sixad will use internal defaults. All the users in the group 'sixad' will have read+write permissions over those files. sixad will try to load the specifc device configuration first. If not found it tries to load the 'default' one. If that is not found either, it will use the internal default configuration. sixad-raw will first try to load the 'hidraw' file, then 'default'. The sixad configuration file specification The files inside '/var/lib/sixad/' folow these rules: - Lines started with # are ignored - Empty lines are ignored - Lines with data must be &quot;string_of_config&lt;space&gt;value&quot;, like this: &quot;enable_leds 1&quot; - 'string_of_config' must only contain ASCII characters (ie, no 'ç' or 'é') - 'value' must always be a number (0/1 is used for off/on) - only 1 data per line sixad will handle missing data, but resolve to internal defaults. If a specific device configuration doesn't have &quot;enable_leds&quot;, sixad will load the internal default value for that, even if the 'default' file still has it. Example: File '/var/lib/sixad/profiles/00:XX:00:XX:00:XX' is missing some configuration, but the file '/var/lib/sixad/profiles/default' has it. Still, in this case, the missing configuration in the 1st file will not be loaded from the 2nd one, but from internal defaults. The internal defaults are: - Enable leds, auto-set by joystick number - Enable joystick (buttons, axis, sensible buttons and accelerometers) - Enable rumble, new mode - Enable connection animation (led+rumble) - Enable all remote features (numeric, dvd, direcctional and multimedia) - Enable auto-disconnect if no action after 30 minutes - Disable input (mouse and keyboard) A complete file (with all currently available settings) is shown in the next page. QtSixA/sixad Manual 4/9 Page 5 # ########################## # sixad configuration file # ########################## # # Features enable_leds 1 enable_joystick 0 enable_input 1 enable_remote 0 enable_rumble 0 enable_timeout 0 # LED led_n_auto 1 led_n_number 1 led_anim 0 # Joystick enable_buttons 1 enable_sbuttons 1 enable_axis 1 enable_accel 1 enable_accon 0 enable_speed 0 enable_pos 0 # Input - None key_select 0 key_l3 0 key_r3 0 key_start 0 key_up 0 key_right 0 key_down 0 key_left 0 key_l2 0 key_r2 0 key_l1 0 key_r1 0 key_tri 0 key_cir 0 key_squ 0 key_cro 0 key_ps 0 axis_left_type 0 axis_left_up 0 axis_left_right 0 axis_left_down 0 axis_left_left 0 axis_right_type 0 axis_right_up 0 axis_right_right 0 axis_right_down 0 axis_right_left 0 axis_speed 6 use_lr3 0 # Remote remote_numberic 1 remote_dvd 1 remote_directional 1 remote_multimedia 1 # Rumble old_rumble_mode 0 # Timeout timeout_mins 30 # Misc out_of_reach_disconnects 0 QtSixA/sixad Manual 5/9 Page 6 Here's a description of the values: String Possible values Information Features enable_leds 0 or 1 Wherever to use leds. If not, all leds will be off enable_joystick 0 or 1 Wherever to register a joystick for this device enable_input 0 or 1 Wherever to register a mouse+keyboard for this device enable_remote 0 or 1 Wherever to use specific remote features (remote only) enable_rumble 0 or 1 Wherever to use rumble enable_timeout 0 or 1 Wherever to auto-disconnect after unused for some time LED led_n_auto 0 or 1 Wherever to use led according to joystick number led_n_number 1&lt;-&gt;10 Specific led number (if led_n_auto is off) led_anim 0 or 1 Wherever to animate new connections (will also rumble, if active) Joystick enable_buttons 0 or 1 Wherever to handle button events enable_sbuttons 0 or 1 Wherever to handle sensible button events enable_axis 0 or 1 Wherever to handle axis events enable_accel 0 or 1 Wherever to handle accelerometer events enable_accon 0 or 1 Wherever to handle &quot;acceleration&quot; events (calculated with accelerometers) enable_speed 0 or 1 Wherever to handle &quot;speed&quot; events (calculated with accelerometers) enable_pos 0 or 1 Wherever to handle &quot;position&quot; events (calculated with accelerometers) Input key_* 0&lt;-&gt;MAX What key this button will provide (see your kernel's input.h for a list) axis_left_type 0, 2 or 3 0 - don't use axis; 2 - use for keys; 3 - use for mouse axis_left_up 0&lt;-&gt;MAX In keys mode, used as key_*: in mouse mode, see below (1) axis_left_right 0&lt;-&gt;MAX In keys mode, used as key_*: in mouse mode, see below (1) axis_left_down 0&lt;-&gt;MAX In keys mode, used as key_*: in mouse mode does nothing axis_left_left 0&lt;-&gt;MAX In keys mode, used as key_*: in mouse mode does nothing axis_right_* (same) (same thing as with axis_left_*) axis_speed 1&lt;-&gt;9 Axis speed multiplicator; default value is 6 (higher value means slower mouse) use_lr3 0 or 1 When on, L3 will enable/disable keys while R3 does it for mouse Remote remote_numeric 0 or 1 Wherever to use the numberic keys on the remote remote_dvd 0 or 1 Wherever to use the DVD keys on the remote remote_directional 0 or 1 Wherever to use the directional keys on the remote remote_multimedia 0 or 1 Wherever to use the multimedia keys on the remote, see below (2) Rumble old_rumble_mode 0 or 1 Wherever to use the old linux rumble mode or not; usually off Timeout timeout_mins 1&lt;-&gt;+inf Timeout in minutes used to disconnect when no unused Misc out_of_reach_disconnects 0 or 1 Wherever to auto-disconnect when device goes too far (sixaxis only, experimental) Notes from the table: 1 – When axis_left_up/right are set to mouse mode, value can be REL_X, REL_Y, REL_WHEEL or REL_HWHEEL. See your kernel's input.h file to know the real values. 2 – These are keys defined on the kernel, not the XF86 ones (the real multimedia keys). Most applications won't handle these properly. QtSixA/sixad Manual 6/9 Page 7 QtSixA – The interface Important note: Although the interface is very useful for setting up things like profiles, it's being targetted for complete rewrite soon. For this reason it will not be explained in this manual. Once ready, the manual will be updated, and a proper QtSixA section will be written. Please continue to the next page. QtSixA/sixad Manual 7/9 Page 8 The sixad utilities Here is a detailed explanation of each utility that comes with sixad. hidraw-dump This utility will dump event information from hidraw devices, just like hcidump does for bluetooth. Simply run: $ [sudo] hidraw-dump /dev/hidrawX Where 'X' is the hidraw interface number. sixpair[-kbd] This utility pair you sixaxis to the computer (*-kbd for keypad), required to connect over bluetooth. It accepts one command-line argument, which is the MAC to pair with (if no arguments, it will try to get the default MAC from your default bluetooth adapter). You need to connect your bluetooth adapter (and turn it on, if such switch exists), and your sixaxis or keypad via USB. Once ready, run: $ [sudo] sixpair[-kbd] [00:XX:00:XX:00:XX] Use *-kbd for keypads. The 1st argument (00:XX...) is optional. PS3 BD Remote don't need this. sixad-jack This utility will turn a sixaxis into a MIDI keyboard. This is made through JACK, so make sure JACK is running first. It has one command-line option '-b'. When used, black keys will be handled (default is to use white keys only). The key mapping is as follows: Select - Change current octave (from 3 to 6) Start - Start/Stop JACK transport L3 - Transport backwards R3 - Transport forwards PS - Panic button (other keys will play notes, using sensible buttons) Left Axis vertical - CC Modulation Right Axis horizontal - CC Pan Accelerometer X - CC Misc 1 (0x10) Accelerometer Y - CC Misc 2 (0x11) Accelerometer Z - CC Misc 3 (0x12) Make sure you enabled sensible buttons for this sixaxis, since that is used for the key presses (sensitive!) You can enable/disable features in sixad (ie, disable accelerometers to disable CC Misc events) Run it like this: $ sixad-jack [-b] /dev/input/jsX Where 'X' is the sixaxis joystick number. The '-b' argument is optional. Note: You should use this utility together with sixad. Using this on regular sixaxis (USB) will not work properly. sixad-raw This utility will make a hidraw device of a sixaxis work with the sixad driver. It's useful for accelerometers and input (ie, mouse+keyboard). It will not handle leds and rumble though. Simply run: $ [sudo] sixad-raw /dev/hidrawX Where 'X' is the hidraw interface number. sixad-3in1 This utility will make the 3in1 KeyMote use joystick axis/buttons as mouse/keyboard. The input profile is hardcoded (same as 'KDE' in QtSixA), and the use_lr3 option is always active. Simply run: $ [sudo] sixad-3in1 /dev/hidrawX Where 'X' is the hidraw interface number (the keymote registers 2 hidraw interfaces, use the last one). QtSixA/sixad Manual 8/9 Page 9 Connecting and disconnecting devices Sixaxis/DualShock3 If you want to connect and work via USB, you're in the wrong place. Sixaxis work in Linux out-of-the-box, please read the intro. If you want to access the accelerometers via USB, then it's a different story. In this case, configure sixad for 'hidraw' and use the sixad-raw utility (this information was explained before in this document). To connect over bluetooth, if you first need to pair your sixaxis. For that, see the sixad utilities, sixpair section. Once done, start sixad with 'sixad -s' and press the PS button. On some distributions, bluetooth is not automatically activated. You can try 'sixad --stop; sixad -s' in this case. To disconnect, press and hold the PS button for 12 seconds. Keypad Keypads are not currently working via USB on Linux. If you got it working via USB, let me know! To connect over bluetooth, do the same thing as for the sixaxis, as explained above. Note that sixad will use the system driver for the keypad, so wherever it will work fine or not depends on your current distribution. To disconnect, just push the switch for it. The keypad will auto-disconnect itself after being unused for 5 minutes though. Remote Remotes cannot be used on USB. For bluetooth, follow the explanation in the main sixad section, 'remote' argument option. There's no way to disconnect a remote via hardware. You'll have to use QtSixA or kill sixad to force it to disconnect. Still, note that sixad will auto-disconnect any device after being unused for 30 minutes. 3in1 KeyMote Just connect the dock via USB, and hold the PS button. The red light will flash quickly when connected. See the sixad utilities section for tips on how to make it's joystick axis and buttons work as mouse/keyboard. QtSixA/sixad Manual 9/9 " />
